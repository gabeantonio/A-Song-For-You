{"ast":null,"code":"import React, { forwardRef, useRef, useState, useEffect } from 'react';\nimport { useReducedMotion, useUncontrolled, useId, useResizeObserver, useIsomorphicEffect, useMergedRef } from '@mantine/hooks';\nimport { useComponentDefaultProps, useMantineTheme } from '@mantine/styles';\nimport useStyles, { WRAPPER_PADDING } from './SegmentedControl.styles.js';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst defaultProps = {\n  disabled: false,\n  size: \"sm\",\n  transitionDuration: 200\n};\nconst SegmentedControl = forwardRef((props, ref) => {\n  var _b, _c, _d, _e;\n\n  const _a = useComponentDefaultProps(\"SegmentedControl\", defaultProps, props),\n        {\n    className,\n    disabled,\n    data: _data,\n    name,\n    value,\n    onChange,\n    color,\n    fullWidth,\n    radius,\n    size,\n    transitionDuration,\n    transitionTimingFunction,\n    classNames,\n    styles,\n    defaultValue,\n    orientation,\n    unstyled\n  } = _a,\n        others = __objRest(_a, [\"className\", \"disabled\", \"data\", \"name\", \"value\", \"onChange\", \"color\", \"fullWidth\", \"radius\", \"size\", \"transitionDuration\", \"transitionTimingFunction\", \"classNames\", \"styles\", \"defaultValue\", \"orientation\", \"unstyled\"]);\n\n  const theme = useMantineTheme();\n  const shouldReduceMotion = useReducedMotion();\n  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;\n\n  const data = _data.map(item => typeof item === \"string\" ? {\n    label: item,\n    value: item\n  } : item);\n\n  const mounted = useRef();\n  const [shouldAnimate, setShouldAnimate] = useState(false);\n  const [_value, handleValueChange] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: Array.isArray(data) ? (_e = (_d = (_b = data.find(item => !item.disabled)) == null ? void 0 : _b.value) != null ? _d : (_c = data[0]) == null ? void 0 : _c.value) != null ? _e : null : null,\n    onChange\n  });\n  const {\n    classes,\n    cx\n  } = useStyles({\n    size,\n    fullWidth,\n    color,\n    radius,\n    shouldAnimate: reduceMotion || !shouldAnimate,\n    transitionDuration,\n    transitionTimingFunction,\n    orientation\n  }, {\n    classNames,\n    styles,\n    unstyled,\n    name: \"SegmentedControl\"\n  });\n  const [activePosition, setActivePosition] = useState({\n    width: 0,\n    height: 0,\n    translate: [0, 0]\n  });\n  const uuid = useId(name);\n  const refs = useRef({});\n  const [observerRef, containerRect] = useResizeObserver();\n  useIsomorphicEffect(() => {\n    if (!mounted.current) {\n      mounted.current = true;\n      setShouldAnimate(false);\n    } else {\n      setShouldAnimate(true);\n    }\n  });\n  useEffect(() => {\n    if (_value in refs.current && observerRef.current) {\n      const element = refs.current[_value];\n      const elementRect = element.getBoundingClientRect();\n      const scaledValue = element.offsetWidth / elementRect.width;\n      const width = elementRect.width * scaledValue || 0;\n      const height = elementRect.height * scaledValue || 0;\n      const offsetRight = containerRect.width - element.parentElement.offsetLeft + WRAPPER_PADDING - width;\n      const offsetLeft = element.parentElement.offsetLeft - WRAPPER_PADDING;\n      setActivePosition({\n        width,\n        height,\n        translate: [theme.dir === \"rtl\" ? offsetRight : offsetLeft, element.parentElement.offsetTop - WRAPPER_PADDING]\n      });\n    }\n  }, [_value, containerRect]);\n  const controls = data.map(item => /* @__PURE__ */React.createElement(\"div\", {\n    className: cx(classes.control, {\n      [classes.controlActive]: _value === item.value\n    }),\n    key: item.value\n  }, /* @__PURE__ */React.createElement(\"input\", {\n    className: classes.input,\n    disabled: disabled || item.disabled,\n    type: \"radio\",\n    name: uuid,\n    value: item.value,\n    id: `${uuid}-${item.value}`,\n    checked: _value === item.value,\n    onChange: () => handleValueChange(item.value)\n  }), /* @__PURE__ */React.createElement(\"label\", {\n    className: cx(classes.label, {\n      [classes.labelActive]: _value === item.value,\n      [classes.disabled]: disabled || item.disabled\n    }),\n    htmlFor: `${uuid}-${item.value}`,\n    ref: node => {\n      refs.current[item.value] = node;\n    }\n  }, item.label)));\n\n  if (data.length === 0) {\n    return null;\n  }\n\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.root, className),\n    ref: useMergedRef(observerRef, ref)\n  }, others), typeof _value === \"string\" && shouldAnimate && /* @__PURE__ */React.createElement(Box, {\n    component: \"span\",\n    className: classes.active,\n    sx: {\n      width: activePosition.width,\n      height: activePosition.height,\n      transform: `translate(${activePosition.translate[0]}px, ${activePosition.translate[1]}px )`\n    }\n  }), controls);\n});\nSegmentedControl.displayName = \"@mantine/core/SegmentedControl\";\nexport { SegmentedControl };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","defaultProps","disabled","size","transitionDuration","SegmentedControl","forwardRef","props","ref","_b","_c","_d","_e","_a","useComponentDefaultProps","className","data","_data","name","onChange","color","fullWidth","radius","transitionTimingFunction","classNames","styles","defaultValue","orientation","unstyled","others","theme","useMantineTheme","shouldReduceMotion","useReducedMotion","reduceMotion","respectReducedMotion","map","item","label","mounted","useRef","shouldAnimate","setShouldAnimate","useState","_value","handleValueChange","useUncontrolled","finalValue","Array","isArray","find","classes","cx","useStyles","activePosition","setActivePosition","width","height","translate","uuid","useId","refs","observerRef","containerRect","useResizeObserver","useIsomorphicEffect","current","useEffect","element","elementRect","getBoundingClientRect","scaledValue","offsetWidth","offsetRight","parentElement","offsetLeft","WRAPPER_PADDING","dir","offsetTop","controls","React","createElement","control","controlActive","input","type","id","checked","labelActive","htmlFor","node","length","Box","root","useMergedRef","component","active","sx","transform","displayName"],"sources":["../../src/SegmentedControl/SegmentedControl.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState, forwardRef } from 'react';\nimport {\n  useReducedMotion,\n  useResizeObserver,\n  useUncontrolled,\n  useId,\n  useMergedRef,\n  useIsomorphicEffect,\n} from '@mantine/hooks';\nimport {\n  DefaultProps,\n  MantineNumberSize,\n  MantineSize,\n  MantineColor,\n  Selectors,\n  useComponentDefaultProps,\n  useMantineTheme,\n} from '@mantine/styles';\nimport { Box } from '../Box';\nimport useStyles, {\n  WRAPPER_PADDING,\n  SegmentedControlStylesParams,\n} from './SegmentedControl.styles';\n\nexport interface SegmentedControlItem {\n  value: string;\n  label: React.ReactNode;\n  disabled?: boolean;\n}\n\nexport type SegmentedControlStylesNames = Selectors<typeof useStyles>;\n\nexport interface SegmentedControlProps\n  extends DefaultProps<SegmentedControlStylesNames, SegmentedControlStylesParams>,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'value' | 'onChange'> {\n  /** Data based on which controls are rendered */\n  data: string[] | SegmentedControlItem[];\n\n  /** Current selected value */\n  value?: string;\n\n  /** Disabled input state */\n  disabled?: boolean;\n\n  /** Called when value changes */\n  onChange?(value: string): void;\n\n  /** Name of the radio group, default to random id */\n  name?: string;\n\n  /** True if component should have 100% width */\n  fullWidth?: boolean;\n\n  /** Active control color from theme.colors, defaults to white in light color scheme and theme.colors.dark[9] in dark */\n  color?: MantineColor;\n\n  /** Controls font-size, paddings and height */\n  size?: MantineSize;\n\n  /** Border-radius from theme or number to set border-radius in px */\n  radius?: MantineNumberSize;\n\n  /** Transition duration in ms, set to 0 to turn off transitions */\n  transitionDuration?: number;\n\n  /** Transition timing function for all transitions, defaults to theme.transitionTimingFunction */\n  transitionTimingFunction?: string;\n\n  /** Default value for uncontrolled component */\n  defaultValue?: string;\n\n  /** Display Vertically */\n  orientation?: 'vertical' | 'horizontal';\n}\n\nconst defaultProps: Partial<SegmentedControlProps> = {\n  disabled: false,\n  size: 'sm',\n  transitionDuration: 200,\n};\n\nexport const SegmentedControl = forwardRef<HTMLDivElement, SegmentedControlProps>((props, ref) => {\n  const {\n    className,\n    disabled,\n    data: _data,\n    name,\n    value,\n    onChange,\n    color,\n    fullWidth,\n    radius,\n    size,\n    transitionDuration,\n    transitionTimingFunction,\n    classNames,\n    styles,\n    defaultValue,\n    orientation,\n    unstyled,\n    ...others\n  } = useComponentDefaultProps('SegmentedControl', defaultProps, props);\n  const theme = useMantineTheme();\n  const shouldReduceMotion = useReducedMotion();\n  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;\n\n  const data = _data.map(\n    (item: string | SegmentedControlItem): SegmentedControlItem =>\n      typeof item === 'string' ? { label: item, value: item } : item\n  );\n  const mounted = useRef<Boolean>();\n\n  const [shouldAnimate, setShouldAnimate] = useState(false);\n  const [_value, handleValueChange] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: Array.isArray(data)\n      ? data.find((item) => !item.disabled)?.value ?? data[0]?.value ?? null\n      : null,\n    onChange,\n  });\n\n  const { classes, cx } = useStyles(\n    {\n      size,\n      fullWidth,\n      color,\n      radius,\n      shouldAnimate: reduceMotion || !shouldAnimate,\n      transitionDuration,\n      transitionTimingFunction,\n      orientation,\n    },\n    { classNames, styles, unstyled, name: 'SegmentedControl' }\n  );\n\n  const [activePosition, setActivePosition] = useState({\n    width: 0,\n    height: 0,\n    translate: [0, 0],\n  });\n  const uuid = useId(name);\n  const refs = useRef<Record<string, HTMLLabelElement>>({});\n  const [observerRef, containerRect] = useResizeObserver();\n\n  useIsomorphicEffect(() => {\n    if (!mounted.current) {\n      mounted.current = true;\n      setShouldAnimate(false);\n    } else {\n      setShouldAnimate(true);\n    }\n  });\n\n  useEffect(() => {\n    if (_value in refs.current && observerRef.current) {\n      const element = refs.current[_value];\n      const elementRect = element.getBoundingClientRect();\n      const scaledValue = element.offsetWidth / elementRect.width;\n      const width = elementRect.width * scaledValue || 0;\n      const height = elementRect.height * scaledValue || 0;\n\n      const offsetRight =\n        containerRect.width - element.parentElement.offsetLeft + WRAPPER_PADDING - width;\n      const offsetLeft = element.parentElement.offsetLeft - WRAPPER_PADDING;\n\n      setActivePosition({\n        width,\n        height,\n        translate: [\n          theme.dir === 'rtl' ? offsetRight : offsetLeft,\n          element.parentElement.offsetTop - WRAPPER_PADDING,\n        ],\n      });\n    }\n  }, [_value, containerRect]);\n\n  const controls = data.map((item) => (\n    <div\n      className={cx(classes.control, { [classes.controlActive]: _value === item.value })}\n      key={item.value}\n    >\n      <input\n        className={classes.input}\n        disabled={disabled || item.disabled}\n        type=\"radio\"\n        name={uuid}\n        value={item.value}\n        id={`${uuid}-${item.value}`}\n        checked={_value === item.value}\n        onChange={() => handleValueChange(item.value)}\n      />\n\n      <label\n        className={cx(classes.label, {\n          [classes.labelActive]: _value === item.value,\n          [classes.disabled]: disabled || item.disabled,\n        })}\n        htmlFor={`${uuid}-${item.value}`}\n        ref={(node) => {\n          refs.current[item.value] = node;\n        }}\n      >\n        {item.label}\n      </label>\n    </div>\n  ));\n\n  if (data.length === 0) {\n    return null;\n  }\n\n  return (\n    <Box className={cx(classes.root, className)} ref={useMergedRef(observerRef, ref)} {...others}>\n      {typeof _value === 'string' && shouldAnimate && (\n        <Box\n          component=\"span\"\n          className={classes.active}\n          sx={{\n            width: activePosition.width,\n            height: activePosition.height,\n            transform: `translate(${activePosition.translate[0]}px, ${activePosition.translate[1]}px )`,\n          }}\n        />\n      )}\n\n      {controls}\n    </Box>\n  );\n});\n\nSegmentedControl.displayName = '@mantine/core/SegmentedControl';\n"]},"metadata":{},"sourceType":"module"}