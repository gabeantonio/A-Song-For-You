{"ast":null,"code":"import React from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { ChipGroupProvider } from '../ChipGroup.context.js';\nimport { Group } from '../../Group/Group.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst defaultProps = {\n  spacing: \"xs\"\n};\n\nfunction ChipGroup(props) {\n  const _a = useComponentDefaultProps(\"ChipGroup\", defaultProps, props),\n        {\n    value,\n    defaultValue,\n    onChange,\n    spacing,\n    multiple,\n    children,\n    unstyled\n  } = _a,\n        others = __objRest(_a, [\"value\", \"defaultValue\", \"onChange\", \"spacing\", \"multiple\", \"children\", \"unstyled\"]);\n\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: multiple ? [] : null,\n    onChange\n  });\n\n  const isChipSelected = val => Array.isArray(_value) ? _value.includes(val) : val === _value;\n\n  const handleChange = event => {\n    const val = event.currentTarget.value;\n\n    if (Array.isArray(_value)) {\n      setValue(_value.includes(val) ? _value.filter(v => v !== val) : [..._value, val]);\n    } else {\n      setValue(val);\n    }\n  };\n\n  return /* @__PURE__ */React.createElement(ChipGroupProvider, {\n    value: {\n      isChipSelected,\n      onChange: handleChange,\n      multiple\n    }\n  }, /* @__PURE__ */React.createElement(Group, __spreadValues({\n    spacing,\n    unstyled\n  }, others), children));\n}\n\nChipGroup.displayName = \"@mantine/core/ChipGroup\";\nexport { ChipGroup };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","defaultProps","spacing","ChipGroup","props","_a","useComponentDefaultProps","defaultValue","onChange","multiple","children","unstyled","others","_value","setValue","useUncontrolled","finalValue","isChipSelected","val","Array","isArray","includes","handleChange","event","currentTarget","filter","v","React","createElement","ChipGroupProvider","Group","displayName"],"sources":["../../../src/Chip/ChipGroup/ChipGroup.tsx"],"sourcesContent":["import React from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { MantineNumberSize, useComponentDefaultProps } from '@mantine/styles';\nimport { Group, GroupProps } from '../../Group';\nimport { ChipGroupProvider } from '../ChipGroup.context';\n\nexport interface ChipGroupProps<T extends boolean = false>\n  extends Omit<GroupProps, 'value' | 'defaultValue' | 'onChange' | 'classNames' | 'styles'> {\n  /** Key of theme.spacing or number to set gap in px */\n  spacing?: MantineNumberSize;\n\n  /** Allow multiple values to be selected at a time */\n  multiple?: T;\n\n  /** Controlled component value */\n  value?: T extends true ? string[] : string;\n\n  /** Uncontrolled component initial value */\n  defaultValue?: T extends true ? string[] : string;\n\n  /** Called when value changes */\n  onChange?(value: T extends true ? string[] : string): void;\n\n  /** <Chip /> components */\n  children?: React.ReactNode;\n}\n\nconst defaultProps: Partial<ChipGroupProps<false>> = {\n  spacing: 'xs',\n};\n\nexport function ChipGroup<T extends boolean>(props: ChipGroupProps<T>) {\n  const { value, defaultValue, onChange, spacing, multiple, children, unstyled, ...others } =\n    useComponentDefaultProps('ChipGroup', defaultProps as any, props);\n\n  const [_value, setValue] = useUncontrolled<string | string[]>({\n    value,\n    defaultValue,\n    finalValue: multiple ? [] : null,\n    onChange,\n  });\n\n  const isChipSelected = (val: string) =>\n    Array.isArray(_value) ? _value.includes(val) : val === _value;\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const val = event.currentTarget.value;\n    if (Array.isArray(_value)) {\n      setValue(_value.includes(val) ? _value.filter((v) => v !== val) : [..._value, val]);\n    } else {\n      setValue(val);\n    }\n  };\n\n  return (\n    <ChipGroupProvider value={{ isChipSelected, onChange: handleChange, multiple }}>\n      <Group spacing={spacing} unstyled={unstyled} {...others}>\n        {children}\n      </Group>\n    </ChipGroupProvider>\n  );\n}\n\nChipGroup.displayName = '@mantine/core/ChipGroup';\n"]},"metadata":{},"sourceType":"module"}