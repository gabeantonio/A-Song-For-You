{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { Curve } from './Curve/Curve.js';\nimport { getCurves } from './get-curves/get-curves.js';\nimport useStyles from './RingProgress.styles.js';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst defaultProps = {\n  size: 120,\n  thickness: 12\n};\nconst RingProgress = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"RingProgress\", defaultProps, props),\n        {\n    className,\n    style,\n    label,\n    sections,\n    size,\n    thickness,\n    classNames,\n    styles,\n    roundCaps,\n    unstyled\n  } = _a,\n        others = __objRest(_a, [\"className\", \"style\", \"label\", \"sections\", \"size\", \"thickness\", \"classNames\", \"styles\", \"roundCaps\", \"unstyled\"]);\n\n  const {\n    classes,\n    cx\n  } = useStyles(null, {\n    classNames,\n    styles,\n    unstyled,\n    name: \"RingProgress\"\n  });\n  const curves = getCurves({\n    size,\n    thickness,\n    sections,\n    renderRoundedLineCaps: roundCaps\n  }).map((curve, index) => {\n    var _a2, _b, _c;\n\n    return /* @__PURE__ */React.createElement(Curve, {\n      key: index,\n      value: (_a2 = curve.data) == null ? void 0 : _a2.value,\n      size,\n      thickness,\n      sum: curve.sum,\n      offset: curve.offset,\n      color: (_b = curve.data) == null ? void 0 : _b.color,\n      root: curve.root,\n      lineRoundCaps: curve.lineRoundCaps,\n      tooltip: (_c = curve.data) == null ? void 0 : _c.tooltip\n    });\n  });\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    style: __spreadValues({\n      width: size,\n      height: size\n    }, style),\n    className: cx(classes.root, className),\n    ref\n  }, others), /* @__PURE__ */React.createElement(\"svg\", {\n    width: size,\n    height: size,\n    style: {\n      transform: \"rotate(-90deg)\"\n    }\n  }, curves), label && /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.label,\n    style: {\n      right: thickness * 2,\n      left: thickness * 2\n    }\n  }, label));\n});\nRingProgress.displayName = \"@mantine/core/RingProgress\";\nexport { RingProgress };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","defaultProps","size","thickness","RingProgress","forwardRef","props","ref","_a","useComponentDefaultProps","className","style","label","sections","classNames","styles","roundCaps","unstyled","others","classes","cx","useStyles","name","curves","getCurves","renderRoundedLineCaps","map","curve","index","_a2","_b","_c","React","createElement","Curve","data","sum","offset","color","root","lineRoundCaps","tooltip","Box","width","height","transform","right","left","displayName"],"sources":["../../src/RingProgress/RingProgress.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { DefaultProps, MantineColor, Selectors, useComponentDefaultProps } from '@mantine/styles';\nimport { Box } from '../Box';\nimport { Curve } from './Curve/Curve';\nimport { getCurves } from './get-curves/get-curves';\nimport useStyles from './RingProgress.styles';\n\nexport type RingProgressStylesNames = Selectors<typeof useStyles>;\n\nexport interface RingProgressProps\n  extends DefaultProps<RingProgressStylesNames>,\n    React.ComponentPropsWithoutRef<'div'> {\n  /** Label displayed in the center of the ring */\n  label?: React.ReactNode;\n\n  /** Ring thickness */\n  thickness?: number;\n\n  /** Width and height of the progress ring in px */\n  size?: number;\n\n  /** Sets whether the edges of the progress circle are rounded */\n  roundCaps?: boolean;\n\n  /** Ring sections */\n  sections: { value: number; color: MantineColor; tooltip?: React.ReactNode }[];\n}\n\nconst defaultProps: Partial<RingProgressProps> = {\n  size: 120,\n  thickness: 12,\n};\n\nexport const RingProgress = forwardRef<HTMLDivElement, RingProgressProps>((props, ref) => {\n  const {\n    className,\n    style,\n    label,\n    sections,\n    size,\n    thickness,\n    classNames,\n    styles,\n    roundCaps,\n    unstyled,\n    ...others\n  } = useComponentDefaultProps('RingProgress', defaultProps, props);\n\n  const { classes, cx } = useStyles(null, { classNames, styles, unstyled, name: 'RingProgress' });\n\n  const curves = getCurves({\n    size,\n    thickness,\n    sections,\n    renderRoundedLineCaps: roundCaps,\n  }).map((curve, index) => (\n    <Curve\n      key={index}\n      value={curve.data?.value}\n      size={size}\n      thickness={thickness}\n      sum={curve.sum}\n      offset={curve.offset}\n      color={curve.data?.color}\n      root={curve.root}\n      lineRoundCaps={curve.lineRoundCaps}\n      tooltip={curve.data?.tooltip}\n    />\n  ));\n\n  return (\n    <Box\n      style={{ width: size, height: size, ...style }}\n      className={cx(classes.root, className)}\n      ref={ref}\n      {...others}\n    >\n      <svg width={size} height={size} style={{ transform: 'rotate(-90deg)' }}>\n        {curves}\n      </svg>\n\n      {label && (\n        <div className={classes.label} style={{ right: thickness * 2, left: thickness * 2 }}>\n          {label}\n        </div>\n      )}\n    </Box>\n  );\n});\n\nRingProgress.displayName = '@mantine/core/RingProgress';\n"]},"metadata":{},"sourceType":"module"}