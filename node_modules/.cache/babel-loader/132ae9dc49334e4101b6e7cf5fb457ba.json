{"ast":null,"code":"import React, { forwardRef, useState, useRef, useEffect } from 'react';\nimport { clamp, assignRef, useMergedRef, useOs } from '@mantine/hooks';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { getInputMode } from './get-input-mode/get-input-mode.js';\nimport { Chevron } from './Chevron.js';\nimport useStyles, { CONTROL_SIZES } from './NumberInput.styles.js';\nimport { TextInput } from '../TextInput/TextInput.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst defaultFormatter = value => value || \"\";\n\nconst defaultParser = num => {\n  if (num === \"-\") {\n    return num;\n  }\n\n  let tempNum = num;\n\n  if (tempNum[0] === \".\") {\n    tempNum = `0${num}`;\n  }\n\n  const parsedNum = parseFloat(tempNum);\n\n  if (Number.isNaN(parsedNum)) {\n    return void 0;\n  }\n\n  return num;\n};\n\nconst CHEVRON_SIZES = {\n  xs: 10,\n  sm: 14,\n  md: 16,\n  lg: 18,\n  xl: 20\n};\nconst defaultProps = {\n  step: 1,\n  hideControls: false,\n  size: \"sm\",\n  precision: 0,\n  noClampOnBlur: false,\n  formatter: defaultFormatter,\n  parser: defaultParser,\n  type: \"text\"\n};\nconst NumberInput = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"NumberInput\", defaultProps, props),\n        {\n    disabled,\n    value,\n    onChange,\n    decimalSeparator,\n    min,\n    max,\n    startValue,\n    step,\n    stepHoldInterval,\n    stepHoldDelay,\n    onBlur,\n    onFocus,\n    onKeyDown,\n    onKeyUp,\n    hideControls,\n    radius,\n    variant,\n    precision,\n    defaultValue,\n    noClampOnBlur,\n    handlersRef,\n    classNames,\n    styles,\n    size,\n    rightSection,\n    rightSectionWidth,\n    formatter,\n    parser,\n    inputMode,\n    unstyled,\n    type\n  } = _a,\n        others = __objRest(_a, [\"disabled\", \"value\", \"onChange\", \"decimalSeparator\", \"min\", \"max\", \"startValue\", \"step\", \"stepHoldInterval\", \"stepHoldDelay\", \"onBlur\", \"onFocus\", \"onKeyDown\", \"onKeyUp\", \"hideControls\", \"radius\", \"variant\", \"precision\", \"defaultValue\", \"noClampOnBlur\", \"handlersRef\", \"classNames\", \"styles\", \"size\", \"rightSection\", \"rightSectionWidth\", \"formatter\", \"parser\", \"inputMode\", \"unstyled\", \"type\"]);\n\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles({\n    radius,\n    size\n  }, {\n    classNames,\n    styles,\n    unstyled,\n    name: \"NumberInput\"\n  });\n  const [focused, setFocused] = useState(false);\n  const [_value, setValue] = useState(typeof value === \"number\" ? value : typeof defaultValue === \"number\" ? defaultValue : void 0);\n  const finalValue = typeof value === \"number\" ? value : _value;\n  const [tempValue, setTempValue] = useState(typeof finalValue === \"number\" ? finalValue.toFixed(precision) : \"\");\n  const inputRef = useRef();\n\n  const handleValueChange = val => {\n    if (val !== _value && !Number.isNaN(val)) {\n      typeof onChange === \"function\" && onChange(val);\n      setValue(val);\n    }\n  };\n\n  const formatNum = function () {\n    let val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let parsedStr = typeof val === \"number\" ? String(val) : val;\n\n    if (decimalSeparator) {\n      parsedStr = parsedStr.replace(/\\./g, decimalSeparator);\n    }\n\n    return formatter(parsedStr);\n  };\n\n  const parseNum = val => {\n    let num = val;\n\n    if (decimalSeparator) {\n      num = num.replace(new RegExp(`\\\\${decimalSeparator}`, \"g\"), \".\");\n    }\n\n    return parser(num);\n  };\n\n  const _min = typeof min === \"number\" ? min : -Infinity;\n\n  const _max = typeof max === \"number\" ? max : Infinity;\n\n  const incrementRef = useRef();\n\n  incrementRef.current = () => {\n    var _a2, _b, _c;\n\n    if (_value === void 0) {\n      handleValueChange((_a2 = startValue != null ? startValue : min) != null ? _a2 : 0);\n      setTempValue((_c = (_b = startValue == null ? void 0 : startValue.toFixed(precision)) != null ? _b : min == null ? void 0 : min.toFixed(precision)) != null ? _c : \"0\");\n    } else {\n      const result = clamp(_value + step, _min, _max).toFixed(precision);\n      handleValueChange(parseFloat(result));\n      setTempValue(result);\n    }\n  };\n\n  const decrementRef = useRef();\n\n  decrementRef.current = () => {\n    var _a2, _b, _c;\n\n    if (_value === void 0) {\n      handleValueChange((_a2 = startValue != null ? startValue : min) != null ? _a2 : 0);\n      setTempValue((_c = (_b = startValue == null ? void 0 : startValue.toFixed(precision)) != null ? _b : min == null ? void 0 : min.toFixed(precision)) != null ? _c : \"0\");\n    } else {\n      const result = clamp(_value - step, _min, _max).toFixed(precision);\n      handleValueChange(parseFloat(result));\n      setTempValue(result);\n    }\n  };\n\n  assignRef(handlersRef, {\n    increment: incrementRef.current,\n    decrement: decrementRef.current\n  });\n  useEffect(() => {\n    if (typeof value === \"number\" && !focused) {\n      setValue(value);\n      setTempValue(value.toFixed(precision));\n    }\n\n    if (defaultValue === void 0 && value === void 0 && !focused) {\n      setValue(value);\n      setTempValue(\"\");\n    }\n  }, [value]);\n  const shouldUseStepInterval = stepHoldDelay !== void 0 && stepHoldInterval !== void 0;\n  const onStepTimeoutRef = useRef(null);\n  const stepCountRef = useRef(0);\n\n  const onStepDone = () => {\n    if (onStepTimeoutRef.current) {\n      window.clearTimeout(onStepTimeoutRef.current);\n    }\n\n    onStepTimeoutRef.current = null;\n    stepCountRef.current = 0;\n  };\n\n  const onStepHandleChange = isIncrement => {\n    if (isIncrement) {\n      incrementRef.current();\n    } else {\n      decrementRef.current();\n    }\n\n    stepCountRef.current += 1;\n  };\n\n  const onStepLoop = isIncrement => {\n    onStepHandleChange(isIncrement);\n\n    if (shouldUseStepInterval) {\n      const interval = typeof stepHoldInterval === \"number\" ? stepHoldInterval : stepHoldInterval(stepCountRef.current);\n      onStepTimeoutRef.current = window.setTimeout(() => onStepLoop(isIncrement), interval);\n    }\n  };\n\n  const onStep = (event, isIncrement) => {\n    event.preventDefault();\n    inputRef.current.focus();\n    onStepHandleChange(isIncrement);\n\n    if (shouldUseStepInterval) {\n      onStepTimeoutRef.current = window.setTimeout(() => onStepLoop(isIncrement), stepHoldDelay);\n    }\n  };\n\n  useEffect(() => {\n    onStepDone();\n    return onStepDone;\n  }, []);\n  const controls = /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.rightSection\n  }, /* @__PURE__ */React.createElement(\"button\", {\n    type: \"button\",\n    tabIndex: -1,\n    \"aria-hidden\": true,\n    disabled: finalValue >= max,\n    className: cx(classes.control, classes.controlUp),\n    onPointerDown: event => {\n      onStep(event, true);\n    },\n    onPointerUp: onStepDone,\n    onPointerLeave: onStepDone\n  }, /* @__PURE__ */React.createElement(Chevron, {\n    size: theme.fn.size({\n      size,\n      sizes: CHEVRON_SIZES\n    }),\n    direction: \"up\"\n  })), /* @__PURE__ */React.createElement(\"button\", {\n    type: \"button\",\n    tabIndex: -1,\n    \"aria-hidden\": true,\n    disabled: finalValue <= min,\n    className: cx(classes.control, classes.controlDown),\n    onPointerDown: event => {\n      onStep(event, false);\n    },\n    onPointerUp: onStepDone,\n    onPointerLeave: onStepDone\n  }, /* @__PURE__ */React.createElement(Chevron, {\n    size: theme.fn.size({\n      size,\n      sizes: CHEVRON_SIZES\n    }),\n    direction: \"down\"\n  })));\n\n  const handleChange = event => {\n    const evt = event.nativeEvent;\n\n    if (evt.isComposing) {\n      return;\n    }\n\n    const val = event.target.value;\n    const parsed = parseNum(val);\n    setTempValue(parsed);\n\n    if (val === \"\" || val === \"-\") {\n      handleValueChange(void 0);\n    } else {\n      val.trim() !== \"\" && !Number.isNaN(parsed) && handleValueChange(parseFloat(parsed));\n    }\n  };\n\n  const handleBlur = event => {\n    var _a2;\n\n    if (event.target.value === \"\") {\n      setTempValue(\"\");\n      handleValueChange(void 0);\n    } else {\n      let newNumber = event.target.value;\n\n      if (newNumber[0] === `${decimalSeparator}` || newNumber[0] === \".\") {\n        newNumber = `0${newNumber}`;\n      }\n\n      const parsedVal = parseNum(newNumber);\n      const val = clamp(parseFloat(parsedVal), _min, _max);\n\n      if (!Number.isNaN(val)) {\n        if (!noClampOnBlur) {\n          setTempValue(val.toFixed(precision));\n          handleValueChange(parseFloat(val.toFixed(precision)));\n        }\n      } else {\n        setTempValue((_a2 = finalValue == null ? void 0 : finalValue.toFixed(precision)) != null ? _a2 : \"\");\n      }\n    }\n\n    setFocused(false);\n    typeof onBlur === \"function\" && onBlur(event);\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n    typeof onFocus === \"function\" && onFocus(event);\n  };\n\n  const handleKeyDown = event => {\n    typeof onKeyDown === \"function\" && onKeyDown(event);\n\n    if (event.repeat && shouldUseStepInterval && (event.key === \"ArrowUp\" || event.key === \"ArrowDown\")) {\n      event.preventDefault();\n      return;\n    }\n\n    if (event.key === \"ArrowUp\") {\n      onStep(event, true);\n    } else if (event.key === \"ArrowDown\") {\n      onStep(event, false);\n    }\n  };\n\n  const handleKeyUp = event => {\n    typeof onKeyUp === \"function\" && onKeyUp(event);\n\n    if (event.key === \"ArrowUp\" || event.key === \"ArrowDown\") {\n      onStepDone();\n    }\n  };\n\n  return /* @__PURE__ */React.createElement(TextInput, __spreadProps(__spreadValues({}, others), {\n    type,\n    variant,\n    value: formatNum(tempValue),\n    disabled,\n    ref: useMergedRef(inputRef, ref),\n    onChange: handleChange,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    rightSection: rightSection || (disabled || hideControls || variant === \"unstyled\" ? null : controls),\n    rightSectionWidth: rightSectionWidth || theme.fn.size({\n      size,\n      sizes: CONTROL_SIZES\n    }) + 1,\n    radius,\n    max,\n    min,\n    step,\n    size,\n    styles,\n    classNames,\n    inputMode: inputMode || getInputMode(step, precision, useOs()),\n    __staticSelector: \"NumberInput\",\n    unstyled\n  }));\n});\nNumberInput.displayName = \"@mantine/core/NumberInput\";\nexport { NumberInput };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__objRest","source","exclude","target","indexOf","defaultFormatter","defaultParser","num","tempNum","parsedNum","parseFloat","Number","isNaN","CHEVRON_SIZES","xs","sm","md","lg","xl","defaultProps","step","hideControls","size","precision","noClampOnBlur","formatter","parser","type","NumberInput","forwardRef","props","ref","_a","useComponentDefaultProps","disabled","onChange","decimalSeparator","min","max","startValue","stepHoldInterval","stepHoldDelay","onBlur","onFocus","onKeyDown","onKeyUp","radius","variant","defaultValue","handlersRef","classNames","styles","rightSection","rightSectionWidth","inputMode","unstyled","others","classes","cx","theme","useStyles","name","focused","setFocused","useState","_value","setValue","finalValue","tempValue","setTempValue","toFixed","inputRef","useRef","handleValueChange","val","formatNum","parsedStr","String","replace","parseNum","RegExp","_min","Infinity","_max","incrementRef","current","_a2","_b","_c","result","clamp","decrementRef","assignRef","increment","decrement","useEffect","shouldUseStepInterval","onStepTimeoutRef","stepCountRef","onStepDone","window","clearTimeout","onStepHandleChange","isIncrement","onStepLoop","interval","setTimeout","onStep","event","preventDefault","focus","controls","React","createElement","className","tabIndex","control","controlUp","onPointerDown","onPointerUp","onPointerLeave","Chevron","fn","sizes","direction","controlDown","handleChange","evt","nativeEvent","isComposing","parsed","trim","handleBlur","newNumber","parsedVal","handleFocus","handleKeyDown","repeat","handleKeyUp","TextInput","useMergedRef","CONTROL_SIZES","getInputMode","useOs","__staticSelector","displayName"],"sources":["../../src/NumberInput/NumberInput.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, forwardRef } from 'react';\nimport { useMergedRef, assignRef, useOs, clamp } from '@mantine/hooks';\nimport { DefaultProps, Selectors, useComponentDefaultProps } from '@mantine/styles';\nimport { TextInput } from '../TextInput';\nimport { InputStylesNames, InputWrapperStylesNames } from '../Input';\nimport { getInputMode } from './get-input-mode/get-input-mode';\nimport { Chevron } from './Chevron';\nimport useStyles, { CONTROL_SIZES } from './NumberInput.styles';\n\nexport type InnerNumberInputStylesNames = Selectors<typeof useStyles>;\nexport type NumberInputStylesNames =\n  | InputStylesNames\n  | InputWrapperStylesNames\n  | InnerNumberInputStylesNames;\n\nexport interface NumberInputHandlers {\n  increment(): void;\n  decrement(): void;\n}\n\ntype Formatter = (value: string | undefined) => string;\ntype Parser = (value: string | undefined) => string | undefined;\n\nexport interface NumberInputProps\n  extends DefaultProps<NumberInputStylesNames>,\n    Omit<\n      React.ComponentPropsWithoutRef<typeof TextInput>,\n      'onChange' | 'value' | 'classNames' | 'styles' | 'type'\n    > {\n  /** onChange input handler for controlled variant, note that input event is not exposed. It will return undefined if the input is empty, otherwise it'll return a number */\n  onChange?(value: number | undefined): void;\n\n  /** Input value for controlled variant */\n  value?: number | undefined;\n\n  /** The decimal separator */\n  decimalSeparator?: string;\n\n  /** Maximum possible value */\n  max?: number;\n\n  /** Minimal possible value */\n  min?: number;\n\n  /** First value if no initial value was set and increment/decrement is triggered using controls or up/down arrows */\n  startValue?: number;\n\n  /** Number by which value will be incremented/decremented with controls and up/down arrows */\n  step?: number;\n\n  /** Delay before stepping the value. Can be a number of milliseconds or a function that receives the current step count and returns the delay in milliseconds. */\n  stepHoldInterval?: number | ((stepCount: number) => number);\n\n  /** Initial delay in milliseconds before stepping the value. */\n  stepHoldDelay?: number;\n\n  /** Removes increment/decrement controls */\n  hideControls?: boolean;\n\n  /** Amount of digits after the decimal point  */\n  precision?: number;\n\n  /** Default value for uncontrolled variant only */\n  defaultValue?: number | undefined;\n\n  /** Prevent value clamp on blur */\n  noClampOnBlur?: boolean;\n\n  /** Get increment/decrement handlers */\n  handlersRef?: React.ForwardedRef<NumberInputHandlers | undefined>;\n\n  /** Formats the number into the input */\n  formatter?: Formatter;\n\n  /** Parses the value from formatter, should be used with formatter at the same time */\n  parser?: Parser;\n\n  /** Input type, defaults to text */\n  type?: 'text' | 'number';\n}\n\nconst defaultFormatter: Formatter = (value) => value || '';\nconst defaultParser: Parser = (num) => {\n  if (num === '-') {\n    return num;\n  }\n\n  let tempNum = num;\n\n  if (tempNum[0] === '.') {\n    tempNum = `0${num}`;\n  }\n\n  const parsedNum = parseFloat(tempNum);\n\n  if (Number.isNaN(parsedNum)) {\n    return undefined;\n  }\n\n  return num;\n};\n\nconst CHEVRON_SIZES = {\n  xs: 10,\n  sm: 14,\n  md: 16,\n  lg: 18,\n  xl: 20,\n};\n\nconst defaultProps: Partial<NumberInputProps> = {\n  step: 1,\n  hideControls: false,\n  size: 'sm',\n  precision: 0,\n  noClampOnBlur: false,\n  formatter: defaultFormatter,\n  parser: defaultParser,\n  type: 'text',\n};\n\nexport const NumberInput = forwardRef<HTMLInputElement, NumberInputProps>((props, ref) => {\n  const {\n    disabled,\n    value,\n    onChange,\n    decimalSeparator,\n    min,\n    max,\n    startValue,\n    step,\n    stepHoldInterval,\n    stepHoldDelay,\n    onBlur,\n    onFocus,\n    onKeyDown,\n    onKeyUp,\n    hideControls,\n    radius,\n    variant,\n    precision,\n    defaultValue,\n    noClampOnBlur,\n    handlersRef,\n    classNames,\n    styles,\n    size,\n    rightSection,\n    rightSectionWidth,\n    formatter,\n    parser,\n    inputMode,\n    unstyled,\n    type,\n    ...others\n  } = useComponentDefaultProps('NumberInput', defaultProps, props);\n\n  const { classes, cx, theme } = useStyles(\n    { radius, size },\n    { classNames, styles, unstyled, name: 'NumberInput' }\n  );\n\n  const [focused, setFocused] = useState(false);\n  const [_value, setValue] = useState(\n    typeof value === 'number' ? value : typeof defaultValue === 'number' ? defaultValue : undefined\n  );\n  const finalValue = typeof value === 'number' ? value : _value;\n  const [tempValue, setTempValue] = useState(\n    typeof finalValue === 'number' ? finalValue.toFixed(precision) : ''\n  );\n  const inputRef = useRef<HTMLInputElement>();\n  const handleValueChange = (val: number | undefined) => {\n    if (val !== _value && !Number.isNaN(val)) {\n      typeof onChange === 'function' && onChange(val);\n      setValue(val);\n    }\n  };\n\n  const formatNum = (val: string | number = '') => {\n    let parsedStr = typeof val === 'number' ? String(val) : val;\n\n    if (decimalSeparator) {\n      parsedStr = parsedStr.replace(/\\./g, decimalSeparator);\n    }\n\n    return formatter(parsedStr);\n  };\n\n  const parseNum = (val: string): string | undefined => {\n    let num = val;\n\n    if (decimalSeparator) {\n      num = num.replace(new RegExp(`\\\\${decimalSeparator}`, 'g'), '.');\n    }\n\n    return parser(num);\n  };\n\n  const _min = typeof min === 'number' ? min : -Infinity;\n  const _max = typeof max === 'number' ? max : Infinity;\n\n  const incrementRef = useRef<() => void>();\n  incrementRef.current = () => {\n    if (_value === undefined) {\n      handleValueChange(startValue ?? min ?? 0);\n      setTempValue(startValue?.toFixed(precision) ?? min?.toFixed(precision) ?? '0');\n    } else {\n      const result = clamp(_value + step, _min, _max).toFixed(precision);\n\n      handleValueChange(parseFloat(result));\n      setTempValue(result);\n    }\n  };\n\n  const decrementRef = useRef<() => void>();\n  decrementRef.current = () => {\n    if (_value === undefined) {\n      handleValueChange(startValue ?? min ?? 0);\n      setTempValue(startValue?.toFixed(precision) ?? min?.toFixed(precision) ?? '0');\n    } else {\n      const result = clamp(_value - step, _min, _max).toFixed(precision);\n      handleValueChange(parseFloat(result));\n      setTempValue(result);\n    }\n  };\n\n  assignRef(handlersRef, { increment: incrementRef.current, decrement: decrementRef.current });\n\n  useEffect(() => {\n    if (typeof value === 'number' && !focused) {\n      setValue(value);\n      setTempValue(value.toFixed(precision));\n    }\n    if (defaultValue === undefined && value === undefined && !focused) {\n      setValue(value);\n      setTempValue('');\n    }\n  }, [value]);\n\n  const shouldUseStepInterval = stepHoldDelay !== undefined && stepHoldInterval !== undefined;\n  const onStepTimeoutRef = useRef<number>(null);\n  const stepCountRef = useRef<number>(0);\n\n  const onStepDone = () => {\n    if (onStepTimeoutRef.current) {\n      window.clearTimeout(onStepTimeoutRef.current);\n    }\n    onStepTimeoutRef.current = null;\n    stepCountRef.current = 0;\n  };\n\n  const onStepHandleChange = (isIncrement: boolean) => {\n    if (isIncrement) {\n      incrementRef.current();\n    } else {\n      decrementRef.current();\n    }\n    stepCountRef.current += 1;\n  };\n\n  const onStepLoop = (isIncrement: boolean) => {\n    onStepHandleChange(isIncrement);\n\n    if (shouldUseStepInterval) {\n      const interval =\n        typeof stepHoldInterval === 'number'\n          ? stepHoldInterval\n          : stepHoldInterval(stepCountRef.current);\n      onStepTimeoutRef.current = window.setTimeout(() => onStepLoop(isIncrement), interval);\n    }\n  };\n\n  const onStep = (\n    event: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n    isIncrement: boolean\n  ) => {\n    event.preventDefault();\n    inputRef.current.focus();\n    onStepHandleChange(isIncrement);\n    if (shouldUseStepInterval) {\n      onStepTimeoutRef.current = window.setTimeout(() => onStepLoop(isIncrement), stepHoldDelay);\n    }\n  };\n\n  useEffect(() => {\n    onStepDone();\n    return onStepDone;\n  }, []);\n\n  const controls = (\n    <div className={classes.rightSection}>\n      <button\n        type=\"button\"\n        tabIndex={-1}\n        aria-hidden\n        disabled={finalValue >= max}\n        className={cx(classes.control, classes.controlUp)}\n        onPointerDown={(event) => {\n          onStep(event, true);\n        }}\n        onPointerUp={onStepDone}\n        onPointerLeave={onStepDone}\n      >\n        <Chevron size={theme.fn.size({ size, sizes: CHEVRON_SIZES })} direction=\"up\" />\n      </button>\n      <button\n        type=\"button\"\n        tabIndex={-1}\n        aria-hidden\n        disabled={finalValue <= min}\n        className={cx(classes.control, classes.controlDown)}\n        onPointerDown={(event) => {\n          onStep(event, false);\n        }}\n        onPointerUp={onStepDone}\n        onPointerLeave={onStepDone}\n      >\n        <Chevron size={theme.fn.size({ size, sizes: CHEVRON_SIZES })} direction=\"down\" />\n      </button>\n    </div>\n  );\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const evt = event.nativeEvent as InputEvent;\n    if (evt.isComposing) {\n      return;\n    }\n\n    const val = event.target.value;\n    const parsed = parseNum(val);\n\n    setTempValue(parsed);\n\n    if (val === '' || val === '-') {\n      handleValueChange(undefined);\n    } else {\n      val.trim() !== '' && !Number.isNaN(parsed) && handleValueChange(parseFloat(parsed));\n    }\n  };\n\n  const handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    if (event.target.value === '') {\n      setTempValue('');\n      handleValueChange(undefined);\n    } else {\n      let newNumber = event.target.value;\n\n      if (newNumber[0] === `${decimalSeparator}` || newNumber[0] === '.') {\n        newNumber = `0${newNumber}`;\n      }\n\n      const parsedVal = parseNum(newNumber);\n      const val = clamp(parseFloat(parsedVal), _min, _max);\n\n      if (!Number.isNaN(val)) {\n        if (!noClampOnBlur) {\n          setTempValue(val.toFixed(precision));\n          handleValueChange(parseFloat(val.toFixed(precision)));\n        }\n      } else {\n        setTempValue(finalValue?.toFixed(precision) ?? '');\n      }\n    }\n\n    setFocused(false);\n    typeof onBlur === 'function' && onBlur(event);\n  };\n\n  const handleFocus = (event: React.FocusEvent<HTMLInputElement>) => {\n    setFocused(true);\n    typeof onFocus === 'function' && onFocus(event);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    typeof onKeyDown === 'function' && onKeyDown(event);\n    if (\n      event.repeat &&\n      shouldUseStepInterval &&\n      (event.key === 'ArrowUp' || event.key === 'ArrowDown')\n    ) {\n      event.preventDefault();\n      return;\n    }\n\n    if (event.key === 'ArrowUp') {\n      onStep(event, true);\n    } else if (event.key === 'ArrowDown') {\n      onStep(event, false);\n    }\n  };\n\n  const handleKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    typeof onKeyUp === 'function' && onKeyUp(event);\n    if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n      onStepDone();\n    }\n  };\n\n  return (\n    <TextInput\n      {...others}\n      type={type}\n      variant={variant}\n      value={formatNum(tempValue)}\n      disabled={disabled}\n      ref={useMergedRef(inputRef, ref)}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      onFocus={handleFocus}\n      onKeyDown={handleKeyDown}\n      onKeyUp={handleKeyUp}\n      rightSection={\n        rightSection || (disabled || hideControls || variant === 'unstyled' ? null : controls)\n      }\n      rightSectionWidth={rightSectionWidth || theme.fn.size({ size, sizes: CONTROL_SIZES }) + 1}\n      radius={radius}\n      max={max}\n      min={min}\n      step={step}\n      size={size}\n      styles={styles}\n      classNames={classNames}\n      inputMode={inputMode || getInputMode(step, precision, useOs())}\n      __staticSelector=\"NumberInput\"\n      unstyled={unstyled}\n    />\n  );\n});\n\nNumberInput.displayName = '@mantine/core/NumberInput';\n"]},"metadata":{},"sourceType":"module"}