{"ast":null,"code":"import React, { forwardRef, useState, useEffect } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { useElementSize } from '@mantine/hooks';\nimport useStyles from './Spoiler.styles.js';\nimport { Box } from '../Box/Box.js';\nimport { Anchor } from '../Anchor/Anchor.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst defaultProps = {\n  maxHeight: 100,\n  transitionDuration: 200,\n  initialState: false\n};\nconst Spoiler = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Spoiler\", defaultProps, props),\n        {\n    className,\n    children,\n    maxHeight,\n    hideLabel,\n    showLabel,\n    transitionDuration,\n    controlRef,\n    initialState,\n    classNames,\n    styles,\n    unstyled\n  } = _a,\n        others = __objRest(_a, [\"className\", \"children\", \"maxHeight\", \"hideLabel\", \"showLabel\", \"transitionDuration\", \"controlRef\", \"initialState\", \"classNames\", \"styles\", \"unstyled\"]);\n\n  const {\n    classes,\n    cx\n  } = useStyles({\n    transitionDuration\n  }, {\n    classNames,\n    styles,\n    unstyled,\n    name: \"Spoiler\"\n  });\n  const [show, setShowState] = useState(initialState);\n  const [spoiler, setSpoilerState] = useState(initialState);\n  const {\n    ref: contentRef,\n    height\n  } = useElementSize();\n  const spoilerMoreContent = show ? hideLabel : showLabel;\n  useEffect(() => {\n    setSpoilerState(maxHeight < height);\n  }, [height, maxHeight, children]);\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.root, className),\n    ref\n  }, others), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.content,\n    style: {\n      maxHeight: !show ? maxHeight : height || void 0\n    }\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    ref: contentRef\n  }, children)), spoiler && /* @__PURE__ */React.createElement(Anchor, {\n    component: \"button\",\n    ref: controlRef,\n    onClick: () => setShowState(opened => !opened),\n    className: classes.control\n  }, spoilerMoreContent));\n});\nSpoiler.displayName = \"@mantine/core/Spoiler\";\nexport { Spoiler };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","defaultProps","maxHeight","transitionDuration","initialState","Spoiler","forwardRef","props","ref","_a","useComponentDefaultProps","className","children","hideLabel","showLabel","controlRef","classNames","styles","unstyled","others","classes","cx","useStyles","name","show","setShowState","useState","spoiler","setSpoilerState","contentRef","height","useElementSize","spoilerMoreContent","useEffect","React","createElement","Box","root","content","style","Anchor","component","onClick","opened","control","displayName"],"sources":["../../src/Spoiler/Spoiler.tsx"],"sourcesContent":["import React, { useState, useEffect, forwardRef } from 'react';\nimport { DefaultProps, Selectors, useComponentDefaultProps } from '@mantine/styles';\nimport { useElementSize } from '@mantine/hooks';\nimport { Anchor } from '../Anchor';\nimport { Box } from '../Box';\nimport useStyles, { SpoilerStylesParams } from './Spoiler.styles';\n\nexport type SpoilerStylesNames = Selectors<typeof useStyles>;\n\nexport interface SpoilerProps\n  extends DefaultProps<SpoilerStylesNames, SpoilerStylesParams>,\n    React.ComponentPropsWithoutRef<'div'> {\n  /** Max height of visible content, when this point is reached spoiler appears */\n  maxHeight: number;\n\n  /** Label for close spoiler action */\n  hideLabel: React.ReactNode;\n\n  /** Label for open spoiler action */\n  showLabel: React.ReactNode;\n\n  /** Get ref of spoiler toggle button */\n  controlRef?: React.ForwardedRef<HTMLButtonElement>;\n\n  /** Initial spoiler state, true to wrap content in spoiler, false to show content without spoiler, opened state will be updated on mount */\n  initialState?: boolean;\n\n  /** Spoiler reveal transition duration in ms, 0 or null to turn off animation */\n  transitionDuration?: number;\n}\n\nconst defaultProps: Partial<SpoilerProps> = {\n  maxHeight: 100,\n  transitionDuration: 200,\n  initialState: false,\n};\n\nexport const Spoiler = forwardRef<HTMLDivElement, SpoilerProps>((props, ref) => {\n  const {\n    className,\n    children,\n    maxHeight,\n    hideLabel,\n    showLabel,\n    transitionDuration,\n    controlRef,\n    initialState,\n    classNames,\n    styles,\n    unstyled,\n    ...others\n  } = useComponentDefaultProps('Spoiler', defaultProps, props);\n\n  const { classes, cx } = useStyles(\n    { transitionDuration },\n    { classNames, styles, unstyled, name: 'Spoiler' }\n  );\n\n  const [show, setShowState] = useState(initialState);\n  const [spoiler, setSpoilerState] = useState(initialState);\n  const { ref: contentRef, height } = useElementSize();\n\n  const spoilerMoreContent = show ? hideLabel : showLabel;\n\n  useEffect(() => {\n    setSpoilerState(maxHeight < height);\n  }, [height, maxHeight, children]);\n\n  return (\n    <Box className={cx(classes.root, className)} ref={ref} {...others}>\n      <div\n        className={classes.content}\n        style={{\n          maxHeight: !show ? maxHeight : height || undefined,\n        }}\n      >\n        <div ref={contentRef}>{children}</div>\n      </div>\n\n      {spoiler && (\n        <Anchor\n          component=\"button\"\n          ref={controlRef}\n          onClick={() => setShowState((opened) => !opened)}\n          className={classes.control}\n        >\n          {spoilerMoreContent}\n        </Anchor>\n      )}\n    </Box>\n  );\n});\n\nSpoiler.displayName = '@mantine/core/Spoiler';\n"]},"metadata":{},"sourceType":"module"}