{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useComponentDefaultProps, extractSystemStyles } from '@mantine/styles';\nimport { useId } from '@mantine/hooks';\nimport { CheckboxIcon } from './CheckboxIcon.js';\nimport { CheckboxGroup } from './CheckboxGroup/CheckboxGroup.js';\nimport { useCheckboxGroupContext } from './CheckboxGroup.context.js';\nimport useStyles from './Checkbox.styles.js';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst defaultProps = {\n  size: \"sm\",\n  transitionDuration: 100,\n  icon: CheckboxIcon\n};\nconst Checkbox = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Checkbox\", defaultProps, props),\n        {\n    className,\n    style,\n    sx,\n    checked,\n    color,\n    label,\n    indeterminate,\n    id,\n    size,\n    radius,\n    wrapperProps,\n    children,\n    classNames,\n    styles,\n    transitionDuration,\n    icon: Icon,\n    unstyled\n  } = _a,\n        others = __objRest(_a, [\"className\", \"style\", \"sx\", \"checked\", \"color\", \"label\", \"indeterminate\", \"id\", \"size\", \"radius\", \"wrapperProps\", \"children\", \"classNames\", \"styles\", \"transitionDuration\", \"icon\", \"unstyled\"]);\n\n  const ctx = useCheckboxGroupContext();\n  const uuid = useId(id);\n  const {\n    systemStyles,\n    rest\n  } = extractSystemStyles(others);\n  const {\n    classes,\n    cx\n  } = useStyles({\n    size: (ctx == null ? void 0 : ctx.size) || size,\n    radius,\n    color,\n    transitionDuration\n  }, {\n    name: \"Checkbox\",\n    classNames,\n    styles,\n    unstyled\n  });\n  const contextProps = ctx ? {\n    checked: ctx.value.includes(rest.value),\n    onChange: ctx.onChange\n  } : {};\n  return /* @__PURE__ */React.createElement(Box, __spreadValues(__spreadValues({\n    className: cx(classes.root, className),\n    style,\n    sx\n  }, systemStyles), wrapperProps), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.inner\n  }, /* @__PURE__ */React.createElement(\"input\", __spreadValues(__spreadValues({\n    id: uuid,\n    ref,\n    type: \"checkbox\",\n    className: classes.input,\n    checked: indeterminate || checked\n  }, rest), contextProps)), /* @__PURE__ */React.createElement(Icon, {\n    indeterminate,\n    className: classes.icon\n  })), label && /* @__PURE__ */React.createElement(\"label\", {\n    className: classes.label,\n    htmlFor: uuid\n  }, label));\n});\nCheckbox.displayName = \"@mantine/core/Checkbox\";\nCheckbox.Group = CheckboxGroup;\nexport { Checkbox };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","defaultProps","size","transitionDuration","icon","CheckboxIcon","Checkbox","forwardRef","props","ref","_a","useComponentDefaultProps","className","style","sx","checked","color","label","indeterminate","id","radius","wrapperProps","children","classNames","styles","Icon","unstyled","others","ctx","useCheckboxGroupContext","uuid","useId","systemStyles","rest","extractSystemStyles","classes","cx","useStyles","name","contextProps","includes","onChange","React","createElement","Box","root","inner","type","input","htmlFor","displayName","Group","CheckboxGroup"],"sources":["../../src/Checkbox/Checkbox.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport {\n  DefaultProps,\n  MantineSize,\n  MantineColor,\n  Selectors,\n  extractSystemStyles,\n  MantineNumberSize,\n  useComponentDefaultProps,\n} from '@mantine/styles';\nimport { ForwardRefWithStaticComponents } from '@mantine/utils';\nimport { useId } from '@mantine/hooks';\nimport { Box } from '../Box';\nimport { CheckboxIcon } from './CheckboxIcon';\nimport { CheckboxGroup } from './CheckboxGroup/CheckboxGroup';\nimport { useCheckboxGroupContext } from './CheckboxGroup.context';\nimport useStyles, { CheckboxStylesParams } from './Checkbox.styles';\n\nexport type CheckboxStylesNames = Selectors<typeof useStyles>;\n\nexport interface CheckboxProps\n  extends DefaultProps<CheckboxStylesNames, CheckboxStylesParams>,\n    Omit<React.ComponentPropsWithRef<'input'>, 'type' | 'size'> {\n  /** Key of theme.colors */\n  color?: MantineColor;\n\n  /** Key of theme.radius or number to set border-radius in px */\n  radius?: MantineNumberSize;\n\n  /** Predefined label font-size and checkbox width and height in px */\n  size?: MantineSize;\n\n  /** Checkbox label */\n  label?: React.ReactNode;\n\n  /** Indeterminate state of checkbox, overwrites checked */\n  indeterminate?: boolean;\n\n  /** Props spread to wrapper element */\n  wrapperProps?: Record<string, any>;\n\n  /** id to connect label with input */\n  id?: string;\n\n  /** Transition duration in ms */\n  transitionDuration?: number;\n\n  /** Icon rendered when checkbox has checked or indeterminate state */\n  icon?: React.FC<{ indeterminate: boolean; className: string }>;\n}\n\nconst defaultProps: Partial<CheckboxProps> = {\n  size: 'sm',\n  transitionDuration: 100,\n  icon: CheckboxIcon,\n};\n\ntype CheckboxComponent = ForwardRefWithStaticComponents<\n  CheckboxProps,\n  { Group: typeof CheckboxGroup }\n>;\n\nexport const Checkbox: CheckboxComponent = forwardRef<HTMLInputElement, CheckboxProps>(\n  (props, ref) => {\n    const {\n      className,\n      style,\n      sx,\n      checked,\n      color,\n      label,\n      indeterminate,\n      id,\n      size,\n      radius,\n      wrapperProps,\n      children,\n      classNames,\n      styles,\n      transitionDuration,\n      icon: Icon,\n      unstyled,\n      ...others\n    } = useComponentDefaultProps('Checkbox', defaultProps, props);\n\n    const ctx = useCheckboxGroupContext();\n    const uuid = useId(id);\n    const { systemStyles, rest } = extractSystemStyles(others);\n    const { classes, cx } = useStyles(\n      { size: ctx?.size || size, radius, color, transitionDuration },\n      { name: 'Checkbox', classNames, styles, unstyled }\n    );\n\n    const contextProps = ctx\n      ? {\n          checked: ctx.value.includes(rest.value as string),\n          onChange: ctx.onChange,\n        }\n      : {};\n\n    return (\n      <Box\n        className={cx(classes.root, className)}\n        style={style}\n        sx={sx}\n        {...systemStyles}\n        {...wrapperProps}\n      >\n        <div className={classes.inner}>\n          <input\n            id={uuid}\n            ref={ref}\n            type=\"checkbox\"\n            className={classes.input}\n            checked={indeterminate || checked}\n            {...rest}\n            {...contextProps}\n          />\n\n          <Icon indeterminate={indeterminate} className={classes.icon} />\n        </div>\n\n        {label && (\n          <label className={classes.label} htmlFor={uuid}>\n            {label}\n          </label>\n        )}\n      </Box>\n    );\n  }\n) as any;\n\nCheckbox.displayName = '@mantine/core/Checkbox';\nCheckbox.Group = CheckboxGroup;\n"]},"metadata":{},"sourceType":"module"}