{"ast":null,"code":"import _slicedToArray from \"/Users/gabrieldeleon/code/GA-Project-4/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState } from 'react';\n\nfunction useUncontrolled(_ref) {\n  var value = _ref.value,\n      defaultValue = _ref.defaultValue,\n      finalValue = _ref.finalValue,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? function () {} : _ref$onChange;\n\n  var _useState = useState(defaultValue !== void 0 ? defaultValue : finalValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      uncontrolledValue = _useState2[0],\n      setUncontrolledValue = _useState2[1];\n\n  var handleUncontrolledChange = function handleUncontrolledChange(val) {\n    setUncontrolledValue(val);\n    onChange == null ? void 0 : onChange(val);\n  };\n\n  if (value !== void 0) {\n    return [value, onChange, true];\n  }\n\n  return [uncontrolledValue, handleUncontrolledChange, false];\n}\n\nexport { useUncontrolled };","map":{"version":3,"mappings":";;;AACO,SAASA,eAAT,OAMJ;EAAA,IALDC,KAKC,QALDA,KAKC;EAAA,IAJDC,YAIC,QAJDA,YAIC;EAAA,IAHDC,UAGC,QAHDA,UAGC;EAAA,yBAFDC,QAEC;EAAA,IAFDA,QAEC,8BAFU,YAAM,CAChB,CACA;;EACD,gBAAkDC,QAAQ,CAACH,YAAY,KAAK,KAAK,CAAtB,GAA0BA,YAA1B,GAAyCC,UAA1C,CAA1D;EAAA;EAAA,IAAOG,iBAAP;EAAA,IAA0BC,oBAA1B;;EACA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,GAAD,EAAS;IACxCF,oBAAoB,CAACE,GAAD,CAApB;IACAL,QAAQ,IAAI,IAAZ,GAAmB,KAAK,CAAxB,GAA4BA,QAAQ,CAACK,GAAD,CAApC;EACD,CAHD;;EAIA,IAAIR,KAAK,KAAK,KAAK,CAAnB,EAAsB;IACpB,OAAO,CAACA,KAAD,EAAQG,QAAR,EAAkB,IAAlB,CAAP;EACD;;EACD,OAAO,CAACE,iBAAD,EAAoBE,wBAApB,EAA8C,KAA9C,CAAP;AACF","names":["useUncontrolled","value","defaultValue","finalValue","onChange","useState","uncontrolledValue","setUncontrolledValue","handleUncontrolledChange","val"],"sources":["../../src/use-uncontrolled/use-uncontrolled.ts"],"sourcesContent":["import { useState } from 'react';\n\ninterface UseUncontrolledInput<T> {\n  /** Value for controlled state */\n  value?: T;\n\n  /** Initial value for uncontrolled state */\n  defaultValue?: T;\n\n  /** Final value for uncontrolled state when value and defaultValue are not provided */\n  finalValue?: T;\n\n  /** Controlled state onChange handler */\n  onChange?(value: T): void;\n}\n\nexport function useUncontrolled<T>({\n  value,\n  defaultValue,\n  finalValue,\n  onChange = () => {},\n}: UseUncontrolledInput<T>): [T, (value: T) => void, boolean] {\n  const [uncontrolledValue, setUncontrolledValue] = useState(\n    defaultValue !== undefined ? defaultValue : finalValue\n  );\n\n  const handleUncontrolledChange = (val: T) => {\n    setUncontrolledValue(val);\n    onChange?.(val);\n  };\n\n  if (value !== undefined) {\n    return [value as T, onChange, true];\n  }\n\n  return [uncontrolledValue as T, handleUncontrolledChange, false];\n}\n"]},"metadata":{},"sourceType":"module"}