{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/gabrieldeleon/code/GA-Project-4/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { createStyles, MANTINE_SIZES } from '@mantine/styles';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\n\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) {\n    if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return a;\n};\n\nvar getColumnFlexBasis = function getColumnFlexBasis(colSpan, columns) {\n  if (colSpan === \"content\") {\n    return \"auto\";\n  }\n\n  if (colSpan === \"auto\") {\n    return \"0px\";\n  }\n\n  return colSpan ? \"\".concat(100 / (columns / colSpan), \"%\") : void 0;\n};\n\nvar getColumnMaxWidth = function getColumnMaxWidth(colSpan, columns, grow) {\n  if (grow || colSpan === \"auto\" || colSpan === \"content\") {\n    return \"unset\";\n  }\n\n  return getColumnFlexBasis(colSpan, columns);\n};\n\nvar getColumnFlexGrow = function getColumnFlexGrow(colSpan, grow) {\n  if (!colSpan) {\n    return void 0;\n  }\n\n  return colSpan === \"auto\" || grow ? 1 : 0;\n};\n\nvar getColumnOffset = function getColumnOffset(offset, columns) {\n  return offset ? \"\".concat(100 / (columns / offset), \"%\") : void 0;\n};\n\nfunction getBreakpointsStyles(_ref) {\n  var sizes = _ref.sizes,\n      offsets = _ref.offsets,\n      orders = _ref.orders,\n      theme = _ref.theme,\n      columns = _ref.columns,\n      grow = _ref.grow;\n  return MANTINE_SIZES.reduce(function (acc, size) {\n    acc[\"@media (min-width: \".concat(theme.breakpoints[size] + 1, \"px)\")] = {\n      order: orders[size],\n      flexBasis: getColumnFlexBasis(sizes[size], columns),\n      flexShrink: 0,\n      width: sizes[size] === \"content\" ? \"auto\" : void 0,\n      maxWidth: getColumnMaxWidth(sizes[size], columns, grow),\n      marginLeft: getColumnOffset(offsets[size], columns),\n      flexGrow: getColumnFlexGrow(sizes[size], grow)\n    };\n    return acc;\n  }, {});\n}\n\nvar useStyles = createStyles(function (theme, _ref2) {\n  var gutter = _ref2.gutter,\n      grow = _ref2.grow,\n      offset = _ref2.offset,\n      offsetXs = _ref2.offsetXs,\n      offsetSm = _ref2.offsetSm,\n      offsetMd = _ref2.offsetMd,\n      offsetLg = _ref2.offsetLg,\n      offsetXl = _ref2.offsetXl,\n      columns = _ref2.columns,\n      span = _ref2.span,\n      xs = _ref2.xs,\n      sm = _ref2.sm,\n      md = _ref2.md,\n      lg = _ref2.lg,\n      xl = _ref2.xl,\n      order = _ref2.order,\n      orderXs = _ref2.orderXs,\n      orderSm = _ref2.orderSm,\n      orderMd = _ref2.orderMd,\n      orderLg = _ref2.orderLg,\n      orderXl = _ref2.orderXl;\n  return {\n    root: __spreadValues({\n      boxSizing: \"border-box\",\n      flexGrow: getColumnFlexGrow(span, grow),\n      order: order,\n      padding: theme.fn.size({\n        size: gutter,\n        sizes: theme.spacing\n      }) / 2,\n      marginLeft: getColumnOffset(offset, columns),\n      flexBasis: getColumnFlexBasis(span, columns),\n      flexShrink: 0,\n      width: span === \"content\" ? \"auto\" : void 0,\n      maxWidth: getColumnMaxWidth(span, columns, grow)\n    }, getBreakpointsStyles({\n      sizes: {\n        xs: xs,\n        sm: sm,\n        md: md,\n        lg: lg,\n        xl: xl\n      },\n      offsets: {\n        xs: offsetXs,\n        sm: offsetSm,\n        md: offsetMd,\n        lg: offsetLg,\n        xl: offsetXl\n      },\n      orders: {\n        xs: orderXs,\n        sm: orderSm,\n        md: orderMd,\n        lg: orderLg,\n        xl: orderXl\n      },\n      theme: theme,\n      columns: columns,\n      grow: grow\n    }))\n  };\n});\nexport default useStyles;","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","getColumnFlexBasis","colSpan","columns","getColumnMaxWidth","grow","getColumnFlexGrow","getColumnOffset","offset","getBreakpointsStyles","sizes","offsets","orders","theme","MANTINE_SIZES","reduce","acc","size","breakpoints","order","flexBasis","flexShrink","width","maxWidth","marginLeft","flexGrow","createStyles","gutter","offsetXs","offsetSm","offsetMd","offsetLg","offsetXl","span","xs","sm","md","lg","xl","orderXs","orderSm","orderMd","orderLg","orderXl","root","boxSizing","padding","fn","spacing"],"sources":["../../../src/Grid/Col/Col.styles.ts"],"sourcesContent":["import {\n  createStyles,\n  MantineNumberSize,\n  MANTINE_SIZES,\n  MantineSize,\n  MantineTheme,\n} from '@mantine/styles';\n\nexport type ColSpan = number | 'auto' | 'content';\n\ninterface ColStyles {\n  gutter: MantineNumberSize;\n  columns: number;\n  grow: boolean;\n  offset: number;\n  offsetXs: number;\n  offsetSm: number;\n  offsetMd: number;\n  offsetLg: number;\n  offsetXl: number;\n  span: ColSpan;\n  xs: ColSpan;\n  sm: ColSpan;\n  md: ColSpan;\n  lg: ColSpan;\n  xl: ColSpan;\n  order: React.CSSProperties['order'];\n  orderXs: React.CSSProperties['order'];\n  orderSm: React.CSSProperties['order'];\n  orderMd: React.CSSProperties['order'];\n  orderLg: React.CSSProperties['order'];\n  orderXl: React.CSSProperties['order'];\n}\n\nconst getColumnFlexBasis = (colSpan: ColSpan, columns: number) => {\n  if (colSpan === 'content') {\n    return 'auto';\n  }\n  if (colSpan === 'auto') {\n    return '0px';\n  }\n  return colSpan ? `${100 / (columns / colSpan)}%` : undefined;\n};\n\nconst getColumnMaxWidth = (colSpan: ColSpan, columns: number, grow: boolean) => {\n  if (grow || colSpan === 'auto' || colSpan === 'content') {\n    return 'unset';\n  }\n  return getColumnFlexBasis(colSpan, columns);\n};\n\nconst getColumnFlexGrow = (colSpan: ColSpan, grow: boolean) => {\n  if (!colSpan) {\n    return undefined;\n  }\n  return colSpan === 'auto' || grow ? 1 : 0;\n};\n\nconst getColumnOffset = (offset: number, columns: number) =>\n  offset ? `${100 / (columns / offset)}%` : undefined;\n\nfunction getBreakpointsStyles({\n  sizes,\n  offsets,\n  orders,\n  theme,\n  columns,\n  grow,\n}: {\n  sizes: Record<MantineSize, ColSpan>;\n  offsets: Record<MantineSize, number>;\n  orders: Record<MantineSize, React.CSSProperties['order']>;\n  grow: boolean;\n  theme: MantineTheme;\n  columns: number;\n}) {\n  return MANTINE_SIZES.reduce((acc, size) => {\n    acc[`@media (min-width: ${theme.breakpoints[size] + 1}px)`] = {\n      order: orders[size],\n      flexBasis: getColumnFlexBasis(sizes[size], columns),\n      flexShrink: 0,\n      width: sizes[size] === 'content' ? 'auto' : undefined,\n      maxWidth: getColumnMaxWidth(sizes[size], columns, grow),\n      marginLeft: getColumnOffset(offsets[size], columns),\n      flexGrow: getColumnFlexGrow(sizes[size], grow),\n    };\n    return acc;\n  }, {});\n}\n\nexport default createStyles(\n  (\n    theme,\n    {\n      gutter,\n      grow,\n      offset,\n      offsetXs,\n      offsetSm,\n      offsetMd,\n      offsetLg,\n      offsetXl,\n      columns,\n      span,\n      xs,\n      sm,\n      md,\n      lg,\n      xl,\n      order,\n      orderXs,\n      orderSm,\n      orderMd,\n      orderLg,\n      orderXl,\n    }: ColStyles\n  ) => ({\n    root: {\n      boxSizing: 'border-box',\n      flexGrow: getColumnFlexGrow(span, grow),\n      order,\n      padding: theme.fn.size({ size: gutter, sizes: theme.spacing }) / 2,\n      marginLeft: getColumnOffset(offset, columns),\n      flexBasis: getColumnFlexBasis(span, columns),\n      flexShrink: 0,\n      width: span === 'content' ? 'auto' : undefined,\n      maxWidth: getColumnMaxWidth(span, columns, grow),\n      ...getBreakpointsStyles({\n        sizes: { xs, sm, md, lg, xl },\n        offsets: { xs: offsetXs, sm: offsetSm, md: offsetMd, lg: offsetLg, xl: offsetXl },\n        orders: { xs: orderXs, sm: orderSm, md: orderMd, lg: orderLg, xl: orderXl },\n        theme,\n        columns,\n        grow,\n      }),\n    },\n  })\n);\n"]},"metadata":{},"sourceType":"module"}