{"ast":null,"code":"import _slicedToArray from \"/Users/gabrieldeleon/code/GA-Project-4/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState } from 'react';\n\nfunction useValidatedState(initialValue, validation, initialValidationState) {\n  var _useState = useState(initialValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(validation(initialValue) ? initialValue : void 0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastValidValue = _useState4[0],\n      setLastValidValue = _useState4[1];\n\n  var _useState5 = useState(typeof initialValidationState === \"boolean\" ? initialValidationState : validation(initialValue)),\n      _useState6 = _slicedToArray(_useState5, 2),\n      valid = _useState6[0],\n      setValid = _useState6[1];\n\n  var onChange = function onChange(val) {\n    if (validation(val)) {\n      setLastValidValue(val);\n      setValid(true);\n    } else {\n      setValid(false);\n    }\n\n    setValue(val);\n  };\n\n  return [{\n    value: value,\n    lastValidValue: lastValidValue,\n    valid: valid\n  }, onChange];\n}\n\nexport { useValidatedState };","map":{"version":3,"mappings":";;;AACO,SAASA,iBAAT,CAA2BC,YAA3B,EAAyCC,UAAzC,EAAqDC,sBAArD,EAA6E;EAClF,gBAA0BC,QAAQ,CAACH,YAAD,CAAlC;EAAA;EAAA,IAAOI,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAA4CF,QAAQ,CAACF,UAAU,CAACD,YAAD,CAAV,GAA2BA,YAA3B,GAA0C,KAAK,CAAhD,CAApD;EAAA;EAAA,IAAOM,cAAP;EAAA,IAAuBC,iBAAvB;;EACA,iBAA0BJ,QAAQ,CAAC,OAAOD,sBAAP,KAAkC,SAAlC,GAA8CA,sBAA9C,GAAuED,UAAU,CAACD,YAAD,CAAlF,CAAlC;EAAA;EAAA,IAAOQ,KAAP;EAAA,IAAcC,QAAd;;EACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAS;IACxB,IAAIV,UAAU,CAACU,GAAD,CAAd,EAAqB;MACnBJ,iBAAiB,CAACI,GAAD,CAAjB;MACAF,QAAQ,CAAC,IAAD,CAAR;IACD,CAHD,MAGO;MACLA,QAAQ,CAAC,KAAD,CAAR;IACD;;IACDJ,QAAQ,CAACM,GAAD,CAAR;EACD,CARD;;EASA,OAAO,CAAC;IAAEP,KAAK,EAALA,KAAF;IAASE,cAAc,EAAdA,cAAT;IAAyBE,KAAK,EAALA;EAAzB,CAAD,EAAmCE,QAAnC,CAAP;AACF","names":["useValidatedState","initialValue","validation","initialValidationState","useState","value","setValue","lastValidValue","setLastValidValue","valid","setValid","onChange","val"],"sources":["../../src/use-validated-state/use-validated-state.ts"],"sourcesContent":["import { useState } from 'react';\n\nexport function useValidatedState<T>(\n  initialValue: T,\n  validation: (value: T) => boolean,\n  initialValidationState?: boolean\n) {\n  const [value, setValue] = useState<T>(initialValue);\n  const [lastValidValue, setLastValidValue] = useState<T>(\n    validation(initialValue) ? initialValue : undefined\n  );\n  const [valid, setValid] = useState<boolean>(\n    typeof initialValidationState === 'boolean' ? initialValidationState : validation(initialValue)\n  );\n\n  const onChange = (val: T) => {\n    if (validation(val)) {\n      setLastValidValue(val);\n      setValid(true);\n    } else {\n      setValid(false);\n    }\n\n    setValue(val);\n  };\n\n  return [{ value, lastValidValue, valid }, onChange] as const;\n}\n"]},"metadata":{},"sourceType":"module"}