{"ast":null,"code":"import { useState, useCallback, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nfunction getConnection() {\n  if (typeof navigator === \"undefined\") {\n    return {};\n  }\n\n  const _navigator = navigator;\n  const connection = _navigator.connection || _navigator.mozConnection || _navigator.webkitConnection;\n\n  if (!connection) {\n    return {};\n  }\n\n  return {\n    downlink: connection == null ? void 0 : connection.downlink,\n    downlinkMax: connection == null ? void 0 : connection.downlinkMax,\n    effectiveType: connection == null ? void 0 : connection.effectiveType,\n    rtt: connection == null ? void 0 : connection.rtt,\n    saveData: connection == null ? void 0 : connection.saveData,\n    type: connection == null ? void 0 : connection.type\n  };\n}\n\nfunction useNetwork() {\n  const [status, setStatus] = useState({\n    online: true\n  });\n  const handleConnectionChange = useCallback(() => setStatus(current => __spreadValues(__spreadValues({}, current), getConnection())), []);\n  useWindowEvent(\"online\", () => setStatus(__spreadValues({\n    online: true\n  }, getConnection())));\n  useWindowEvent(\"offline\", () => setStatus(__spreadValues({\n    online: false\n  }, getConnection())));\n  useEffect(() => {\n    const _navigator = navigator;\n\n    if (_navigator.connection) {\n      setStatus(__spreadValues({\n        online: true\n      }, getConnection()));\n\n      _navigator.connection.addEventListener(\"change\", handleConnectionChange);\n\n      return () => _navigator.connection.removeEventListener(\"change\", handleConnectionChange);\n    }\n\n    return void 0;\n  }, []);\n  return status;\n}\n\nexport { useNetwork };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","getConnection","navigator","_navigator","connection","mozConnection","webkitConnection","downlink","downlinkMax","effectiveType","rtt","saveData","type","useNetwork","status","setStatus","useState","online","handleConnectionChange","useCallback","current","useWindowEvent","useEffect","addEventListener","removeEventListener"],"sources":["../../src/use-network/use-network.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event';\n\ninterface NetworkStatus {\n  downlink?: number;\n  downlinkMax?: number;\n  effectiveType?: 'slow-2g' | '2g' | '3g' | '4g';\n  rtt?: number;\n  saveData?: boolean;\n  type?: 'bluetooth' | 'cellular' | 'ethernet' | 'wifi' | 'wimax' | 'none' | 'other' | 'unknown';\n}\n\nfunction getConnection(): NetworkStatus {\n  if (typeof navigator === 'undefined') {\n    return {};\n  }\n\n  const _navigator = navigator as any;\n  const connection: any =\n    _navigator.connection || _navigator.mozConnection || _navigator.webkitConnection;\n\n  if (!connection) {\n    return {};\n  }\n\n  return {\n    downlink: connection?.downlink,\n    downlinkMax: connection?.downlinkMax,\n    effectiveType: connection?.effectiveType,\n    rtt: connection?.rtt,\n    saveData: connection?.saveData,\n    type: connection?.type,\n  };\n}\n\nexport function useNetwork() {\n  const [status, setStatus] = useState<{ online: boolean } & NetworkStatus>({\n    online: true,\n  });\n  const handleConnectionChange = useCallback(\n    () => setStatus((current) => ({ ...current, ...getConnection() })),\n    []\n  );\n\n  useWindowEvent('online', () => setStatus({ online: true, ...getConnection() }));\n  useWindowEvent('offline', () => setStatus({ online: false, ...getConnection() }));\n\n  useEffect(() => {\n    const _navigator = navigator as any;\n\n    if (_navigator.connection) {\n      setStatus({ online: true, ...getConnection() });\n      _navigator.connection.addEventListener('change', handleConnectionChange);\n      return () => _navigator.connection.removeEventListener('change', handleConnectionChange);\n    }\n\n    return undefined;\n  }, []);\n\n  return status;\n}\n"]},"metadata":{},"sourceType":"module"}