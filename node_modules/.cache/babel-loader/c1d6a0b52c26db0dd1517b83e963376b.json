{"ast":null,"code":"import { createStyles } from '@mantine/styles';\nconst sizes = {\n  xs: 1,\n  sm: 2,\n  md: 3,\n  lg: 4,\n  xl: 5\n};\n\nfunction getColor(theme, color) {\n  const themeColor = theme.fn.variant({\n    variant: \"outline\",\n    color\n  }).border;\n  return typeof color === \"string\" && (color in theme.colors || color.split(\".\")[0] in theme.colors) ? themeColor : color === void 0 ? theme.colorScheme === \"dark\" ? theme.colors.dark[4] : theme.colors.gray[4] : color;\n}\n\nvar useStyles = createStyles((theme, _ref) => {\n  let {\n    size,\n    variant,\n    color\n  } = _ref;\n  return {\n    root: {},\n    withLabel: {\n      borderTop: \"0 !important\"\n    },\n    left: {\n      \"&::before\": {\n        display: \"none\"\n      }\n    },\n    right: {\n      \"&::after\": {\n        display: \"none\"\n      }\n    },\n    label: {\n      display: \"flex\",\n      alignItems: \"center\",\n      \"&::before\": {\n        content: '\"\"',\n        flex: 1,\n        height: 1,\n        borderTop: `${theme.fn.size({\n          size,\n          sizes\n        })}px ${variant} ${getColor(theme, color)}`,\n        marginRight: theme.spacing.xs\n      },\n      \"&::after\": {\n        content: '\"\"',\n        flex: 1,\n        borderTop: `${theme.fn.size({\n          size,\n          sizes\n        })}px ${variant} ${getColor(theme, color)}`,\n        marginLeft: theme.spacing.xs\n      }\n    },\n    labelDefaultStyles: {\n      color: color === \"dark\" ? theme.colors.dark[1] : theme.fn.themeColor(color, theme.colorScheme === \"dark\" ? 5 : theme.fn.primaryShade(), false)\n    },\n    horizontal: {\n      border: 0,\n      borderTopWidth: theme.fn.size({\n        size,\n        sizes\n      }),\n      borderTopColor: getColor(theme, color),\n      borderTopStyle: variant,\n      margin: 0\n    },\n    vertical: {\n      border: 0,\n      alignSelf: \"stretch\",\n      height: \"auto\",\n      borderLeftWidth: theme.fn.size({\n        size,\n        sizes\n      }),\n      borderLeftColor: getColor(theme, color),\n      borderLeftStyle: variant\n    }\n  };\n});\nexport default useStyles;","map":{"version":3,"mappings":"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","names":["sizes","xs","sm","md","lg","xl","getColor","theme","color","themeColor","fn","variant","border","colors","split","colorScheme","dark","gray","createStyles","size","root","withLabel","borderTop","left","display","right","label","alignItems","content","flex","height","marginRight","spacing","marginLeft","labelDefaultStyles","primaryShade","horizontal","borderTopWidth","borderTopColor","borderTopStyle","margin","vertical","alignSelf","borderLeftWidth","borderLeftColor","borderLeftStyle"],"sources":["../../src/Divider/Divider.styles.ts"],"sourcesContent":["import { createStyles, MantineNumberSize, MantineColor, MantineTheme } from '@mantine/styles';\n\nexport interface DividerStylesParams {\n  size: MantineNumberSize;\n  variant: 'solid' | 'dashed' | 'dotted';\n  color: MantineColor;\n}\n\nconst sizes = {\n  xs: 1,\n  sm: 2,\n  md: 3,\n  lg: 4,\n  xl: 5,\n};\n\nfunction getColor(theme: MantineTheme, color: MantineColor) {\n  const themeColor = theme.fn.variant({ variant: 'outline', color }).border;\n\n  return typeof color === 'string' && (color in theme.colors || color.split('.')[0] in theme.colors)\n    ? themeColor\n    : color === undefined\n    ? theme.colorScheme === 'dark'\n      ? theme.colors.dark[4]\n      : theme.colors.gray[4]\n    : color;\n}\n\nexport default createStyles((theme, { size, variant, color }: DividerStylesParams) => ({\n  root: {},\n\n  withLabel: {\n    borderTop: '0 !important',\n  },\n\n  left: {\n    '&::before': {\n      display: 'none',\n    },\n  },\n\n  right: {\n    '&::after': {\n      display: 'none',\n    },\n  },\n\n  label: {\n    display: 'flex',\n    alignItems: 'center',\n\n    '&::before': {\n      content: '\"\"',\n      flex: 1,\n      height: 1,\n      borderTop: `${theme.fn.size({ size, sizes })}px ${variant} ${getColor(theme, color)}`,\n      marginRight: theme.spacing.xs,\n    },\n\n    '&::after': {\n      content: '\"\"',\n      flex: 1,\n      borderTop: `${theme.fn.size({ size, sizes })}px ${variant} ${getColor(theme, color)}`,\n      marginLeft: theme.spacing.xs,\n    },\n  },\n\n  labelDefaultStyles: {\n    color:\n      color === 'dark'\n        ? theme.colors.dark[1]\n        : theme.fn.themeColor(\n            color,\n            theme.colorScheme === 'dark' ? 5 : theme.fn.primaryShade(),\n            false\n          ),\n  },\n\n  horizontal: {\n    border: 0,\n    borderTopWidth: theme.fn.size({ size, sizes }),\n    borderTopColor: getColor(theme, color),\n    borderTopStyle: variant,\n    margin: 0,\n  },\n\n  vertical: {\n    border: 0,\n    alignSelf: 'stretch',\n    height: 'auto',\n    borderLeftWidth: theme.fn.size({ size, sizes }),\n    borderLeftColor: getColor(theme, color),\n    borderLeftStyle: variant,\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}