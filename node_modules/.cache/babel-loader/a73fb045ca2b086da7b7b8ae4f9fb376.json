{"ast":null,"code":"import { useState, useRef, useCallback, useEffect } from 'react';\nimport { useFloating, shift, getOverflowAncestors } from '@floating-ui/react-dom-interactions';\n\nfunction useFloatingTooltip(_ref) {\n  let {\n    offset,\n    position\n  } = _ref;\n  const [opened, setOpened] = useState(false);\n  const boundaryRef = useRef();\n  const {\n    x,\n    y,\n    reference,\n    floating,\n    refs,\n    update,\n    placement\n  } = useFloating({\n    placement: position,\n    middleware: [shift({\n      crossAxis: true,\n      padding: 5,\n      rootBoundary: \"document\"\n    })]\n  });\n  const horizontalOffset = placement.includes(\"right\") ? offset : position.includes(\"left\") ? offset * -1 : 0;\n  const verticalOffset = placement.includes(\"bottom\") ? offset : position.includes(\"top\") ? offset * -1 : 0;\n  const handleMouseMove = useCallback(_ref2 => {\n    let {\n      clientX,\n      clientY\n    } = _ref2;\n    reference({\n      getBoundingClientRect() {\n        return {\n          width: 0,\n          height: 0,\n          x: clientX,\n          y: clientY,\n          left: clientX + horizontalOffset,\n          top: clientY + verticalOffset,\n          right: clientX,\n          bottom: clientY\n        };\n      }\n\n    });\n  }, [reference]);\n  useEffect(() => {\n    if (refs.floating.current) {\n      const boundary = boundaryRef.current;\n      boundary.addEventListener(\"mousemove\", handleMouseMove);\n      const parents = getOverflowAncestors(refs.floating.current);\n      parents.forEach(parent => {\n        parent.addEventListener(\"scroll\", update);\n      });\n      return () => {\n        boundary.removeEventListener(\"mousemove\", handleMouseMove);\n        parents.forEach(parent => {\n          parent.removeEventListener(\"scroll\", update);\n        });\n      };\n    }\n\n    return void 0;\n  }, [reference, refs.floating, update, handleMouseMove, opened]);\n  return {\n    handleMouseMove,\n    x,\n    y,\n    opened,\n    setOpened,\n    boundaryRef,\n    floating\n  };\n}\n\nexport { useFloatingTooltip };","map":{"version":3,"mappings":";;;AAEO,SAASA,kBAAT,OAGJ;EAAA,IAHgC;IACjCC,MADiC;IAEjCC;EAFiC,CAGhC;EACD,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,KAAD,CAApC;EACA,MAAMC,WAAW,GAAGC,MAAM,EAA1B;EACA,MAAM;IAAEC,CAAF;IAAKC,CAAL;IAAQC,SAAR;IAAmBC,QAAnB;IAA6BC,IAA7B;IAAmCC,MAAnC;IAA2CC;EAA3C,IAAyDC,WAAW,CAAC;IACzED,SAAS,EAAEZ,QAD8D;IAEzEc,UAAU,EAAE,CACVC,KAAK,CAAC;MACJC,SAAS,EAAE,IADP;MAEJC,OAAO,EAAE,CAFL;MAGJC,YAAY,EAAE;IAHV,CAAD,CADK;EAF6D,CAAD,CAA1E;EAUA,MAAMC,gBAAgB,GAAGP,SAAS,CAACQ,QAAV,CAAmB,OAAnB,IAA8BrB,MAA9B,GAAuCC,QAAQ,CAACoB,QAAT,CAAkB,MAAlB,IAA4BrB,MAAM,GAAG,CAAC,CAAtC,GAA0C,CAA1G;EACA,MAAMsB,cAAc,GAAGT,SAAS,CAACQ,QAAV,CAAmB,QAAnB,IAA+BrB,MAA/B,GAAwCC,QAAQ,CAACoB,QAAT,CAAkB,KAAlB,IAA2BrB,MAAM,GAAG,CAAC,CAArC,GAAyC,CAAxG;EACA,MAAMuB,eAAe,GAAGC,WAAW,CAAC,SAA0B;IAAA,IAAzB;MAAEC,OAAF;MAAWC;IAAX,CAAyB;IAC5DjB,SAAS,CAAC;MACRkB,qBAAqB,GAAG;QACtB,OAAO;UACLC,KAAK,EAAE,CADF;UAELC,MAAM,EAAE,CAFH;UAGLtB,CAAC,EAAEkB,OAHE;UAILjB,CAAC,EAAEkB,OAJE;UAKLI,IAAI,EAAEL,OAAO,GAAGL,gBALX;UAMLW,GAAG,EAAEL,OAAO,GAAGJ,cANV;UAOLU,KAAK,EAAEP,OAPF;UAQLQ,MAAM,EAAEP;QARH,CAAP;MAUD;;IAZO,CAAD,CAAT;EAcD,CAfkC,EAehC,CAACjB,SAAD,CAfgC,CAAnC;EAgBAyB,SAAS,CAAC,MAAM;IACd,IAAIvB,IAAI,CAACD,QAAL,CAAcyB,OAAlB,EAA2B;MACzB,MAAMC,QAAQ,GAAG/B,WAAW,CAAC8B,OAA7B;MACAC,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCd,eAAvC;MACA,MAAMe,OAAO,GAAGC,oBAAoB,CAAC5B,IAAI,CAACD,QAAL,CAAcyB,OAAf,CAApC;MACAG,OAAO,CAACE,OAAR,CAAiBC,MAAD,IAAY;QAC1BA,MAAM,CAACJ,gBAAP,CAAwB,QAAxB,EAAkCzB,MAAlC;MACD,CAFD;MAGA,OAAO,MAAM;QACXwB,QAAQ,CAACM,mBAAT,CAA6B,WAA7B,EAA0CnB,eAA1C;QACAe,OAAO,CAACE,OAAR,CAAiBC,MAAD,IAAY;UAC1BA,MAAM,CAACC,mBAAP,CAA2B,QAA3B,EAAqC9B,MAArC;QACD,CAFD;MAGD,CALD;IAMD;;IACD,OAAO,KAAK,CAAZ;EACD,CAhBQ,EAgBN,CAACH,SAAD,EAAYE,IAAI,CAACD,QAAjB,EAA2BE,MAA3B,EAAmCW,eAAnC,EAAoDrB,MAApD,CAhBM,CAAT;EAiBA,OAAO;IAAEqB,eAAF;IAAmBhB,CAAnB;IAAsBC,CAAtB;IAAyBN,MAAzB;IAAiCC,SAAjC;IAA4CE,WAA5C;IAAyDK;EAAzD,CAAP;AACF","names":["useFloatingTooltip","offset","position","opened","setOpened","useState","boundaryRef","useRef","x","y","reference","floating","refs","update","placement","useFloating","middleware","shift","crossAxis","padding","rootBoundary","horizontalOffset","includes","verticalOffset","handleMouseMove","useCallback","clientX","clientY","getBoundingClientRect","width","height","left","top","right","bottom","useEffect","current","boundary","addEventListener","parents","getOverflowAncestors","forEach","parent","removeEventListener"],"sources":["../../../src/Tooltip/TooltipFloating/use-floating-tooltip.ts"],"sourcesContent":["import { useState, useEffect, useCallback, useRef } from 'react';\nimport { useFloating, shift, getOverflowAncestors } from '@floating-ui/react-dom-interactions';\nimport { FloatingPosition } from '../../Floating';\n\ninterface UseFloatingTooltip {\n  offset: number;\n  position: FloatingPosition;\n}\n\nexport function useFloatingTooltip<T extends HTMLElement = any>({\n  offset,\n  position,\n}: UseFloatingTooltip) {\n  const [opened, setOpened] = useState(false);\n  const boundaryRef = useRef<T>();\n  const { x, y, reference, floating, refs, update, placement } = useFloating({\n    placement: position,\n    middleware: [\n      shift({\n        crossAxis: true,\n        padding: 5,\n        rootBoundary: 'document',\n      }),\n    ],\n  });\n\n  const horizontalOffset = placement.includes('right')\n    ? offset\n    : position.includes('left')\n    ? offset * -1\n    : 0;\n\n  const verticalOffset = placement.includes('bottom')\n    ? offset\n    : position.includes('top')\n    ? offset * -1\n    : 0;\n\n  const handleMouseMove = useCallback(\n    ({ clientX, clientY }: MouseEvent | React.MouseEvent<T, MouseEvent>) => {\n      reference({\n        getBoundingClientRect() {\n          return {\n            width: 0,\n            height: 0,\n            x: clientX,\n            y: clientY,\n            left: clientX + horizontalOffset,\n            top: clientY + verticalOffset,\n            right: clientX,\n            bottom: clientY,\n          };\n        },\n      });\n    },\n    [reference]\n  );\n\n  useEffect(() => {\n    if (refs.floating.current) {\n      const boundary = boundaryRef.current;\n      boundary.addEventListener('mousemove', handleMouseMove);\n\n      const parents = getOverflowAncestors(refs.floating.current);\n      parents.forEach((parent) => {\n        parent.addEventListener('scroll', update);\n      });\n\n      return () => {\n        boundary.removeEventListener('mousemove', handleMouseMove);\n        parents.forEach((parent) => {\n          parent.removeEventListener('scroll', update);\n        });\n      };\n    }\n\n    return undefined;\n  }, [reference, refs.floating, update, handleMouseMove, opened]);\n\n  return { handleMouseMove, x, y, opened, setOpened, boundaryRef, floating };\n}\n"]},"metadata":{},"sourceType":"module"}