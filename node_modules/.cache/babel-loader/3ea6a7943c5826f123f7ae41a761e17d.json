{"ast":null,"code":"import { useRef } from 'react';\nimport { useDidUpdate } from '../use-did-update/use-did-update.js';\n\nfunction useFocusReturn(_ref) {\n  let {\n    opened,\n    shouldReturnFocus = true\n  } = _ref;\n  const lastActiveElement = useRef();\n\n  const returnFocus = () => {\n    var _a;\n\n    if (lastActiveElement.current && \"focus\" in lastActiveElement.current && typeof lastActiveElement.current.focus === \"function\") {\n      (_a = lastActiveElement.current) == null ? void 0 : _a.focus();\n    }\n  };\n\n  useDidUpdate(() => {\n    let timeout = -1;\n\n    const clearFocusTimeout = event => {\n      if (event.key === \"Tab\") {\n        window.clearTimeout(timeout);\n      }\n    };\n\n    document.addEventListener(\"keydown\", clearFocusTimeout);\n\n    if (opened) {\n      lastActiveElement.current = document.activeElement;\n    } else if (shouldReturnFocus) {\n      timeout = window.setTimeout(returnFocus, 10);\n    }\n\n    return () => {\n      window.clearTimeout(timeout);\n      document.removeEventListener(\"keydown\", clearFocusTimeout);\n    };\n  }, [opened, shouldReturnFocus]);\n  return returnFocus;\n}\n\nexport { useFocusReturn };","map":{"version":3,"mappings":";;;AAEO,SAASA,cAAT,OAA8D;EAAA,IAAtC;IAAEC,MAAF;IAAUC,iBAAiB,GAAG;EAA9B,CAAsC;EACnE,MAAMC,iBAAiB,GAAGC,MAAM,EAAhC;;EACA,MAAMC,WAAW,GAAG,MAAM;IACxB,IAAIC,EAAJ;;IACA,IAAIH,iBAAiB,CAACI,OAAlB,IAA6B,WAAWJ,iBAAiB,CAACI,OAA1D,IAAqE,OAAOJ,iBAAiB,CAACI,OAAlB,CAA0BC,KAAjC,KAA2C,UAApH,EAAgI;MAC9H,CAACF,EAAE,GAAGH,iBAAiB,CAACI,OAAxB,KAAoC,IAApC,GAA2C,KAAK,CAAhD,GAAoDD,EAAE,CAACE,KAAH,EAApD;IACD;EACF,CALD;;EAMAC,YAAY,CAAC,MAAM;IACjB,IAAIC,OAAO,GAAG,CAAC,CAAf;;IACA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;MACnC,IAAIA,KAAK,CAACC,GAAN,KAAc,KAAlB,EAAyB;QACvBC,MAAM,CAACC,YAAP,CAAoBL,OAApB;MACD;IACF,CAJD;;IAKAM,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCN,iBAArC;;IACA,IAAIV,MAAJ,EAAY;MACVE,iBAAiB,CAACI,OAAlB,GAA4BS,QAAQ,CAACE,aAArC;IACD,CAFD,MAEO,IAAIhB,iBAAJ,EAAuB;MAC5BQ,OAAO,GAAGI,MAAM,CAACK,UAAP,CAAkBd,WAAlB,EAA+B,EAA/B,CAAV;IACD;;IACD,OAAO,MAAM;MACXS,MAAM,CAACC,YAAP,CAAoBL,OAApB;MACAM,QAAQ,CAACI,mBAAT,CAA6B,SAA7B,EAAwCT,iBAAxC;IACD,CAHD;EAID,CAjBW,EAiBT,CAACV,MAAD,EAASC,iBAAT,CAjBS,CAAZ;EAkBA,OAAOG,WAAP;AACF","names":["useFocusReturn","opened","shouldReturnFocus","lastActiveElement","useRef","returnFocus","_a","current","focus","useDidUpdate","timeout","clearFocusTimeout","event","key","window","clearTimeout","document","addEventListener","activeElement","setTimeout","removeEventListener"],"sources":["../../src/use-focus-return/use-focus-return.ts"],"sourcesContent":["import { useRef } from 'react';\nimport { useDidUpdate } from '../use-did-update/use-did-update';\n\ninterface UseFocusReturn {\n  opened: boolean;\n  shouldReturnFocus?: boolean;\n}\n\n/** Returns focus to last active element, used in Modal and Drawer */\nexport function useFocusReturn({ opened, shouldReturnFocus = true }: UseFocusReturn) {\n  const lastActiveElement = useRef<HTMLElement>();\n  const returnFocus = () => {\n    if (\n      lastActiveElement.current &&\n      'focus' in lastActiveElement.current &&\n      typeof lastActiveElement.current.focus === 'function'\n    ) {\n      lastActiveElement.current?.focus();\n    }\n  };\n\n  useDidUpdate(() => {\n    let timeout = -1;\n\n    const clearFocusTimeout = (event: KeyboardEvent) => {\n      if (event.key === 'Tab') {\n        window.clearTimeout(timeout);\n      }\n    };\n\n    document.addEventListener('keydown', clearFocusTimeout);\n\n    if (opened) {\n      lastActiveElement.current = document.activeElement as HTMLElement;\n    } else if (shouldReturnFocus) {\n      timeout = window.setTimeout(returnFocus, 10);\n    }\n\n    return () => {\n      window.clearTimeout(timeout);\n      document.removeEventListener('keydown', clearFocusTimeout);\n    };\n  }, [opened, shouldReturnFocus]);\n\n  return returnFocus;\n}\n"]},"metadata":{},"sourceType":"module"}