{"ast":null,"code":"import React from 'react';\nimport { getTransitionStyles } from './get-transition-styles/get-transition-styles.js';\nimport { useTransition } from './use-transition.js';\n\nfunction GroupedTransition(_ref) {\n  var transitions = _ref.transitions,\n      _ref$duration = _ref.duration,\n      duration = _ref$duration === void 0 ? 250 : _ref$duration,\n      _ref$exitDuration = _ref.exitDuration,\n      exitDuration = _ref$exitDuration === void 0 ? duration : _ref$exitDuration,\n      mounted = _ref.mounted,\n      children = _ref.children,\n      timingFunction = _ref.timingFunction,\n      onExit = _ref.onExit,\n      onEntered = _ref.onEntered,\n      onEnter = _ref.onEnter,\n      onExited = _ref.onExited;\n\n  var _useTransition = useTransition({\n    mounted: mounted,\n    duration: duration,\n    exitDuration: exitDuration,\n    timingFunction: timingFunction,\n    onExit: onExit,\n    onEntered: onEntered,\n    onEnter: onEnter,\n    onExited: onExited\n  }),\n      transitionDuration = _useTransition.transitionDuration,\n      transitionStatus = _useTransition.transitionStatus,\n      transitionTimingFunction = _useTransition.transitionTimingFunction;\n\n  if (transitionDuration === 0) {\n    return mounted ? /* @__PURE__ */React.createElement(React.Fragment, null, children({})) : null;\n  }\n\n  if (transitionStatus === \"exited\") {\n    return null;\n  }\n\n  var transitionsStyles = Object.keys(transitions).reduce(function (acc, transition) {\n    acc[transition] = getTransitionStyles({\n      duration: transitions[transition].duration,\n      transition: transitions[transition].transition,\n      timingFunction: transitions[transition].timingFunction || transitionTimingFunction,\n      state: transitionStatus\n    });\n    return acc;\n  }, {});\n  return /* @__PURE__ */React.createElement(React.Fragment, null, children(transitionsStyles));\n}\n\nGroupedTransition.displayName = \"@mantine/core/GroupedTransition\";\nexport { GroupedTransition };","map":{"version":3,"mappings":";;;;AAGO,SAASA,iBAAT,OAWJ;EAAA,IAVDC,WAUC,QAVDA,WAUC;EAAA,yBATDC,QASC;EAAA,IATDA,QASC,8BATU,GASV;EAAA,6BARDC,YAQC;EAAA,IARDA,YAQC,kCARcD,QAQd;EAAA,IAPDE,OAOC,QAPDA,OAOC;EAAA,IANDC,QAMC,QANDA,QAMC;EAAA,IALDC,cAKC,QALDA,cAKC;EAAA,IAJDC,MAIC,QAJDA,MAIC;EAAA,IAHDC,SAGC,QAHDA,SAGC;EAAA,IAFDC,OAEC,QAFDA,OAEC;EAAA,IADDC,QACC,QADDA,QACC;;EACD,qBAA2EC,aAAa,CAAC;IACvFP,OAAO,EAAPA,OADuF;IAEvFF,QAAQ,EAARA,QAFuF;IAGvFC,YAAY,EAAZA,YAHuF;IAIvFG,cAAc,EAAdA,cAJuF;IAKvFC,MAAM,EAANA,MALuF;IAMvFC,SAAS,EAATA,SANuF;IAOvFC,OAAO,EAAPA,OAPuF;IAQvFC,QAAQ,EAARA;EARuF,CAAD,CAAxF;EAAA,IAAQE,kBAAR,kBAAQA,kBAAR;EAAA,IAA4BC,gBAA5B,kBAA4BA,gBAA5B;EAAA,IAA8CC,wBAA9C,kBAA8CA,wBAA9C;;EAUA,IAAIF,kBAAkB,KAAK,CAA3B,EAA8B;IAC5B,OAAOR,OAAO,kBAAmBW,KAAK,CAACC,aAAN,CAAoBD,KAAK,CAACE,QAA1B,EAAoC,IAApC,EAA0CZ,QAAQ,CAAC,EAAD,CAAlD,CAAnB,GAA6E,IAA3F;EACD;;EACD,IAAIQ,gBAAgB,KAAK,QAAzB,EAAmC;IACjC,OAAO,IAAP;EACD;;EACD,IAAMK,iBAAiB,GAAGC,MAAM,CAACC,IAAP,CAAYnB,WAAZ,EAAyBoB,MAAzB,CAAgC,UAACC,GAAD,EAAMC,UAAN,EAAqB;IAC7ED,GAAG,CAACC,UAAD,CAAH,GAAkBC,mBAAmB,CAAC;MACpCtB,QAAQ,EAAED,WAAW,CAACsB,UAAD,CAAX,CAAwBrB,QADE;MAEpCqB,UAAU,EAAEtB,WAAW,CAACsB,UAAD,CAAX,CAAwBA,UAFA;MAGpCjB,cAAc,EAAEL,WAAW,CAACsB,UAAD,CAAX,CAAwBjB,cAAxB,IAA0CQ,wBAHtB;MAIpCW,KAAK,EAAEZ;IAJ6B,CAAD,CAArC;IAMA,OAAOS,GAAP;EACD,CARyB,EAQvB,EARuB,CAA1B;EASA,sBAAuBP,KAAK,CAACC,aAAN,CAAoBD,KAAK,CAACE,QAA1B,EAAoC,IAApC,EAA0CZ,QAAQ,CAACa,iBAAD,CAAlD,CAAvB;AACD;;AACDlB,iBAAiB,CAAC0B,WAAlB,GAAgC,iCAAhC","names":["GroupedTransition","transitions","duration","exitDuration","mounted","children","timingFunction","onExit","onEntered","onEnter","onExited","useTransition","transitionDuration","transitionStatus","transitionTimingFunction","React","createElement","Fragment","transitionsStyles","Object","keys","reduce","acc","transition","getTransitionStyles","state","displayName"],"sources":["../../src/Transition/GroupedTransition.tsx"],"sourcesContent":["import React from 'react';\nimport { getTransitionStyles } from './get-transition-styles/get-transition-styles';\nimport { useTransition } from './use-transition';\nimport { MantineTransition } from './transitions';\n\ninterface GroupedTransitionItem {\n  duration: number;\n  timingFunction?: React.CSSProperties['transitionTimingFunction'];\n  transition: MantineTransition;\n}\n\nexport interface GroupedTransitionProps {\n  /** Transitions group */\n  transitions: Record<string, GroupedTransitionItem>;\n\n  /** Render function with transition group styles argument */\n  children(styles: Record<string, React.CSSProperties>): React.ReactElement<any, any>;\n\n  /** Enter transition duration in ms */\n  duration?: number;\n\n  /** Exit transition duration in ms */\n  exitDuration?: number;\n\n  /** Transition timing function, defaults to theme.transitionTimingFunction */\n  timingFunction?: string;\n\n  /** When true, component will be mounted */\n  mounted: boolean;\n\n  /** Calls when exit transition ends */\n  onExited?: () => void;\n\n  /** Calls when exit transition starts */\n  onExit?: () => void;\n\n  /** Calls when enter transition starts */\n  onEnter?: () => void;\n\n  /** Calls when enter transition ends */\n  onEntered?: () => void;\n}\n\nexport function GroupedTransition({\n  transitions,\n  duration = 250,\n  exitDuration = duration,\n  mounted,\n  children,\n  timingFunction,\n  onExit,\n  onEntered,\n  onEnter,\n  onExited,\n}: GroupedTransitionProps) {\n  const { transitionDuration, transitionStatus, transitionTimingFunction } = useTransition({\n    mounted,\n    duration,\n    exitDuration,\n    timingFunction,\n    onExit,\n    onEntered,\n    onEnter,\n    onExited,\n  });\n\n  if (transitionDuration === 0) {\n    return mounted ? <>{children({})}</> : null;\n  }\n\n  if (transitionStatus === 'exited') {\n    return null;\n  }\n\n  const transitionsStyles = Object.keys(transitions).reduce((acc, transition) => {\n    acc[transition] = getTransitionStyles({\n      duration: transitions[transition].duration,\n      transition: transitions[transition].transition,\n      timingFunction: transitions[transition].timingFunction || transitionTimingFunction,\n      state: transitionStatus,\n    });\n\n    return acc;\n  }, {});\n\n  return <>{children(transitionsStyles)}</>;\n}\n\nGroupedTransition.displayName = '@mantine/core/GroupedTransition';\n"]},"metadata":{},"sourceType":"module"}