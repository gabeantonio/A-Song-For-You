{"ast":null,"code":"import React, { createContext, useContext } from 'react';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nconst AvatarGroupContext = createContext(null);\n\nfunction AvatarGroupProvider(_ref) {\n  let {\n    spacing,\n    children\n  } = _ref;\n  return /* @__PURE__ */React.createElement(AvatarGroupContext.Provider, {\n    value: {\n      spacing\n    }\n  }, children);\n}\n\nfunction useAvatarGroupContext() {\n  const ctx = useContext(AvatarGroupContext);\n\n  if (ctx) {\n    return __spreadProps(__spreadValues({}, ctx), {\n      withinGroup: true\n    });\n  }\n\n  return {\n    spacing: null,\n    withinGroup: false\n  };\n}\n\nexport { AvatarGroupProvider, useAvatarGroupContext };","map":{"version":3,"mappings":";AAAA,IAAIA,SAAS,GAAGC,MAAM,CAACC,cAAvB;AACA,IAAIC,UAAU,GAAGF,MAAM,CAACG,gBAAxB;AACA,IAAIC,iBAAiB,GAAGJ,MAAM,CAACK,yBAA/B;AACA,IAAIC,mBAAmB,GAAGN,MAAM,CAACO,qBAAjC;AACA,IAAIC,YAAY,GAAGR,MAAM,CAACS,SAAP,CAAiBC,cAApC;AACA,IAAIC,YAAY,GAAGX,MAAM,CAACS,SAAP,CAAiBG,oBAApC;;AACA,IAAIC,eAAe,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,KAAX,KAAqBD,GAAG,IAAID,GAAP,GAAaf,SAAS,CAACe,GAAD,EAAMC,GAAN,EAAW;EAAEE,UAAU,EAAE,IAAd;EAAoBC,YAAY,EAAE,IAAlC;EAAwCC,QAAQ,EAAE,IAAlD;EAAwDH;AAAxD,CAAX,CAAtB,GAAoGF,GAAG,CAACC,GAAD,CAAH,GAAWC,KAA1J;;AACA,IAAII,cAAc,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;EAC7B,KAAK,IAAIC,IAAT,IAAiBD,CAAC,KAAKA,CAAC,GAAG,EAAT,CAAlB,EACE,IAAId,YAAY,CAACgB,IAAb,CAAkBF,CAAlB,EAAqBC,IAArB,CAAJ,EACEV,eAAe,CAACQ,CAAD,EAAIE,IAAJ,EAAUD,CAAC,CAACC,IAAD,CAAX,CAAf;;EACJ,IAAIjB,mBAAJ,EACE,KAAK,IAAIiB,IAAT,IAAiBjB,mBAAmB,CAACgB,CAAD,CAApC,EAAyC;IACvC,IAAIX,YAAY,CAACa,IAAb,CAAkBF,CAAlB,EAAqBC,IAArB,CAAJ,EACEV,eAAe,CAACQ,CAAD,EAAIE,IAAJ,EAAUD,CAAC,CAACC,IAAD,CAAX,CAAf;EACH;EACH,OAAOF,CAAP;AACD,CAVD;;AAWA,IAAII,aAAa,GAAG,CAACJ,CAAD,EAAIC,CAAJ,KAAUpB,UAAU,CAACmB,CAAD,EAAIjB,iBAAiB,CAACkB,CAAD,CAArB,CAAxC;;AAEA,MAAMI,kBAAkB,GAAGC,aAAa,CAAC,IAAD,CAAxC;;AACO,SAASC,mBAAT,OAAoD;EAAA,IAAvB;IAAEC,OAAF;IAAWC;EAAX,CAAuB;EACzD,sBAAuBC,KAAK,CAACC,aAAN,CAAoBN,kBAAkB,CAACO,QAAvC,EAAiD;IACtEjB,KAAK,EAAE;MAAEa;IAAF;EAD+D,CAAjD,EAEpBC,QAFoB,CAAvB;AAGD;;AACM,SAASI,qBAAT,GAAiC;EACtC,MAAMC,GAAG,GAAGC,UAAU,CAACV,kBAAD,CAAtB;;EACA,IAAIS,GAAJ,EAAS;IACP,OAAOV,aAAa,CAACL,cAAc,CAAC,EAAD,EAAKe,GAAL,CAAf,EAA0B;MAAEE,WAAW,EAAE;IAAf,CAA1B,CAApB;EACD;;EACD,OAAO;IAAER,OAAO,EAAE,IAAX;IAAiBQ,WAAW,EAAE;EAA9B,CAAP;AACF","names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","AvatarGroupContext","createContext","AvatarGroupProvider","spacing","children","React","createElement","Provider","useAvatarGroupContext","ctx","useContext","withinGroup"],"sources":["../../../src/Avatar/AvatarGroup/AvatarGroup.context.tsx"],"sourcesContent":["import React, { createContext, useContext } from 'react';\nimport { MantineNumberSize } from '@mantine/styles';\n\ninterface ContextValue {\n  spacing: MantineNumberSize;\n}\n\nconst AvatarGroupContext = createContext<ContextValue>(null);\n\ninterface AvatarGroupProviderProps extends ContextValue {\n  children: React.ReactNode;\n}\n\nexport function AvatarGroupProvider({ spacing, children }: AvatarGroupProviderProps) {\n  return <AvatarGroupContext.Provider value={{ spacing }}>{children}</AvatarGroupContext.Provider>;\n}\n\nexport function useAvatarGroupContext() {\n  const ctx = useContext(AvatarGroupContext);\n\n  if (ctx) {\n    return { ...ctx, withinGroup: true };\n  }\n\n  return { spacing: null, withinGroup: false };\n}\n"]},"metadata":{},"sourceType":"module"}