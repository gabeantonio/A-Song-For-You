{"ast":null,"code":"import { validateValues } from './validate-values.js';\n\nfunction validateFieldValue(path, rules, values) {\n  if (typeof path !== \"string\") {\n    return {\n      hasError: false,\n      error: null\n    };\n  }\n\n  const results = validateValues(rules, values);\n  const hasError = (path in results.errors);\n  return {\n    hasError,\n    error: hasError ? results.errors[path] : null\n  };\n}\n\nexport { validateFieldValue };","map":{"version":3,"mappings":";;AACO,SAASA,kBAAT,CAA4BC,IAA5B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiD;EACtD,IAAI,OAAOF,IAAP,KAAgB,QAApB,EAA8B;IAC5B,OAAO;MAAEG,QAAQ,EAAE,KAAZ;MAAmBC,KAAK,EAAE;IAA1B,CAAP;EACD;;EACD,MAAMC,OAAO,GAAGC,cAAc,CAACL,KAAD,EAAQC,MAAR,CAA9B;EACA,MAAMC,QAAQ,IAAGH,IAAI,IAAIK,OAAO,CAACE,MAAnB,CAAd;EACA,OAAO;IAAEJ,QAAF;IAAYC,KAAK,EAAED,QAAQ,GAAGE,OAAO,CAACE,MAAR,CAAeP,IAAf,CAAH,GAA0B;EAArD,CAAP;AACF","names":["validateFieldValue","path","rules","values","hasError","error","results","validateValues","errors"],"sources":["../../src/validate/validate-field-value.ts"],"sourcesContent":["import { FormValidateInput, FormFieldValidationResult } from '../types';\nimport { validateValues } from './validate-values';\n\nexport function validateFieldValue<T>(\n  path: unknown,\n  rules: FormValidateInput<T>,\n  values: T\n): FormFieldValidationResult {\n  if (typeof path !== 'string') {\n    return { hasError: false, error: null };\n  }\n\n  const results = validateValues(rules, values);\n  const hasError = path in results.errors;\n  return { hasError, error: hasError ? results.errors[path] : null };\n}\n"]},"metadata":{},"sourceType":"module"}