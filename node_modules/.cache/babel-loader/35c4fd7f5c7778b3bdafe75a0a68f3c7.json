{"ast":null,"code":"function setToken(token) {\n  if (token) {\n    // localStorage is given to us by the browser\n    localStorage.setItem('token', token);\n  } else {\n    localStorage.removeItem('token');\n  }\n}\n\nfunction getToken() {\n  let token = localStorage.getItem('token');\n\n  if (token) {\n    // Check if expired, remove if it is\n    // atob is a function that decodes a base-64 string\n    const payload = JSON.parse(atob(token.split('.')[1])); // JWT's exp is expressed in seconds, not milliseconds, so convert\n\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem('token');\n      token = null;\n    }\n  }\n\n  return token;\n}\n\nfunction getUserFromToken() {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n}\n\nfunction removeToken() {\n  localStorage.removeItem('token');\n}\n\nexport default {\n  setToken,\n  getToken,\n  removeToken,\n  getUserFromToken\n};","map":{"version":3,"names":["setToken","token","localStorage","setItem","removeItem","getToken","getItem","payload","JSON","parse","atob","split","exp","Date","now","getUserFromToken","user","removeToken"],"sources":["/Users/gabrieldeleon/code/GA-Project-4/src/utils/tokenService.js"],"sourcesContent":["function setToken(token) {\n    if (token) {\n      // localStorage is given to us by the browser\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      // atob is a function that decodes a base-64 string\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };"],"mappings":"AAAA,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;EACrB,IAAIA,KAAJ,EAAW;IACT;IACAC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B;EACD,CAHD,MAGO;IACLC,YAAY,CAACE,UAAb,CAAwB,OAAxB;EACD;AACF;;AAED,SAASC,QAAT,GAAoB;EAClB,IAAIJ,KAAK,GAAGC,YAAY,CAACI,OAAb,CAAqB,OAArB,CAAZ;;EACA,IAAIL,KAAJ,EAAW;IACT;IACA;IACA,MAAMM,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACT,KAAK,CAACU,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAD,CAAf,CAAhB,CAHS,CAIT;;IACA,IAAIJ,OAAO,CAACK,GAAR,GAAcC,IAAI,CAACC,GAAL,KAAa,IAA/B,EAAqC;MACnCZ,YAAY,CAACE,UAAb,CAAwB,OAAxB;MACAH,KAAK,GAAG,IAAR;IACD;EACF;;EACD,OAAOA,KAAP;AACD;;AAED,SAASc,gBAAT,GAA4B;EAC1B,MAAMd,KAAK,GAAGI,QAAQ,EAAtB;EACA,OAAOJ,KAAK,GAAGO,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACT,KAAK,CAACU,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAD,CAAf,EAAsCK,IAAzC,GAAgD,IAA5D;AACD;;AAED,SAASC,WAAT,GAAuB;EACrBf,YAAY,CAACE,UAAb,CAAwB,OAAxB;AACD;;AAED,eAAe;EACbJ,QADa;EAEbK,QAFa;EAGbY,WAHa;EAIbF;AAJa,CAAf"},"metadata":{},"sourceType":"module"}