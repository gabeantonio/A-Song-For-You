{"ast":null,"code":"import tokenService from './tokenService';\nconst BASE_URL = '/api/users/'; // NOTE THIS IS configured to send of a multi/part form request\n// aka photo \n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST'\n  }).then(res => {\n    if (res.ok) return res.json(); // Probably a duplicate email\n    // Writing your error handling like this allows you to throw the error response \n    // to the catch block where signup occurs,  \n    //     res.status(400).json({ err: \"Something went wrong\" }); notice err, and response.err match\n\n    return res.json().then(response => {\n      console.log(response);\n      throw new Error(response.err);\n    });\n  }) // Parameter destructuring!\n  .then(_ref => {\n    let {\n      token\n    } = _ref;\n    return tokenService.setToken(token);\n  }); // Setting our token in localStorage in our browser\n  // then we'll be able to use with every request!\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    }),\n    body: JSON.stringify(creds)\n  }).then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    return res.json().then(response => {\n      console.log(response);\n      throw new Error(response.err);\n    });\n  }).then(_ref2 => {\n    let {\n      token\n    } = _ref2;\n    return tokenService.setToken(token);\n  });\n}\n\nexport default {\n  signup,\n  logout,\n  login,\n  getUser\n};","map":{"version":3,"names":["tokenService","BASE_URL","signup","user","fetch","method","then","res","ok","json","response","console","log","Error","err","token","setToken","getUser","getUserFromToken","logout","removeToken","login","creds","headers","Headers","body","JSON","stringify"],"sources":["/Users/gabrieldeleon/code/GA-Project-4/src/utils/userService.js"],"sourcesContent":["import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\n\n// NOTE THIS IS configured to send of a multi/part form request\n// aka photo \nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    \n    // Writing your error handling like this allows you to throw the error response \n    // to the catch block where signup occurs,  \n\n//     res.status(400).json({ err: \"Something went wrong\" }); notice err, and response.err match\n    return res.json().then(response => {\n      console.log(response)\n      throw new Error(response.err)\n    })\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // Setting our token in localStorage in our browser\n  // then we'll be able to use with every request!\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    return res.json().then(response => {\n      console.log(response)\n      throw new Error(response.err)\n    })\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\n\nexport default {\n  signup, \n  logout,\n  login,\n  getUser\n};\n"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,QAAQ,GAAG,aAAjB,C,CAGA;AACA;;AACA,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;EACpB,OAAOC,KAAK,CAACH,QAAQ,GAAG,QAAZ,EAAsB;IAChCI,MAAM,EAAE;EADwB,CAAtB,CAAL,CAGNC,IAHM,CAGDC,GAAG,IAAI;IACX,IAAIA,GAAG,CAACC,EAAR,EAAY,OAAOD,GAAG,CAACE,IAAJ,EAAP,CADD,CAEX;IAEA;IACA;IAEJ;;IACI,OAAOF,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgBI,QAAQ,IAAI;MACjCC,OAAO,CAACC,GAAR,CAAYF,QAAZ;MACA,MAAM,IAAIG,KAAJ,CAAUH,QAAQ,CAACI,GAAnB,CAAN;IACD,CAHM,CAAP;EAID,CAfM,EAgBP;EAhBO,CAiBNR,IAjBM,CAiBD;IAAA,IAAC;MAACS;IAAD,CAAD;IAAA,OAAaf,YAAY,CAACgB,QAAb,CAAsBD,KAAtB,CAAb;EAAA,CAjBC,CAAP,CADoB,CAmBpB;EACA;EACA;EACA;AACD;;AAED,SAASE,OAAT,GAAmB;EACjB,OAAOjB,YAAY,CAACkB,gBAAb,EAAP;AACD;;AAED,SAASC,MAAT,GAAkB;EAChBnB,YAAY,CAACoB,WAAb;AACD;;AAED,SAASC,KAAT,CAAeC,KAAf,EAAsB;EACpB,OAAOlB,KAAK,CAACH,QAAQ,GAAG,OAAZ,EAAqB;IAC/BI,MAAM,EAAE,MADuB;IAE/BkB,OAAO,EAAE,IAAIC,OAAJ,CAAY;MAAC,gBAAgB;IAAjB,CAAZ,CAFsB;IAG/BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,KAAf;EAHyB,CAArB,CAAL,CAKNhB,IALM,CAKDC,GAAG,IAAI;IACX;IACA,IAAIA,GAAG,CAACC,EAAR,EAAY,OAAOD,GAAG,CAACE,IAAJ,EAAP;IACZ,OAAOF,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgBI,QAAQ,IAAI;MACjCC,OAAO,CAACC,GAAR,CAAYF,QAAZ;MACA,MAAM,IAAIG,KAAJ,CAAUH,QAAQ,CAACI,GAAnB,CAAN;IACD,CAHM,CAAP;EAID,CAZM,EAaNR,IAbM,CAaD;IAAA,IAAC;MAACS;IAAD,CAAD;IAAA,OAAaf,YAAY,CAACgB,QAAb,CAAsBD,KAAtB,CAAb;EAAA,CAbC,CAAP;AAcD;;AAGD,eAAe;EACbb,MADa;EAEbiB,MAFa;EAGbE,KAHa;EAIbJ;AAJa,CAAf"},"metadata":{},"sourceType":"module"}