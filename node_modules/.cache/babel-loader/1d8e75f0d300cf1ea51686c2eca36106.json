{"ast":null,"code":"import _slicedToArray from \"/Users/gabrieldeleon/code/GA-Project-4/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState, useEffect } from 'react';\nimport { useForceUpdate } from '../use-force-update/use-force-update.js';\n\nfunction useTextSelection() {\n  var forceUpdate = useForceUpdate();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selection = _useState2[0],\n      setSelection = _useState2[1];\n\n  var handleSelectionChange = function handleSelectionChange() {\n    setSelection(document.getSelection());\n    forceUpdate();\n  };\n\n  useEffect(function () {\n    setSelection(document.getSelection());\n    document.addEventListener(\"selectionchange\", handleSelectionChange);\n    return function () {\n      return document.removeEventListener(\"selectionchange\", handleSelectionChange);\n    };\n  }, []);\n  return selection;\n}\n\nexport { useTextSelection };","map":{"version":3,"mappings":";;;;AAEO,SAASA,gBAAT,GAA4B;EACjC,IAAMC,WAAW,GAAGC,cAAc,EAAlC;;EACA,gBAAkCC,QAAQ,CAAC,IAAD,CAA1C;EAAA;EAAA,IAAOC,SAAP;EAAA,IAAkBC,YAAlB;;EACA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;IAClCD,YAAY,CAACE,QAAQ,CAACC,YAAT,EAAD,CAAZ;IACAP,WAAW;EACZ,CAHD;;EAIAQ,SAAS,CAAC,YAAM;IACdJ,YAAY,CAACE,QAAQ,CAACC,YAAT,EAAD,CAAZ;IACAD,QAAQ,CAACG,gBAAT,CAA0B,iBAA1B,EAA6CJ,qBAA7C;IACA,OAAO;MAAA,OAAMC,QAAQ,CAACI,mBAAT,CAA6B,iBAA7B,EAAgDL,qBAAhD,CAAN;IAAA,CAAP;EACD,CAJQ,EAIN,EAJM,CAAT;EAKA,OAAOF,SAAP;AACF","names":["useTextSelection","forceUpdate","useForceUpdate","useState","selection","setSelection","handleSelectionChange","document","getSelection","useEffect","addEventListener","removeEventListener"],"sources":["../../src/use-text-selection/use-text-selection.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useForceUpdate } from '../use-force-update/use-force-update';\n\nexport function useTextSelection(): Selection | null {\n  const forceUpdate = useForceUpdate();\n  const [selection, setSelection] = useState<Selection | null>(null);\n\n  const handleSelectionChange = () => {\n    setSelection(document.getSelection());\n    forceUpdate();\n  };\n\n  useEffect(() => {\n    setSelection(document.getSelection());\n    document.addEventListener('selectionchange', handleSelectionChange);\n    return () => document.removeEventListener('selectionchange', handleSelectionChange);\n  }, []);\n\n  return selection;\n}\n"]},"metadata":{},"sourceType":"module"}