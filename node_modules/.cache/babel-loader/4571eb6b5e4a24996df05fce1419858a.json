{"ast":null,"code":"import _slicedToArray from \"/Users/gabrieldeleon/code/GA-Project-4/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/gabrieldeleon/code/GA-Project-4/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\n\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) {\n    if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return a;\n};\n\nvar __spreadProps = function __spreadProps(a, b) {\n  return __defProps(a, __getOwnPropDescs(b));\n};\n\nfunction parseHotkey(hotkey) {\n  var keys = hotkey.toLowerCase().split(\"+\").map(function (part) {\n    return part.trim();\n  });\n  var modifiers = {\n    alt: keys.includes(\"alt\"),\n    ctrl: keys.includes(\"ctrl\"),\n    meta: keys.includes(\"meta\"),\n    mod: keys.includes(\"mod\"),\n    shift: keys.includes(\"shift\")\n  };\n  var reservedKeys = [\"alt\", \"ctrl\", \"meta\", \"shift\", \"mod\"];\n  var freeKey = keys.find(function (key) {\n    return !reservedKeys.includes(key);\n  });\n  return __spreadProps(__spreadValues({}, modifiers), {\n    key: freeKey\n  });\n}\n\nfunction isExactHotkey(hotkey, event) {\n  var alt = hotkey.alt,\n      ctrl = hotkey.ctrl,\n      meta = hotkey.meta,\n      mod = hotkey.mod,\n      shift = hotkey.shift,\n      key = hotkey.key;\n  var altKey = event.altKey,\n      ctrlKey = event.ctrlKey,\n      metaKey = event.metaKey,\n      shiftKey = event.shiftKey,\n      pressedKey = event.key;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  if (key && (pressedKey.toLowerCase() === key.toLowerCase() || event.code.replace(\"Key\", \"\").toLowerCase() === key.toLowerCase())) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getHotkeyMatcher(hotkey) {\n  return function (event) {\n    return isExactHotkey(parseHotkey(hotkey), event);\n  };\n}\n\nfunction getHotkeyHandler(hotkeys) {\n  return function (event) {\n    var _event = \"nativeEvent\" in event ? event.nativeEvent : event;\n\n    hotkeys.forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          hotkey = _ref2[0],\n          handler = _ref2[1];\n\n      if (getHotkeyMatcher(hotkey)(_event)) {\n        event.preventDefault();\n        handler(_event);\n      }\n    });\n  };\n}\n\nexport { getHotkeyHandler, getHotkeyMatcher, parseHotkey };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","parseHotkey","hotkey","keys","toLowerCase","split","map","part","trim","modifiers","alt","includes","ctrl","meta","mod","shift","reservedKeys","freeKey","find","isExactHotkey","event","altKey","ctrlKey","metaKey","shiftKey","pressedKey","code","replace","getHotkeyMatcher","getHotkeyHandler","hotkeys","_event","nativeEvent","forEach","handler","preventDefault"],"sources":["../../src/use-hotkeys/parse-hotkey.ts"],"sourcesContent":["export type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const { alt, ctrl, meta, mod, shift, key } = hotkey;\n  const { altKey, ctrlKey, metaKey, shiftKey, key: pressedKey } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  if (\n    key &&\n    (pressedKey.toLowerCase() === key.toLowerCase() ||\n      event.code.replace('Key', '').toLowerCase() === key.toLowerCase())\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n\ntype HotkeyItem = [string, (event: React.KeyboardEvent<HTMLElement> | KeyboardEvent) => void];\n\nexport function getHotkeyHandler(hotkeys: HotkeyItem[]) {\n  return (event: React.KeyboardEvent<HTMLElement> | KeyboardEvent) => {\n    const _event = 'nativeEvent' in event ? event.nativeEvent : event;\n    hotkeys.forEach(([hotkey, handler]) => {\n      if (getHotkeyMatcher(hotkey)(_event)) {\n        event.preventDefault();\n        handler(_event);\n      }\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}