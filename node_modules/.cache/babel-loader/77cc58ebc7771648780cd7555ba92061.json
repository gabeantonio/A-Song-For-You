{"ast":null,"code":"var _jsxFileName = \"/Users/gabrieldeleon/code/GA-Project-4/src/components/AddPlaylist.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useToggle, upperFirst } from '@mantine/hooks';\nimport { useForm } from '@mantine/form';\nimport { TextInput, PasswordInput, Text, Paper, Group, PaperProps, Button, Divider, Checkbox, Anchor, Stack } from '@mantine/core';\nimport { GoogleButton, TwitterButton } from '../SocialButtons/SocialButtons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthenticationForm(props) {\n  _s();\n\n  const [type, toggle] = useToggle(['login', 'register']);\n  const form = useForm({\n    initialValues: {\n      email: '',\n      name: '',\n      password: '',\n      terms: true\n    },\n    validate: {\n      email: val => /^\\S+@\\S+$/.test(val) ? null : 'Invalid email',\n      password: val => val.length <= 6 ? 'Password should include at least 6 characters' : null\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    radius: \"md\",\n    p: \"xl\",\n    withBorder: true,\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      size: \"lg\",\n      weight: 500,\n      children: [\"Welcome to Mantine, \", type, \" with\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Group, {\n      grow: true,\n      mb: \"md\",\n      mt: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(GoogleButton, {\n        radius: \"xl\",\n        children: \"Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TwitterButton, {\n        radius: \"xl\",\n        children: \"Twitter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      label: \"Or continue with email\",\n      labelPosition: \"center\",\n      my: \"lg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: form.onSubmit(() => {}),\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        children: [type === 'register' && /*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"Name\",\n          placeholder: \"Your name\",\n          value: form.values.name,\n          onChange: event => form.setFieldValue('name', event.currentTarget.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          required: true,\n          label: \"Email\",\n          placeholder: \"hello@mantine.dev\",\n          value: form.values.email,\n          onChange: event => form.setFieldValue('email', event.currentTarget.value),\n          error: form.errors.email && 'Invalid email'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n          required: true,\n          label: \"Password\",\n          placeholder: \"Your password\",\n          value: form.values.password,\n          onChange: event => form.setFieldValue('password', event.currentTarget.value),\n          error: form.errors.password && 'Password should include at least 6 characters'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), type === 'register' && /*#__PURE__*/_jsxDEV(Checkbox, {\n          label: \"I accept terms and conditions\",\n          checked: form.values.terms,\n          onChange: event => form.setFieldValue('terms', event.currentTarget.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Group, {\n        position: \"apart\",\n        mt: \"xl\",\n        children: [/*#__PURE__*/_jsxDEV(Anchor, {\n          component: \"button\",\n          type: \"button\",\n          color: \"dimmed\",\n          onClick: () => toggle(),\n          size: \"xs\",\n          children: type === 'register' ? 'Already have an account? Login' : \"Don't have an account? Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: upperFirst(type)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthenticationForm, \"P1ccvRymaWyeBNt71UMRX9DzU8g=\", false, function () {\n  return [useToggle, useForm];\n});\n\n_c = AuthenticationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthenticationForm\");","map":{"version":3,"names":["React","useToggle","upperFirst","useForm","TextInput","PasswordInput","Text","Paper","Group","PaperProps","Button","Divider","Checkbox","Anchor","Stack","GoogleButton","TwitterButton","AuthenticationForm","props","type","toggle","form","initialValues","email","name","password","terms","validate","val","test","length","onSubmit","values","event","setFieldValue","currentTarget","value","errors","checked"],"sources":["/Users/gabrieldeleon/code/GA-Project-4/src/components/AddPlaylist.jsx"],"sourcesContent":["import React from 'react';\nimport { useToggle, upperFirst } from '@mantine/hooks';\nimport { useForm } from '@mantine/form';\nimport {\n  TextInput,\n  PasswordInput,\n  Text,\n  Paper,\n  Group,\n  PaperProps,\n  Button,\n  Divider,\n  Checkbox,\n  Anchor,\n  Stack,\n} from '@mantine/core';\nimport { GoogleButton, TwitterButton } from '../SocialButtons/SocialButtons';\n\nexport default function AuthenticationForm(props) {\n  const [type, toggle] = useToggle(['login', 'register']);\n  const form = useForm({\n    initialValues: {\n      email: '',\n      name: '',\n      password: '',\n      terms: true,\n    },\n\n    validate: {\n      email: (val) => (/^\\S+@\\S+$/.test(val) ? null : 'Invalid email'),\n      password: (val) => (val.length <= 6 ? 'Password should include at least 6 characters' : null),\n    },\n  });\n\n  return (\n    <Paper radius=\"md\" p=\"xl\" withBorder {...props}>\n      <Text size=\"lg\" weight={500}>\n        Welcome to Mantine, {type} with\n      </Text>\n\n      <Group grow mb=\"md\" mt=\"md\">\n        <GoogleButton radius=\"xl\">Google</GoogleButton>\n        <TwitterButton radius=\"xl\">Twitter</TwitterButton>\n      </Group>\n\n      <Divider label=\"Or continue with email\" labelPosition=\"center\" my=\"lg\" />\n\n      <form onSubmit={form.onSubmit(() => {})}>\n        <Stack>\n          {type === 'register' && (\n            <TextInput\n              label=\"Name\"\n              placeholder=\"Your name\"\n              value={form.values.name}\n              onChange={(event) => form.setFieldValue('name', event.currentTarget.value)}\n            />\n          )}\n\n          <TextInput\n            required\n            label=\"Email\"\n            placeholder=\"hello@mantine.dev\"\n            value={form.values.email}\n            onChange={(event) => form.setFieldValue('email', event.currentTarget.value)}\n            error={form.errors.email && 'Invalid email'}\n          />\n\n          <PasswordInput\n            required\n            label=\"Password\"\n            placeholder=\"Your password\"\n            value={form.values.password}\n            onChange={(event) => form.setFieldValue('password', event.currentTarget.value)}\n            error={form.errors.password && 'Password should include at least 6 characters'}\n          />\n\n          {type === 'register' && (\n            <Checkbox\n              label=\"I accept terms and conditions\"\n              checked={form.values.terms}\n              onChange={(event) => form.setFieldValue('terms', event.currentTarget.checked)}\n            />\n          )}\n        </Stack>\n\n        <Group position=\"apart\" mt=\"xl\">\n          <Anchor\n            component=\"button\"\n            type=\"button\"\n            color=\"dimmed\"\n            onClick={() => toggle()}\n            size=\"xs\"\n          >\n            {type === 'register'\n              ? 'Already have an account? Login'\n              : \"Don't have an account? Register\"}\n          </Anchor>\n          <Button type=\"submit\">{upperFirst(type)}</Button>\n        </Group>\n      </form>\n    </Paper>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}