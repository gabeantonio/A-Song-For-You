{"ast":null,"code":"import React, { forwardRef, useRef, useState } from 'react';\nimport { useUncontrolled, useDidUpdate } from '@mantine/hooks';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { ColorSwatch } from '../ColorSwatch/ColorSwatch.js';\nimport { HueSlider } from './HueSlider/HueSlider.js';\nimport { AlphaSlider } from './AlphaSlider/AlphaSlider.js';\nimport { Saturation } from './Saturation/Saturation.js';\nimport { Swatches } from './Swatches/Swatches.js';\nimport useStyles from './ColorPicker.styles.js';\nimport { parseColor, isColorValid } from './converters/parsers.js';\nimport { convertHsvaTo } from './converters/converters.js';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst SWATCH_SIZES = {\n  xs: 26,\n  sm: 34,\n  md: 42,\n  lg: 50,\n  xl: 54\n};\nconst defaultProps = {\n  swatchesPerRow: 10,\n  size: \"sm\",\n  withPicker: true,\n  focusable: true,\n  __staticSelector: \"ColorPicker\"\n};\nconst ColorPicker = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"ColorPicker\", defaultProps, props),\n        {\n    value,\n    defaultValue,\n    onChange,\n    onChangeEnd,\n    format,\n    swatches,\n    swatchesPerRow,\n    size,\n    withPicker,\n    fullWidth,\n    focusable,\n    __staticSelector,\n    saturationLabel,\n    hueLabel,\n    alphaLabel,\n    className,\n    styles,\n    classNames,\n    unstyled\n  } = _a,\n        others = __objRest(_a, [\"value\", \"defaultValue\", \"onChange\", \"onChangeEnd\", \"format\", \"swatches\", \"swatchesPerRow\", \"size\", \"withPicker\", \"fullWidth\", \"focusable\", \"__staticSelector\", \"saturationLabel\", \"hueLabel\", \"alphaLabel\", \"className\", \"styles\", \"classNames\", \"unstyled\"]);\n\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles({\n    size,\n    fullWidth\n  }, {\n    classNames,\n    styles,\n    name: __staticSelector,\n    unstyled\n  });\n  const formatRef = useRef(format);\n  const valueRef = useRef(null);\n  const updateRef = useRef(true);\n  const withAlpha = format === \"rgba\" || format === \"hsla\";\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: \"#FFFFFF\",\n    onChange\n  });\n  const [parsed, setParsed] = useState(parseColor(_value));\n\n  const handleChange = color => {\n    updateRef.current = false;\n    setParsed(current => {\n      const next = __spreadValues(__spreadValues({}, current), color);\n\n      valueRef.current = convertHsvaTo(formatRef.current, next);\n      return next;\n    });\n    setValue(valueRef.current);\n    setTimeout(() => {\n      updateRef.current = true;\n    }, 0);\n  };\n\n  useDidUpdate(() => {\n    if (isColorValid(value) && updateRef.current) {\n      setParsed(parseColor(value));\n      updateRef.current = true;\n    }\n  }, [value]);\n  useDidUpdate(() => {\n    formatRef.current = format;\n    setValue(convertHsvaTo(format, parsed));\n  }, [format]);\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.wrapper, className),\n    ref\n  }, others), withPicker && /* @__PURE__ */React.createElement(React.Fragment, null, /* @__PURE__ */React.createElement(Saturation, {\n    value: parsed,\n    onChange: handleChange,\n    onChangeEnd: _ref => {\n      let {\n        s,\n        v\n      } = _ref;\n      return onChangeEnd == null ? void 0 : onChangeEnd(convertHsvaTo(formatRef.current, __spreadProps(__spreadValues({}, parsed), {\n        s,\n        v\n      })));\n    },\n    color: _value,\n    styles,\n    classNames,\n    size,\n    focusable,\n    saturationLabel,\n    __staticSelector\n  }), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.body\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.sliders\n  }, /* @__PURE__ */React.createElement(HueSlider, {\n    value: parsed.h,\n    onChange: h => handleChange({\n      h\n    }),\n    onChangeEnd: h => onChangeEnd == null ? void 0 : onChangeEnd(convertHsvaTo(formatRef.current, __spreadProps(__spreadValues({}, parsed), {\n      h\n    }))),\n    size,\n    styles,\n    classNames,\n    focusable,\n    \"aria-label\": hueLabel,\n    __staticSelector\n  }), withAlpha && /* @__PURE__ */React.createElement(AlphaSlider, {\n    value: parsed.a,\n    onChange: a => handleChange({\n      a\n    }),\n    onChangeEnd: a => {\n      onChangeEnd == null ? void 0 : onChangeEnd(convertHsvaTo(formatRef.current, __spreadProps(__spreadValues({}, parsed), {\n        a\n      })));\n    },\n    size,\n    color: convertHsvaTo(\"hex\", parsed),\n    style: {\n      marginTop: 6\n    },\n    styles,\n    classNames,\n    focusable,\n    \"aria-label\": alphaLabel,\n    __staticSelector\n  })), withAlpha && /* @__PURE__ */React.createElement(ColorSwatch, {\n    color: _value,\n    radius: \"sm\",\n    size: theme.fn.size({\n      size,\n      sizes: SWATCH_SIZES\n    }),\n    className: classes.preview\n  }))), Array.isArray(swatches) && /* @__PURE__ */React.createElement(Swatches, {\n    data: swatches,\n    style: {\n      marginTop: 5\n    },\n    swatchesPerRow,\n    focusable,\n    classNames,\n    styles,\n    __staticSelector,\n    setValue,\n    onChangeEnd: color => {\n      onChangeEnd == null ? void 0 : onChangeEnd(convertHsvaTo(format, parseColor(color)));\n    }\n  }));\n});\nColorPicker.displayName = \"@mantine/core/ColorPicker\";\nexport { ColorPicker };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__objRest","source","exclude","target","indexOf","SWATCH_SIZES","xs","sm","md","lg","xl","defaultProps","swatchesPerRow","size","withPicker","focusable","__staticSelector","ColorPicker","forwardRef","props","ref","_a","useComponentDefaultProps","defaultValue","onChange","onChangeEnd","format","swatches","fullWidth","saturationLabel","hueLabel","alphaLabel","className","styles","classNames","unstyled","others","classes","cx","theme","useStyles","name","formatRef","useRef","valueRef","updateRef","withAlpha","_value","setValue","useUncontrolled","finalValue","parsed","setParsed","useState","parseColor","handleChange","color","current","next","convertHsvaTo","setTimeout","useDidUpdate","isColorValid","React","createElement","Box","wrapper","Fragment","Saturation","s","v","body","sliders","HueSlider","h","AlphaSlider","style","marginTop","ColorSwatch","radius","fn","sizes","preview","Array","isArray","Swatches","data","displayName"],"sources":["../../src/ColorPicker/ColorPicker.tsx"],"sourcesContent":["import React, { useState, useRef, forwardRef } from 'react';\nimport { useDidUpdate, useUncontrolled } from '@mantine/hooks';\nimport { DefaultProps, MantineSize, Selectors, useComponentDefaultProps } from '@mantine/styles';\nimport { Box } from '../Box';\nimport { ColorSwatch } from '../ColorSwatch/ColorSwatch';\nimport { convertHsvaTo, isColorValid, parseColor } from './converters';\nimport { ColorSliderStylesNames } from './ColorSlider/ColorSlider';\nimport { HueSlider } from './HueSlider/HueSlider';\nimport { AlphaSlider } from './AlphaSlider/AlphaSlider';\nimport { Saturation, SaturationStylesNames } from './Saturation/Saturation';\nimport { Swatches, SwatchesStylesNames } from './Swatches/Swatches';\nimport { ThumbStylesNames } from './Thumb/Thumb';\nimport { HsvaColor } from './types';\nimport useStyles from './ColorPicker.styles';\n\nexport type ColorPickerStylesNames =\n  | Selectors<typeof useStyles>\n  | ColorSliderStylesNames\n  | SwatchesStylesNames\n  | SaturationStylesNames\n  | ThumbStylesNames;\n\nexport interface ColorPickerBaseProps {\n  /** Controlled component value */\n  value?: string;\n\n  /** Uncontrolled component default value */\n  defaultValue?: string;\n\n  /** Called when color changes */\n  onChange?(color: string): void;\n\n  /** Called when user stops dragging thumb or changes value with arrows */\n  onChangeEnd?(color: string): void;\n\n  /** Color format */\n  format?: 'hex' | 'rgba' | 'rgb' | 'hsl' | 'hsla';\n\n  /** Set to false to display swatches only */\n  withPicker?: boolean;\n\n  /** Predefined colors */\n  swatches?: string[];\n\n  /** Number of swatches displayed in one row */\n  swatchesPerRow?: number;\n\n  /** Predefined component size */\n  size?: MantineSize;\n}\n\nexport interface ColorPickerProps\n  extends DefaultProps<ColorPickerStylesNames>,\n    ColorPickerBaseProps,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'onChange' | 'value' | 'defaultValue'> {\n  /** Force picker to take 100% width of its container */\n  fullWidth?: boolean;\n\n  /** Should interactive elements be focusable */\n  focusable?: boolean;\n\n  /** Static selector base */\n  __staticSelector?: string;\n\n  /** Saturation slider aria-label */\n  saturationLabel?: string;\n\n  /** Hue slider aria-label */\n  hueLabel?: string;\n\n  /** Alpha slider aria-label */\n  alphaLabel?: string;\n}\n\nconst SWATCH_SIZES = {\n  xs: 26,\n  sm: 34,\n  md: 42,\n  lg: 50,\n  xl: 54,\n};\n\nconst defaultProps: Partial<ColorPickerProps> = {\n  swatchesPerRow: 10,\n  size: 'sm',\n  withPicker: true,\n  focusable: true,\n  __staticSelector: 'ColorPicker',\n};\n\nexport const ColorPicker = forwardRef<HTMLDivElement, ColorPickerProps>(\n  (props: ColorPickerProps, ref) => {\n    const {\n      value,\n      defaultValue,\n      onChange,\n      onChangeEnd,\n      format,\n      swatches,\n      swatchesPerRow,\n      size,\n      withPicker,\n      fullWidth,\n      focusable,\n      __staticSelector,\n      saturationLabel,\n      hueLabel,\n      alphaLabel,\n      className,\n      styles,\n      classNames,\n      unstyled,\n      ...others\n    } = useComponentDefaultProps('ColorPicker', defaultProps, props);\n\n    const { classes, cx, theme } = useStyles(\n      { size, fullWidth },\n      { classNames, styles, name: __staticSelector, unstyled }\n    );\n    const formatRef = useRef(format);\n    const valueRef = useRef<string>(null);\n    const updateRef = useRef(true);\n    const withAlpha = format === 'rgba' || format === 'hsla';\n\n    const [_value, setValue] = useUncontrolled({\n      value,\n      defaultValue,\n      finalValue: '#FFFFFF',\n      onChange,\n    });\n\n    const [parsed, setParsed] = useState(parseColor(_value));\n\n    const handleChange = (color: Partial<HsvaColor>) => {\n      updateRef.current = false;\n      setParsed((current) => {\n        const next = { ...current, ...color };\n        valueRef.current = convertHsvaTo(formatRef.current, next);\n        return next;\n      });\n\n      setValue(valueRef.current);\n\n      // Does not work any other way\n      setTimeout(() => {\n        updateRef.current = true;\n      }, 0);\n    };\n\n    useDidUpdate(() => {\n      if (isColorValid(value) && updateRef.current) {\n        setParsed(parseColor(value));\n        updateRef.current = true;\n      }\n    }, [value]);\n\n    useDidUpdate(() => {\n      formatRef.current = format;\n      setValue(convertHsvaTo(format, parsed));\n    }, [format]);\n\n    return (\n      <Box className={cx(classes.wrapper, className)} ref={ref} {...others}>\n        {withPicker && (\n          <>\n            <Saturation\n              value={parsed}\n              onChange={handleChange}\n              onChangeEnd={({ s, v }) =>\n                onChangeEnd?.(convertHsvaTo(formatRef.current, { ...parsed, s, v }))\n              }\n              color={_value}\n              styles={styles}\n              classNames={classNames}\n              size={size}\n              focusable={focusable}\n              saturationLabel={saturationLabel}\n              __staticSelector={__staticSelector}\n            />\n\n            <div className={classes.body}>\n              <div className={classes.sliders}>\n                <HueSlider\n                  value={parsed.h}\n                  onChange={(h) => handleChange({ h })}\n                  onChangeEnd={(h) =>\n                    onChangeEnd?.(convertHsvaTo(formatRef.current, { ...parsed, h }))\n                  }\n                  size={size}\n                  styles={styles}\n                  classNames={classNames}\n                  focusable={focusable}\n                  aria-label={hueLabel}\n                  __staticSelector={__staticSelector}\n                />\n\n                {withAlpha && (\n                  <AlphaSlider\n                    value={parsed.a}\n                    onChange={(a) => handleChange({ a })}\n                    onChangeEnd={(a) => {\n                      onChangeEnd?.(convertHsvaTo(formatRef.current, { ...parsed, a }));\n                    }}\n                    size={size}\n                    color={convertHsvaTo('hex', parsed)}\n                    style={{ marginTop: 6 }}\n                    styles={styles}\n                    classNames={classNames}\n                    focusable={focusable}\n                    aria-label={alphaLabel}\n                    __staticSelector={__staticSelector}\n                  />\n                )}\n              </div>\n\n              {withAlpha && (\n                <ColorSwatch\n                  color={_value}\n                  radius=\"sm\"\n                  size={theme.fn.size({ size, sizes: SWATCH_SIZES })}\n                  className={classes.preview}\n                />\n              )}\n            </div>\n          </>\n        )}\n\n        {Array.isArray(swatches) && (\n          <Swatches\n            data={swatches}\n            style={{ marginTop: 5 }}\n            swatchesPerRow={swatchesPerRow}\n            focusable={focusable}\n            classNames={classNames}\n            styles={styles}\n            __staticSelector={__staticSelector}\n            setValue={setValue}\n            onChangeEnd={(color) => {\n              onChangeEnd?.(convertHsvaTo(format, parseColor(color)));\n            }}\n          />\n        )}\n      </Box>\n    );\n  }\n);\n\nColorPicker.displayName = '@mantine/core/ColorPicker';\n"]},"metadata":{},"sourceType":"module"}