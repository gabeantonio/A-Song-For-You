{"ast":null,"code":"import _slicedToArray from \"/Users/gabrieldeleon/code/GA-Project-4/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState, useCallback, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event.js';\nvar eventListerOptions = {\n  passive: true\n};\n\nfunction useViewportSize() {\n  var _useState = useState({\n    width: 0,\n    height: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      windowSize = _useState2[0],\n      setWindowSize = _useState2[1];\n\n  var setSize = useCallback(function () {\n    setWindowSize({\n      width: window.innerWidth || 0,\n      height: window.innerHeight || 0\n    });\n  }, []);\n  useWindowEvent(\"resize\", setSize, eventListerOptions);\n  useWindowEvent(\"orientationchange\", setSize, eventListerOptions);\n  useEffect(setSize, []);\n  return windowSize;\n}\n\nexport { useViewportSize };","map":{"version":3,"mappings":";;;AAEA,IAAMA,kBAAkB,GAAG;EACzBC,OAAO,EAAE;AADgB,CAA3B;;AAGO,SAASC,eAAT,GAA2B;EAChC,gBAAoCC,QAAQ,CAAC;IAC3CC,KAAK,EAAE,CADoC;IAE3CC,MAAM,EAAE;EAFmC,CAAD,CAA5C;EAAA;EAAA,IAAOC,UAAP;EAAA,IAAmBC,aAAnB;;EAIA,IAAMC,OAAO,GAAGC,WAAW,CAAC,YAAM;IAChCF,aAAa,CAAC;MAAEH,KAAK,EAAEM,MAAM,CAACC,UAAP,IAAqB,CAA9B;MAAiCN,MAAM,EAAEK,MAAM,CAACE,WAAP,IAAsB;IAA/D,CAAD,CAAb;EACD,CAF0B,EAExB,EAFwB,CAA3B;EAGAC,cAAc,CAAC,QAAD,EAAWL,OAAX,EAAoBR,kBAApB,CAAd;EACAa,cAAc,CAAC,mBAAD,EAAsBL,OAAtB,EAA+BR,kBAA/B,CAAd;EACAc,SAAS,CAACN,OAAD,EAAU,EAAV,CAAT;EACA,OAAOF,UAAP;AACF","names":["eventListerOptions","passive","useViewportSize","useState","width","height","windowSize","setWindowSize","setSize","useCallback","window","innerWidth","innerHeight","useWindowEvent","useEffect"],"sources":["../../src/use-viewport-size/use-viewport-size.ts"],"sourcesContent":["import { useCallback, useState, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event';\n\nconst eventListerOptions = {\n  passive: true,\n};\n\nexport function useViewportSize() {\n  const [windowSize, setWindowSize] = useState({\n    width: 0,\n    height: 0,\n  });\n\n  const setSize = useCallback(() => {\n    setWindowSize({ width: window.innerWidth || 0, height: window.innerHeight || 0 });\n  }, []);\n\n  useWindowEvent('resize', setSize, eventListerOptions);\n  useWindowEvent('orientationchange', setSize, eventListerOptions);\n  useEffect(setSize, []);\n\n  return windowSize;\n}\n"]},"metadata":{},"sourceType":"module"}