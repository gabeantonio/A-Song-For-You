{"ast":null,"code":"import _objectWithoutProperties from \"/Users/gabrieldeleon/code/GA-Project-4/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _toConsumableArray from \"/Users/gabrieldeleon/code/GA-Project-4/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"/Users/gabrieldeleon/code/GA-Project-4/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _defineProperty from \"/Users/gabrieldeleon/code/GA-Project-4/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/gabrieldeleon/code/GA-Project-4/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/gabrieldeleon/code/GA-Project-4/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _excluded = [\"alignment\", \"allowedPlacements\", \"autoAlignment\"],\n    _excluded2 = [\"mainAxis\", \"crossAxis\", \"fallbackPlacements\", \"fallbackStrategy\", \"flipAlignment\"],\n    _excluded3 = [\"strategy\"],\n    _excluded4 = [\"mainAxis\", \"crossAxis\", \"limiter\"],\n    _excluded5 = [\"apply\"];\n\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\n\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\n\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  var reference = _ref.reference,\n      floating = _ref.floating;\n  var commonX = reference.x + reference.width / 2 - floating.width / 2;\n  var commonY = reference.y + reference.height / 2 - floating.height / 2;\n  var mainAxis = getMainAxisFromPlacement(placement);\n  var length = getLengthFromAxis(mainAxis);\n  var commonAlign = reference[length] / 2 - floating[length] / 2;\n  var side = getSide(placement);\n  var isVertical = mainAxis === 'x';\n  var coords;\n\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n\n  return coords;\n}\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\n\n\nvar computePosition = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(reference, floating, config) {\n    var _config$placement, placement, _config$strategy, strategy, _config$middleware, middleware, platform, rtl, rects, _computeCoordsFromPla, x, y, statefulPlacement, middlewareData, resetCount, i, _middleware$i, name, fn, _yield$fn, nextX, nextY, data, reset, _computeCoordsFromPla2;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _config$placement = config.placement, placement = _config$placement === void 0 ? 'bottom' : _config$placement, _config$strategy = config.strategy, strategy = _config$strategy === void 0 ? 'absolute' : _config$strategy, _config$middleware = config.middleware, middleware = _config$middleware === void 0 ? [] : _config$middleware, platform = config.platform;\n            _context.next = 3;\n            return platform.isRTL == null ? void 0 : platform.isRTL(floating);\n\n          case 3:\n            rtl = _context.sent;\n\n            if (!(process.env.NODE_ENV !== \"production\")) {\n              _context.next = 8;\n              break;\n            }\n\n            if (platform == null) {\n              console.error(['Floating UI: `platform` property was not passed to config. If you', 'want to use Floating UI on the web, install @floating-ui/dom', 'instead of the /core package. Otherwise, you can create your own', '`platform`: https://floating-ui.com/docs/platform'].join(' '));\n            }\n\n            if (!(middleware.filter(function (_ref) {\n              var name = _ref.name;\n              return name === 'autoPlacement' || name === 'flip';\n            }).length > 1)) {\n              _context.next = 8;\n              break;\n            }\n\n            throw new Error(['Floating UI: duplicate `flip` and/or `autoPlacement`', 'middleware detected. This will lead to an infinite loop. Ensure only', 'one of either has been passed to the `middleware` array.'].join(' '));\n\n          case 8:\n            _context.next = 10;\n            return platform.getElementRects({\n              reference: reference,\n              floating: floating,\n              strategy: strategy\n            });\n\n          case 10:\n            rects = _context.sent;\n            _computeCoordsFromPla = computeCoordsFromPlacement(rects, placement, rtl), x = _computeCoordsFromPla.x, y = _computeCoordsFromPla.y;\n            statefulPlacement = placement;\n            middlewareData = {};\n            resetCount = 0;\n            i = 0;\n\n          case 16:\n            if (!(i < middleware.length)) {\n              _context.next = 50;\n              break;\n            }\n\n            _middleware$i = middleware[i], name = _middleware$i.name, fn = _middleware$i.fn;\n            _context.next = 20;\n            return fn({\n              x: x,\n              y: y,\n              initialPlacement: placement,\n              placement: statefulPlacement,\n              strategy: strategy,\n              middlewareData: middlewareData,\n              rects: rects,\n              platform: platform,\n              elements: {\n                reference: reference,\n                floating: floating\n              }\n            });\n\n          case 20:\n            _yield$fn = _context.sent;\n            nextX = _yield$fn.x;\n            nextY = _yield$fn.y;\n            data = _yield$fn.data;\n            reset = _yield$fn.reset;\n            x = nextX != null ? nextX : x;\n            y = nextY != null ? nextY : y;\n            middlewareData = _objectSpread(_objectSpread({}, middlewareData), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, middlewareData[name]), data)));\n\n            if (process.env.NODE_ENV !== \"production\") {\n              if (resetCount > 50) {\n                console.warn(['Floating UI: The middleware lifecycle appears to be running in an', 'infinite loop. This is usually caused by a `reset` continually', 'being returned without a break condition.'].join(' '));\n              }\n            }\n\n            if (!(reset && resetCount <= 50)) {\n              _context.next = 47;\n              break;\n            }\n\n            resetCount++;\n\n            if (!(typeof reset === 'object')) {\n              _context.next = 45;\n              break;\n            }\n\n            if (reset.placement) {\n              statefulPlacement = reset.placement;\n            }\n\n            if (!reset.rects) {\n              _context.next = 42;\n              break;\n            }\n\n            if (!(reset.rects === true)) {\n              _context.next = 40;\n              break;\n            }\n\n            _context.next = 37;\n            return platform.getElementRects({\n              reference: reference,\n              floating: floating,\n              strategy: strategy\n            });\n\n          case 37:\n            _context.t0 = _context.sent;\n            _context.next = 41;\n            break;\n\n          case 40:\n            _context.t0 = reset.rects;\n\n          case 41:\n            rects = _context.t0;\n\n          case 42:\n            _computeCoordsFromPla2 = computeCoordsFromPlacement(rects, statefulPlacement, rtl);\n            x = _computeCoordsFromPla2.x;\n            y = _computeCoordsFromPla2.y;\n\n          case 45:\n            i = -1;\n            return _context.abrupt(\"continue\", 47);\n\n          case 47:\n            i++;\n            _context.next = 16;\n            break;\n\n          case 50:\n            return _context.abrupt(\"return\", {\n              x: x,\n              y: y,\n              placement: statefulPlacement,\n              strategy: strategy,\n              middlewareData: middlewareData\n            });\n\n          case 51:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function computePosition(_x, _x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nfunction expandPaddingObject(padding) {\n  return _objectSpread({\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }, padding);\n}\n\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\n\nfunction rectToClientRect(rect) {\n  return _objectSpread(_objectSpread({}, rect), {}, {\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\n\n\nfunction detectOverflow(_x4, _x5) {\n  return _detectOverflow.apply(this, arguments);\n}\n\nfunction _detectOverflow() {\n  _detectOverflow = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(middlewareArguments, options) {\n    var _await$platform$isEle, x, y, platform, rects, elements, strategy, _options7, _options7$boundary, boundary, _options7$rootBoundar, rootBoundary, _options7$elementCont, elementContext, _options7$altBoundary, altBoundary, _options7$padding, padding, paddingObject, altContext, element, clippingClientRect, elementClientRect;\n\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            if (options === void 0) {\n              options = {};\n            }\n\n            x = middlewareArguments.x, y = middlewareArguments.y, platform = middlewareArguments.platform, rects = middlewareArguments.rects, elements = middlewareArguments.elements, strategy = middlewareArguments.strategy;\n            _options7 = options, _options7$boundary = _options7.boundary, boundary = _options7$boundary === void 0 ? 'clippingAncestors' : _options7$boundary, _options7$rootBoundar = _options7.rootBoundary, rootBoundary = _options7$rootBoundar === void 0 ? 'viewport' : _options7$rootBoundar, _options7$elementCont = _options7.elementContext, elementContext = _options7$elementCont === void 0 ? 'floating' : _options7$elementCont, _options7$altBoundary = _options7.altBoundary, altBoundary = _options7$altBoundary === void 0 ? false : _options7$altBoundary, _options7$padding = _options7.padding, padding = _options7$padding === void 0 ? 0 : _options7$padding;\n            paddingObject = getSideObjectFromPadding(padding);\n            altContext = elementContext === 'floating' ? 'reference' : 'floating';\n            element = elements[altBoundary ? altContext : elementContext];\n            _context10.t0 = rectToClientRect;\n            _context10.t1 = platform;\n            _context10.next = 10;\n            return platform.isElement == null ? void 0 : platform.isElement(element);\n\n          case 10:\n            _context10.t2 = _await$platform$isEle = _context10.sent;\n\n            if (!(_context10.t2 != null)) {\n              _context10.next = 15;\n              break;\n            }\n\n            _context10.t3 = _await$platform$isEle;\n            _context10.next = 16;\n            break;\n\n          case 15:\n            _context10.t3 = true;\n\n          case 16:\n            if (!_context10.t3) {\n              _context10.next = 20;\n              break;\n            }\n\n            _context10.t4 = element;\n            _context10.next = 26;\n            break;\n\n          case 20:\n            _context10.t5 = element.contextElement;\n\n            if (_context10.t5) {\n              _context10.next = 25;\n              break;\n            }\n\n            _context10.next = 24;\n            return platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating);\n\n          case 24:\n            _context10.t5 = _context10.sent;\n\n          case 25:\n            _context10.t4 = _context10.t5;\n\n          case 26:\n            _context10.t6 = _context10.t4;\n            _context10.t7 = boundary;\n            _context10.t8 = rootBoundary;\n            _context10.t9 = strategy;\n            _context10.t10 = {\n              element: _context10.t6,\n              boundary: _context10.t7,\n              rootBoundary: _context10.t8,\n              strategy: _context10.t9\n            };\n            _context10.next = 33;\n            return _context10.t1.getClippingRect.call(_context10.t1, _context10.t10);\n\n          case 33:\n            _context10.t11 = _context10.sent;\n            clippingClientRect = (0, _context10.t0)(_context10.t11);\n            _context10.t12 = rectToClientRect;\n\n            if (!platform.convertOffsetParentRelativeRectToViewportRelativeRect) {\n              _context10.next = 49;\n              break;\n            }\n\n            _context10.t14 = platform;\n            _context10.t15 = elementContext === 'floating' ? _objectSpread(_objectSpread({}, rects.floating), {}, {\n              x: x,\n              y: y\n            }) : rects.reference;\n            _context10.next = 41;\n            return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating);\n\n          case 41:\n            _context10.t16 = _context10.sent;\n            _context10.t17 = strategy;\n            _context10.t18 = {\n              rect: _context10.t15,\n              offsetParent: _context10.t16,\n              strategy: _context10.t17\n            };\n            _context10.next = 46;\n            return _context10.t14.convertOffsetParentRelativeRectToViewportRelativeRect.call(_context10.t14, _context10.t18);\n\n          case 46:\n            _context10.t13 = _context10.sent;\n            _context10.next = 50;\n            break;\n\n          case 49:\n            _context10.t13 = rects[elementContext];\n\n          case 50:\n            _context10.t19 = _context10.t13;\n            elementClientRect = (0, _context10.t12)(_context10.t19);\n            return _context10.abrupt(\"return\", {\n              top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n              bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n              left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n              right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n            });\n\n          case 53:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _detectOverflow.apply(this, arguments);\n}\n\nvar min = Math.min;\nvar max = Math.max;\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n/**\n * Positions an inner element of the floating element such that it is centered\n * to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\n\n\nvar arrow = function arrow(options) {\n  return {\n    name: 'arrow',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _data, _ref4;\n\n        var _ref3, element, _ref3$padding, padding, x, y, placement, rects, platform, paddingObject, coords, axis, alignment, length, arrowDimensions, minProp, maxProp, endDiff, startDiff, arrowOffsetParent, clientSize, centerToReference, min, max, center, offset, alignmentPadding, shouldAddOffset, alignmentOffset;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // Since `element` is required, we don't Partial<> the type\n                _ref3 = options != null ? options : {}, element = _ref3.element, _ref3$padding = _ref3.padding, padding = _ref3$padding === void 0 ? 0 : _ref3$padding;\n                x = middlewareArguments.x, y = middlewareArguments.y, placement = middlewareArguments.placement, rects = middlewareArguments.rects, platform = middlewareArguments.platform;\n\n                if (!(element == null)) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                if (process.env.NODE_ENV !== \"production\") {\n                  console.warn('Floating UI: No `element` was passed to the `arrow` middleware.');\n                }\n\n                return _context2.abrupt(\"return\", {});\n\n              case 5:\n                paddingObject = getSideObjectFromPadding(padding);\n                coords = {\n                  x: x,\n                  y: y\n                };\n                axis = getMainAxisFromPlacement(placement);\n                alignment = getAlignment(placement);\n                length = getLengthFromAxis(axis);\n                _context2.next = 12;\n                return platform.getDimensions(element);\n\n              case 12:\n                arrowDimensions = _context2.sent;\n                minProp = axis === 'y' ? 'top' : 'left';\n                maxProp = axis === 'y' ? 'bottom' : 'right';\n                endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n                startDiff = coords[axis] - rects.reference[axis];\n                _context2.next = 19;\n                return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element);\n\n              case 19:\n                arrowOffsetParent = _context2.sent;\n                clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n\n                if (clientSize === 0) {\n                  clientSize = rects.floating[length];\n                }\n\n                centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the floating element if the center\n                // point is outside the floating element's bounds\n\n                min = paddingObject[minProp];\n                max = clientSize - arrowDimensions[length] - paddingObject[maxProp];\n                center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n                offset = within(min, center, max); // Make sure that arrow points at the reference\n\n                alignmentPadding = alignment === 'start' ? paddingObject[minProp] : paddingObject[maxProp];\n                shouldAddOffset = alignmentPadding > 0 && center !== offset && rects.reference[length] <= rects.floating[length];\n                alignmentOffset = shouldAddOffset ? center < min ? min - center : max - center : 0;\n                return _context2.abrupt(\"return\", (_ref4 = {}, _defineProperty(_ref4, axis, coords[axis] - alignmentOffset), _defineProperty(_ref4, \"data\", (_data = {}, _defineProperty(_data, axis, offset), _defineProperty(_data, \"centerOffset\", center - offset), _data)), _ref4));\n\n              case 31:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  };\n};\n\nvar hash$1 = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\n\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash$1[matched];\n  });\n}\n\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n\n  var alignment = getAlignment(placement);\n  var mainAxis = getMainAxisFromPlacement(placement);\n  var length = getLengthFromAxis(mainAxis);\n  var mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\n\nvar hash = {\n  start: 'end',\n  end: 'start'\n};\n\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, function (matched) {\n    return hash[matched];\n  });\n}\n\nvar sides = ['top', 'right', 'bottom', 'left'];\nvar allPlacements = /*#__PURE__*/sides.reduce(function (acc, side) {\n  return acc.concat(side, side + \"-start\", side + \"-end\");\n}, []);\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  var allowedPlacementsSortedByAlignment = alignment ? [].concat(_toConsumableArray(allowedPlacements.filter(function (placement) {\n    return getAlignment(placement) === alignment;\n  })), _toConsumableArray(allowedPlacements.filter(function (placement) {\n    return getAlignment(placement) !== alignment;\n  }))) : allowedPlacements.filter(function (placement) {\n    return getSide(placement) === placement;\n  });\n  return allowedPlacementsSortedByAlignment.filter(function (placement) {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n\n    return true;\n  });\n}\n/**\n * Automatically chooses the `placement` which has the most space available.\n * @see https://floating-ui.com/docs/autoPlacement\n */\n\n\nvar autoPlacement = function autoPlacement(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'autoPlacement',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _middlewareData$autoP, _middlewareData$autoP2, _middlewareData$autoP3, _middlewareData$autoP4, _placementsSortedByLe, x, y, rects, middlewareData, placement, platform, elements, _options, _options$alignment, alignment, _options$allowedPlace, allowedPlacements, _options$autoAlignmen, autoAlignment, detectOverflowOptions, placements, overflow, currentIndex, currentPlacement, _getAlignmentSides, main, cross, currentOverflows, allOverflows, nextPlacement, placementsSortedByLeastOverflow, placementThatFitsOnAllSides, resetPlacement;\n\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                x = middlewareArguments.x, y = middlewareArguments.y, rects = middlewareArguments.rects, middlewareData = middlewareArguments.middlewareData, placement = middlewareArguments.placement, platform = middlewareArguments.platform, elements = middlewareArguments.elements;\n                _options = options, _options$alignment = _options.alignment, alignment = _options$alignment === void 0 ? null : _options$alignment, _options$allowedPlace = _options.allowedPlacements, allowedPlacements = _options$allowedPlace === void 0 ? allPlacements : _options$allowedPlace, _options$autoAlignmen = _options.autoAlignment, autoAlignment = _options$autoAlignmen === void 0 ? true : _options$autoAlignmen, detectOverflowOptions = _objectWithoutProperties(_options, _excluded);\n                placements = getPlacementList(alignment, autoAlignment, allowedPlacements);\n                _context3.next = 5;\n                return detectOverflow(middlewareArguments, detectOverflowOptions);\n\n              case 5:\n                overflow = _context3.sent;\n                currentIndex = (_middlewareData$autoP = (_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.index) != null ? _middlewareData$autoP : 0;\n                currentPlacement = placements[currentIndex];\n\n                if (!(currentPlacement == null)) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {});\n\n              case 10:\n                _context3.t0 = getAlignmentSides;\n                _context3.t1 = currentPlacement;\n                _context3.t2 = rects;\n                _context3.next = 15;\n                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n\n              case 15:\n                _context3.t3 = _context3.sent;\n                _getAlignmentSides = (0, _context3.t0)(_context3.t1, _context3.t2, _context3.t3);\n                main = _getAlignmentSides.main;\n                cross = _getAlignmentSides.cross;\n\n                if (!(placement !== currentPlacement)) {\n                  _context3.next = 21;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  x: x,\n                  y: y,\n                  reset: {\n                    placement: placements[0]\n                  }\n                });\n\n              case 21:\n                currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n                allOverflows = [].concat(_toConsumableArray((_middlewareData$autoP3 = (_middlewareData$autoP4 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP4.overflows) != null ? _middlewareData$autoP3 : []), [{\n                  placement: currentPlacement,\n                  overflows: currentOverflows\n                }]);\n                nextPlacement = placements[currentIndex + 1]; // There are more placements to check\n\n                if (!nextPlacement) {\n                  _context3.next = 26;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  data: {\n                    index: currentIndex + 1,\n                    overflows: allOverflows\n                  },\n                  reset: {\n                    placement: nextPlacement\n                  }\n                });\n\n              case 26:\n                placementsSortedByLeastOverflow = allOverflows.slice().sort(function (a, b) {\n                  return a.overflows[0] - b.overflows[0];\n                });\n                placementThatFitsOnAllSides = (_placementsSortedByLe = placementsSortedByLeastOverflow.find(function (_ref) {\n                  var overflows = _ref.overflows;\n                  return overflows.every(function (overflow) {\n                    return overflow <= 0;\n                  });\n                })) == null ? void 0 : _placementsSortedByLe.placement;\n                resetPlacement = placementThatFitsOnAllSides != null ? placementThatFitsOnAllSides : placementsSortedByLeastOverflow[0].placement;\n\n                if (!(resetPlacement !== placement)) {\n                  _context3.next = 31;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  data: {\n                    index: currentIndex + 1,\n                    overflows: allOverflows\n                  },\n                  reset: {\n                    placement: resetPlacement\n                  }\n                });\n\n              case 31:\n                return _context3.abrupt(\"return\", {});\n\n              case 32:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    }\n  };\n};\n\nfunction getExpandedPlacements(placement) {\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n/**\n * Changes the placement of the floating element to one that will fit if the\n * initially specified `placement` does not.\n * @see https://floating-ui.com/docs/flip\n */\n\n\nvar flip = function flip(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'flip',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _middlewareData$flip, placement, middlewareData, rects, initialPlacement, platform, elements, _options2, _options2$mainAxis, checkMainAxis, _options2$crossAxis, checkCrossAxis, specifiedFallbackPlacements, _options2$fallbackStr, fallbackStrategy, _options2$flipAlignme, flipAlignment, detectOverflowOptions, side, isBasePlacement, fallbackPlacements, placements, overflow, overflows, overflowsData, _getAlignmentSides2, main, cross, _middlewareData$flip$, _middlewareData$flip2, nextIndex, nextPlacement, resetPlacement, _overflowsData$map$so, _placement;\n\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                placement = middlewareArguments.placement, middlewareData = middlewareArguments.middlewareData, rects = middlewareArguments.rects, initialPlacement = middlewareArguments.initialPlacement, platform = middlewareArguments.platform, elements = middlewareArguments.elements;\n                _options2 = options, _options2$mainAxis = _options2.mainAxis, checkMainAxis = _options2$mainAxis === void 0 ? true : _options2$mainAxis, _options2$crossAxis = _options2.crossAxis, checkCrossAxis = _options2$crossAxis === void 0 ? true : _options2$crossAxis, specifiedFallbackPlacements = _options2.fallbackPlacements, _options2$fallbackStr = _options2.fallbackStrategy, fallbackStrategy = _options2$fallbackStr === void 0 ? 'bestFit' : _options2$fallbackStr, _options2$flipAlignme = _options2.flipAlignment, flipAlignment = _options2$flipAlignme === void 0 ? true : _options2$flipAlignme, detectOverflowOptions = _objectWithoutProperties(_options2, _excluded2);\n                side = getSide(placement);\n                isBasePlacement = side === initialPlacement;\n                fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n                placements = [initialPlacement].concat(_toConsumableArray(fallbackPlacements));\n                _context4.next = 8;\n                return detectOverflow(middlewareArguments, detectOverflowOptions);\n\n              case 8:\n                overflow = _context4.sent;\n                overflows = [];\n                overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n\n                if (checkMainAxis) {\n                  overflows.push(overflow[side]);\n                }\n\n                if (!checkCrossAxis) {\n                  _context4.next = 23;\n                  break;\n                }\n\n                _context4.t0 = getAlignmentSides;\n                _context4.t1 = placement;\n                _context4.t2 = rects;\n                _context4.next = 18;\n                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n\n              case 18:\n                _context4.t3 = _context4.sent;\n                _getAlignmentSides2 = (0, _context4.t0)(_context4.t1, _context4.t2, _context4.t3);\n                main = _getAlignmentSides2.main;\n                cross = _getAlignmentSides2.cross;\n                overflows.push(overflow[main], overflow[cross]);\n\n              case 23:\n                overflowsData = [].concat(_toConsumableArray(overflowsData), [{\n                  placement: placement,\n                  overflows: overflows\n                }]); // One or more sides is overflowing\n\n                if (overflows.every(function (side) {\n                  return side <= 0;\n                })) {\n                  _context4.next = 40;\n                  break;\n                }\n\n                nextIndex = ((_middlewareData$flip$ = (_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) != null ? _middlewareData$flip$ : 0) + 1;\n                nextPlacement = placements[nextIndex];\n\n                if (!nextPlacement) {\n                  _context4.next = 29;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", {\n                  data: {\n                    index: nextIndex,\n                    overflows: overflowsData\n                  },\n                  reset: {\n                    placement: nextPlacement\n                  }\n                });\n\n              case 29:\n                resetPlacement = 'bottom';\n                _context4.t4 = fallbackStrategy;\n                _context4.next = _context4.t4 === 'bestFit' ? 33 : _context4.t4 === 'initialPlacement' ? 36 : 38;\n                break;\n\n              case 33:\n                _placement = (_overflowsData$map$so = overflowsData.map(function (d) {\n                  return [d, d.overflows.filter(function (overflow) {\n                    return overflow > 0;\n                  }).reduce(function (acc, overflow) {\n                    return acc + overflow;\n                  }, 0)];\n                }).sort(function (a, b) {\n                  return a[1] - b[1];\n                })[0]) == null ? void 0 : _overflowsData$map$so[0].placement;\n\n                if (_placement) {\n                  resetPlacement = _placement;\n                }\n\n                return _context4.abrupt(\"break\", 38);\n\n              case 36:\n                resetPlacement = initialPlacement;\n                return _context4.abrupt(\"break\", 38);\n\n              case 38:\n                if (!(placement !== resetPlacement)) {\n                  _context4.next = 40;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", {\n                  reset: {\n                    placement: resetPlacement\n                  }\n                });\n\n              case 40:\n                return _context4.abrupt(\"return\", {});\n\n              case 41:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\n\n\nvar hide = function hide(_temp) {\n  var _ref5 = _temp === void 0 ? {} : _temp,\n      _ref5$strategy = _ref5.strategy,\n      strategy = _ref5$strategy === void 0 ? 'referenceHidden' : _ref5$strategy,\n      detectOverflowOptions = _objectWithoutProperties(_ref5, _excluded3);\n\n  return {\n    name: 'hide',\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var rects, overflow, offsets, _overflow, _offsets;\n\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                rects = middlewareArguments.rects;\n                _context5.t0 = strategy;\n                _context5.next = _context5.t0 === 'referenceHidden' ? 4 : _context5.t0 === 'escaped' ? 9 : 14;\n                break;\n\n              case 4:\n                _context5.next = 6;\n                return detectOverflow(middlewareArguments, _objectSpread(_objectSpread({}, detectOverflowOptions), {}, {\n                  elementContext: 'reference'\n                }));\n\n              case 6:\n                overflow = _context5.sent;\n                offsets = getSideOffsets(overflow, rects.reference);\n                return _context5.abrupt(\"return\", {\n                  data: {\n                    referenceHiddenOffsets: offsets,\n                    referenceHidden: isAnySideFullyClipped(offsets)\n                  }\n                });\n\n              case 9:\n                _context5.next = 11;\n                return detectOverflow(middlewareArguments, _objectSpread(_objectSpread({}, detectOverflowOptions), {}, {\n                  altBoundary: true\n                }));\n\n              case 11:\n                _overflow = _context5.sent;\n                _offsets = getSideOffsets(_overflow, rects.floating);\n                return _context5.abrupt(\"return\", {\n                  data: {\n                    escapedOffsets: _offsets,\n                    escaped: isAnySideFullyClipped(_offsets)\n                  }\n                });\n\n              case 14:\n                return _context5.abrupt(\"return\", {});\n\n              case 15:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    }\n  };\n};\n\nfunction convertValueToCoords(_x6, _x7) {\n  return _convertValueToCoords.apply(this, arguments);\n}\n/**\n * Displaces the floating element from its reference element.\n * @see https://floating-ui.com/docs/offset\n */\n\n\nfunction _convertValueToCoords() {\n  _convertValueToCoords = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(middlewareArguments, value) {\n    var placement, platform, elements, rtl, side, alignment, isVertical, mainAxisMulti, crossAxisMulti, rawValue, _ref7, mainAxis, crossAxis, alignmentAxis;\n\n    return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            placement = middlewareArguments.placement, platform = middlewareArguments.platform, elements = middlewareArguments.elements;\n            _context11.next = 3;\n            return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n\n          case 3:\n            rtl = _context11.sent;\n            side = getSide(placement);\n            alignment = getAlignment(placement);\n            isVertical = getMainAxisFromPlacement(placement) === 'x';\n            mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n            crossAxisMulti = rtl && isVertical ? -1 : 1;\n            rawValue = typeof value === 'function' ? value(middlewareArguments) : value; // eslint-disable-next-line prefer-const\n\n            _ref7 = typeof rawValue === 'number' ? {\n              mainAxis: rawValue,\n              crossAxis: 0,\n              alignmentAxis: null\n            } : _objectSpread({\n              mainAxis: 0,\n              crossAxis: 0,\n              alignmentAxis: null\n            }, rawValue), mainAxis = _ref7.mainAxis, crossAxis = _ref7.crossAxis, alignmentAxis = _ref7.alignmentAxis;\n\n            if (alignment && typeof alignmentAxis === 'number') {\n              crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n            }\n\n            return _context11.abrupt(\"return\", isVertical ? {\n              x: crossAxis * crossAxisMulti,\n              y: mainAxis * mainAxisMulti\n            } : {\n              x: mainAxis * mainAxisMulti,\n              y: crossAxis * crossAxisMulti\n            });\n\n          case 13:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _convertValueToCoords.apply(this, arguments);\n}\n\nvar offset = function offset(value) {\n  if (value === void 0) {\n    value = 0;\n  }\n\n  return {\n    name: 'offset',\n    options: value,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var x, y, diffCoords;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                x = middlewareArguments.x, y = middlewareArguments.y;\n                _context6.next = 3;\n                return convertValueToCoords(middlewareArguments, value);\n\n              case 3:\n                diffCoords = _context6.sent;\n                return _context6.abrupt(\"return\", {\n                  x: x + diffCoords.x,\n                  y: y + diffCoords.y,\n                  data: diffCoords\n                });\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    }\n  };\n};\n\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n/**\n * Shifts the floating element in order to keep it in view when it will overflow\n * a clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\n\n\nvar shift = function shift(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'shift',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var _objectSpread3;\n\n        var x, y, placement, _options3, _options3$mainAxis, checkMainAxis, _options3$crossAxis, checkCrossAxis, _options3$limiter, limiter, detectOverflowOptions, coords, overflow, mainAxis, crossAxis, mainAxisCoord, crossAxisCoord, minSide, maxSide, _min, _max, _minSide, _maxSide, _min2, _max2, limitedCoords;\n\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                x = middlewareArguments.x, y = middlewareArguments.y, placement = middlewareArguments.placement;\n                _options3 = options, _options3$mainAxis = _options3.mainAxis, checkMainAxis = _options3$mainAxis === void 0 ? true : _options3$mainAxis, _options3$crossAxis = _options3.crossAxis, checkCrossAxis = _options3$crossAxis === void 0 ? false : _options3$crossAxis, _options3$limiter = _options3.limiter, limiter = _options3$limiter === void 0 ? {\n                  fn: function fn(_ref) {\n                    var x = _ref.x,\n                        y = _ref.y;\n                    return {\n                      x: x,\n                      y: y\n                    };\n                  }\n                } : _options3$limiter, detectOverflowOptions = _objectWithoutProperties(_options3, _excluded4);\n                coords = {\n                  x: x,\n                  y: y\n                };\n                _context7.next = 5;\n                return detectOverflow(middlewareArguments, detectOverflowOptions);\n\n              case 5:\n                overflow = _context7.sent;\n                mainAxis = getMainAxisFromPlacement(getSide(placement));\n                crossAxis = getCrossAxis(mainAxis);\n                mainAxisCoord = coords[mainAxis];\n                crossAxisCoord = coords[crossAxis];\n\n                if (checkMainAxis) {\n                  minSide = mainAxis === 'y' ? 'top' : 'left';\n                  maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n                  _min = mainAxisCoord + overflow[minSide];\n                  _max = mainAxisCoord - overflow[maxSide];\n                  mainAxisCoord = within(_min, mainAxisCoord, _max);\n                }\n\n                if (checkCrossAxis) {\n                  _minSide = crossAxis === 'y' ? 'top' : 'left';\n                  _maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n                  _min2 = crossAxisCoord + overflow[_minSide];\n                  _max2 = crossAxisCoord - overflow[_maxSide];\n                  crossAxisCoord = within(_min2, crossAxisCoord, _max2);\n                }\n\n                limitedCoords = limiter.fn(_objectSpread(_objectSpread({}, middlewareArguments), {}, (_objectSpread3 = {}, _defineProperty(_objectSpread3, mainAxis, mainAxisCoord), _defineProperty(_objectSpread3, crossAxis, crossAxisCoord), _objectSpread3)));\n                return _context7.abrupt(\"return\", _objectSpread(_objectSpread({}, limitedCoords), {}, {\n                  data: {\n                    x: limitedCoords.x - x,\n                    y: limitedCoords.y - y\n                  }\n                }));\n\n              case 14:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }))();\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\n\n\nvar limitShift = function limitShift(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    options: options,\n    fn: function fn(middlewareArguments) {\n      var _ref6;\n\n      var x = middlewareArguments.x,\n          y = middlewareArguments.y,\n          placement = middlewareArguments.placement,\n          rects = middlewareArguments.rects,\n          middlewareData = middlewareArguments.middlewareData;\n      var _options4 = options,\n          _options4$offset = _options4.offset,\n          offset = _options4$offset === void 0 ? 0 : _options4$offset,\n          _options4$mainAxis = _options4.mainAxis,\n          checkMainAxis = _options4$mainAxis === void 0 ? true : _options4$mainAxis,\n          _options4$crossAxis = _options4.crossAxis,\n          checkCrossAxis = _options4$crossAxis === void 0 ? true : _options4$crossAxis;\n      var coords = {\n        x: x,\n        y: y\n      };\n      var mainAxis = getMainAxisFromPlacement(placement);\n      var crossAxis = getCrossAxis(mainAxis);\n      var mainAxisCoord = coords[mainAxis];\n      var crossAxisCoord = coords[crossAxis];\n      var rawOffset = typeof offset === 'function' ? offset(_objectSpread(_objectSpread({}, rects), {}, {\n        placement: placement\n      })) : offset;\n      var computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : _objectSpread({\n        mainAxis: 0,\n        crossAxis: 0\n      }, rawOffset);\n\n      if (checkMainAxis) {\n        var len = mainAxis === 'y' ? 'height' : 'width';\n        var limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        var limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2, _middlewareData$offse3, _middlewareData$offse4;\n\n        var _len = mainAxis === 'y' ? 'width' : 'height';\n\n        var isOriginSide = ['top', 'left'].includes(getSide(placement));\n\n        var _limitMin = rects.reference[crossAxis] - rects.floating[_len] + (isOriginSide ? (_middlewareData$offse = (_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) != null ? _middlewareData$offse : 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n\n        var _limitMax = rects.reference[crossAxis] + rects.reference[_len] + (isOriginSide ? 0 : (_middlewareData$offse3 = (_middlewareData$offse4 = middlewareData.offset) == null ? void 0 : _middlewareData$offse4[crossAxis]) != null ? _middlewareData$offse3 : 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n\n        if (crossAxisCoord < _limitMin) {\n          crossAxisCoord = _limitMin;\n        } else if (crossAxisCoord > _limitMax) {\n          crossAxisCoord = _limitMax;\n        }\n      }\n\n      return _ref6 = {}, _defineProperty(_ref6, mainAxis, mainAxisCoord), _defineProperty(_ref6, crossAxis, crossAxisCoord), _ref6;\n    }\n  };\n};\n/**\n * Provides data to change the size of the floating element. For instance,\n * prevent it from overflowing its clipping boundary or match the width of the\n * reference element.\n * @see https://floating-ui.com/docs/size\n */\n\n\nvar size = function size(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'size',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var placement, rects, platform, elements, _options5, apply, detectOverflowOptions, overflow, side, alignment, heightSide, widthSide, xMin, xMax, yMin, yMax, dimensions, prevDimensions, nextDimensions;\n\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                placement = middlewareArguments.placement, rects = middlewareArguments.rects, platform = middlewareArguments.platform, elements = middlewareArguments.elements;\n                _options5 = options, apply = _options5.apply, detectOverflowOptions = _objectWithoutProperties(_options5, _excluded5);\n                _context8.next = 4;\n                return detectOverflow(middlewareArguments, detectOverflowOptions);\n\n              case 4:\n                overflow = _context8.sent;\n                side = getSide(placement);\n                alignment = getAlignment(placement);\n\n                if (!(side === 'top' || side === 'bottom')) {\n                  _context8.next = 26;\n                  break;\n                }\n\n                heightSide = side;\n                _context8.t0 = alignment;\n                _context8.next = 12;\n                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n\n              case 12:\n                if (!_context8.sent) {\n                  _context8.next = 16;\n                  break;\n                }\n\n                _context8.t1 = 'start';\n                _context8.next = 17;\n                break;\n\n              case 16:\n                _context8.t1 = 'end';\n\n              case 17:\n                _context8.t2 = _context8.t1;\n\n                if (!(_context8.t0 === _context8.t2)) {\n                  _context8.next = 22;\n                  break;\n                }\n\n                _context8.t3 = 'left';\n                _context8.next = 23;\n                break;\n\n              case 22:\n                _context8.t3 = 'right';\n\n              case 23:\n                widthSide = _context8.t3;\n                _context8.next = 28;\n                break;\n\n              case 26:\n                widthSide = side;\n                heightSide = alignment === 'end' ? 'top' : 'bottom';\n\n              case 28:\n                xMin = max(overflow.left, 0);\n                xMax = max(overflow.right, 0);\n                yMin = max(overflow.top, 0);\n                yMax = max(overflow.bottom, 0);\n                dimensions = {\n                  availableHeight: rects.floating.height - (['left', 'right'].includes(placement) ? 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom)) : overflow[heightSide]),\n                  availableWidth: rects.floating.width - (['top', 'bottom'].includes(placement) ? 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right)) : overflow[widthSide])\n                };\n                _context8.next = 35;\n                return platform.getDimensions(elements.floating);\n\n              case 35:\n                prevDimensions = _context8.sent;\n                apply == null ? void 0 : apply(_objectSpread(_objectSpread({}, middlewareArguments), dimensions));\n                _context8.next = 39;\n                return platform.getDimensions(elements.floating);\n\n              case 39:\n                nextDimensions = _context8.sent;\n\n                if (!(prevDimensions.width !== nextDimensions.width || prevDimensions.height !== nextDimensions.height)) {\n                  _context8.next = 42;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", {\n                  reset: {\n                    rects: true\n                  }\n                });\n\n              case 42:\n                return _context8.abrupt(\"return\", {});\n\n              case 43:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }))();\n    }\n  };\n};\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\n\n\nvar inline = function inline(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'inline',\n    options: options,\n    fn: function fn(middlewareArguments) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var _await$platform$getCl, placement, elements, rects, platform, strategy, _options6, _options6$padding, padding, x, y, fallback, clientRects, paddingObject, getBoundingClientRect, resetRects;\n\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                getBoundingClientRect = function _getBoundingClientRec() {\n                  // There are two rects and they are disjoined\n                  if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n                    var _clientRects$find; // Find the first rect in which the point is fully inside\n\n\n                    return (_clientRects$find = clientRects.find(function (rect) {\n                      return x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom;\n                    })) != null ? _clientRects$find : fallback;\n                  } // There are 2 or more connected rects\n\n\n                  if (clientRects.length >= 2) {\n                    if (getMainAxisFromPlacement(placement) === 'x') {\n                      var firstRect = clientRects[0];\n                      var lastRect = clientRects[clientRects.length - 1];\n                      var isTop = getSide(placement) === 'top';\n                      var _top = firstRect.top;\n                      var _bottom = lastRect.bottom;\n\n                      var _left = isTop ? firstRect.left : lastRect.left;\n\n                      var _right = isTop ? firstRect.right : lastRect.right;\n\n                      var _width = _right - _left;\n\n                      var _height = _bottom - _top;\n\n                      return {\n                        top: _top,\n                        bottom: _bottom,\n                        left: _left,\n                        right: _right,\n                        width: _width,\n                        height: _height,\n                        x: _left,\n                        y: _top\n                      };\n                    }\n\n                    var isLeftSide = getSide(placement) === 'left';\n                    var maxRight = max.apply(void 0, _toConsumableArray(clientRects.map(function (rect) {\n                      return rect.right;\n                    })));\n                    var minLeft = min.apply(void 0, _toConsumableArray(clientRects.map(function (rect) {\n                      return rect.left;\n                    })));\n                    var measureRects = clientRects.filter(function (rect) {\n                      return isLeftSide ? rect.left === minLeft : rect.right === maxRight;\n                    });\n                    var top = measureRects[0].top;\n                    var bottom = measureRects[measureRects.length - 1].bottom;\n                    var left = minLeft;\n                    var right = maxRight;\n                    var width = right - left;\n                    var height = bottom - top;\n                    return {\n                      top: top,\n                      bottom: bottom,\n                      left: left,\n                      right: right,\n                      width: width,\n                      height: height,\n                      x: left,\n                      y: top\n                    };\n                  }\n\n                  return fallback;\n                };\n\n                placement = middlewareArguments.placement, elements = middlewareArguments.elements, rects = middlewareArguments.rects, platform = middlewareArguments.platform, strategy = middlewareArguments.strategy; // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n                // ClientRect's bounds, despite the event listener being triggered. A\n                // padding of 2 seems to handle this issue.\n\n                _options6 = options, _options6$padding = _options6.padding, padding = _options6$padding === void 0 ? 2 : _options6$padding, x = _options6.x, y = _options6.y;\n                _context9.t0 = rectToClientRect;\n\n                if (!platform.convertOffsetParentRelativeRectToViewportRelativeRect) {\n                  _context9.next = 17;\n                  break;\n                }\n\n                _context9.t2 = platform;\n                _context9.t3 = rects.reference;\n                _context9.next = 9;\n                return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating);\n\n              case 9:\n                _context9.t4 = _context9.sent;\n                _context9.t5 = strategy;\n                _context9.t6 = {\n                  rect: _context9.t3,\n                  offsetParent: _context9.t4,\n                  strategy: _context9.t5\n                };\n                _context9.next = 14;\n                return _context9.t2.convertOffsetParentRelativeRectToViewportRelativeRect.call(_context9.t2, _context9.t6);\n\n              case 14:\n                _context9.t1 = _context9.sent;\n                _context9.next = 18;\n                break;\n\n              case 17:\n                _context9.t1 = rects.reference;\n\n              case 18:\n                _context9.t7 = _context9.t1;\n                fallback = (0, _context9.t0)(_context9.t7);\n                _context9.next = 22;\n                return platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference);\n\n              case 22:\n                _context9.t8 = _await$platform$getCl = _context9.sent;\n\n                if (!(_context9.t8 != null)) {\n                  _context9.next = 27;\n                  break;\n                }\n\n                _context9.t9 = _await$platform$getCl;\n                _context9.next = 28;\n                break;\n\n              case 27:\n                _context9.t9 = [];\n\n              case 28:\n                clientRects = _context9.t9;\n                paddingObject = getSideObjectFromPadding(padding);\n                _context9.next = 32;\n                return platform.getElementRects({\n                  reference: {\n                    getBoundingClientRect: getBoundingClientRect\n                  },\n                  floating: elements.floating,\n                  strategy: strategy\n                });\n\n              case 32:\n                resetRects = _context9.sent;\n\n                if (!(rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height)) {\n                  _context9.next = 35;\n                  break;\n                }\n\n                return _context9.abrupt(\"return\", {\n                  reset: {\n                    rects: resetRects\n                  }\n                });\n\n              case 35:\n                return _context9.abrupt(\"return\", {});\n\n              case 36:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }))();\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };","map":{"version":3,"names":["getSide","placement","split","getAlignment","getMainAxisFromPlacement","includes","getLengthFromAxis","axis","computeCoordsFromPlacement","_ref","rtl","reference","floating","commonX","x","width","commonY","y","height","mainAxis","length","commonAlign","side","isVertical","coords","computePosition","config","strategy","middleware","platform","isRTL","process","env","NODE_ENV","console","error","join","filter","name","Error","getElementRects","rects","statefulPlacement","middlewareData","resetCount","i","fn","initialPlacement","elements","nextX","nextY","data","reset","warn","expandPaddingObject","padding","top","right","bottom","left","getSideObjectFromPadding","rectToClientRect","rect","detectOverflow","middlewareArguments","options","boundary","rootBoundary","elementContext","altBoundary","paddingObject","altContext","element","isElement","_await$platform$isEle","contextElement","getDocumentElement","getClippingRect","clippingClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","getOffsetParent","offsetParent","elementClientRect","min","Math","max","within","min$1","value","max$1","arrow","alignment","getDimensions","arrowDimensions","minProp","maxProp","endDiff","startDiff","arrowOffsetParent","clientSize","clientHeight","clientWidth","centerToReference","center","offset","alignmentPadding","shouldAddOffset","alignmentOffset","hash$1","getOppositePlacement","replace","matched","getAlignmentSides","mainAlignmentSide","main","cross","hash","start","end","getOppositeAlignmentPlacement","sides","allPlacements","reduce","acc","concat","getPlacementList","autoAlignment","allowedPlacements","allowedPlacementsSortedByAlignment","autoPlacement","detectOverflowOptions","placements","overflow","currentIndex","_middlewareData$autoP","_middlewareData$autoP2","index","currentPlacement","currentOverflows","allOverflows","_middlewareData$autoP3","_middlewareData$autoP4","overflows","nextPlacement","placementsSortedByLeastOverflow","slice","sort","a","b","placementThatFitsOnAllSides","_placementsSortedByLe","find","every","resetPlacement","getExpandedPlacements","oppositePlacement","flip","checkMainAxis","crossAxis","checkCrossAxis","specifiedFallbackPlacements","fallbackPlacements","fallbackStrategy","flipAlignment","isBasePlacement","overflowsData","_middlewareData$flip","push","nextIndex","_middlewareData$flip$","_middlewareData$flip2","_overflowsData$map$so","map","d","getSideOffsets","isAnySideFullyClipped","some","hide","_temp","offsets","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","alignmentAxis","diffCoords","getCrossAxis","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse","_middlewareData$offse2","_middlewareData$offse3","_middlewareData$offse4","isOriginSide","size","apply","heightSide","widthSide","xMin","xMax","yMin","yMax","dimensions","availableHeight","availableWidth","prevDimensions","nextDimensions","inline","getBoundingClientRect","clientRects","_clientRects$find","fallback","firstRect","lastRect","isTop","isLeftSide","maxRight","minLeft","measureRects","getClientRects","_await$platform$getCl","resetRects"],"sources":["/Users/gabrieldeleon/code/GA-Project-4/node_modules/@floating-ui/core/dist/floating-ui.core.esm.js"],"sourcesContent":["function getSide(placement) {\n  return placement.split('-')[0];\n}\n\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\n\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  const commonAlign = reference[length] / 2 - floating[length] / 2;\n  const side = getSide(placement);\n  const isVertical = mainAxis === 'x';\n  let coords;\n\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\n\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (platform == null) {\n      console.error(['Floating UI: `platform` property was not passed to config. If you', 'want to use Floating UI on the web, install @floating-ui/dom', 'instead of the /core package. Otherwise, you can create your own', '`platform`: https://floating-ui.com/docs/platform'].join(' '));\n    }\n\n    if (middleware.filter(_ref => {\n      let {\n        name\n      } = _ref;\n      return name === 'autoPlacement' || name === 'flip';\n    }).length > 1) {\n      throw new Error(['Floating UI: duplicate `flip` and/or `autoPlacement`', 'middleware detected. This will lead to an infinite loop. Ensure only', 'one of either has been passed to the `middleware` array.'].join(' '));\n    }\n  }\n\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n\n  for (let i = 0; i < middleware.length; i++) {\n    const {\n      name,\n      fn\n    } = middleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = { ...middlewareData,\n      [name]: { ...middlewareData[name],\n        ...data\n      }\n    };\n\n    if (process.env.NODE_ENV !== \"production\") {\n      if (resetCount > 50) {\n        console.warn(['Floating UI: The middleware lifecycle appears to be running in an', 'infinite loop. This is usually caused by a `reset` continually', 'being returned without a break condition.'].join(' '));\n      }\n    }\n\n    if (reset && resetCount <= 50) {\n      resetCount++;\n\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n\n      i = -1;\n      continue;\n    }\n  }\n\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\n\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\n\nfunction rectToClientRect(rect) {\n  return { ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(middlewareArguments, options) {\n  var _await$platform$isEle;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = middlewareArguments;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = options;\n  const paddingObject = getSideObjectFromPadding(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect: elementContext === 'floating' ? { ...rects.floating,\n      x,\n      y\n    } : rects.reference,\n    offsetParent: await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating)),\n    strategy\n  }) : rects[elementContext]);\n  return {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n}\n\nconst min = Math.min;\nconst max = Math.max;\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n\n/**\n * Positions an inner element of the floating element such that it is centered\n * to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n\n  async fn(middlewareArguments) {\n    // Since `element` is required, we don't Partial<> the type\n    const {\n      element,\n      padding = 0\n    } = options != null ? options : {};\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform\n    } = middlewareArguments;\n\n    if (element == null) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.warn('Floating UI: No `element` was passed to the `arrow` middleware.');\n      }\n\n      return {};\n    }\n\n    const paddingObject = getSideObjectFromPadding(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getMainAxisFromPlacement(placement);\n    const alignment = getAlignment(placement);\n    const length = getLengthFromAxis(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const minProp = axis === 'y' ? 'top' : 'left';\n    const maxProp = axis === 'y' ? 'bottom' : 'right';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n\n    if (clientSize === 0) {\n      clientSize = rects.floating[length];\n    }\n\n    const centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds\n\n    const min = paddingObject[minProp];\n    const max = clientSize - arrowDimensions[length] - paddingObject[maxProp];\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = within(min, center, max); // Make sure that arrow points at the reference\n\n    const alignmentPadding = alignment === 'start' ? paddingObject[minProp] : paddingObject[maxProp];\n    const shouldAddOffset = alignmentPadding > 0 && center !== offset && rects.reference[length] <= rects.floating[length];\n    const alignmentOffset = shouldAddOffset ? center < min ? min - center : max - center : 0;\n    return {\n      [axis]: coords[axis] - alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset\n      }\n    };\n  }\n\n});\n\nconst hash$1 = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, matched => hash$1[matched]);\n}\n\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n\n  const alignment = getAlignment(placement);\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  let mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\n\nconst hash = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, matched => hash[matched]);\n}\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst allPlacements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-start\", side + \"-end\"), []);\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n\n    return true;\n  });\n}\n\n/**\n * Automatically chooses the `placement` which has the most space available.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'autoPlacement',\n    options,\n\n    async fn(middlewareArguments) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _middlewareData$autoP3, _middlewareData$autoP4, _placementsSortedByLe;\n\n      const {\n        x,\n        y,\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        alignment = null,\n        allowedPlacements = allPlacements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const placements = getPlacementList(alignment, autoAlignment, allowedPlacements);\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const currentIndex = (_middlewareData$autoP = (_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.index) != null ? _middlewareData$autoP : 0;\n      const currentPlacement = placements[currentIndex];\n\n      if (currentPlacement == null) {\n        return {};\n      }\n\n      const {\n        main,\n        cross\n      } = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))); // Make `computeCoords` start from the right place\n\n      if (placement !== currentPlacement) {\n        return {\n          x,\n          y,\n          reset: {\n            placement: placements[0]\n          }\n        };\n      }\n\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n      const allOverflows = [...((_middlewareData$autoP3 = (_middlewareData$autoP4 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP4.overflows) != null ? _middlewareData$autoP3 : []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements[currentIndex + 1]; // There are more placements to check\n\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n\n      const placementsSortedByLeastOverflow = allOverflows.slice().sort((a, b) => a.overflows[0] - b.overflows[0]);\n      const placementThatFitsOnAllSides = (_placementsSortedByLe = placementsSortedByLeastOverflow.find(_ref => {\n        let {\n          overflows\n        } = _ref;\n        return overflows.every(overflow => overflow <= 0);\n      })) == null ? void 0 : _placementsSortedByLe.placement;\n      const resetPlacement = placementThatFitsOnAllSides != null ? placementThatFitsOnAllSides : placementsSortedByLeastOverflow[0].placement;\n\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n\n/**\n * Changes the placement of the floating element to one that will fit if the\n * initially specified `placement` does not.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'flip',\n    options,\n\n    async fn(middlewareArguments) {\n      var _middlewareData$flip;\n\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const side = getSide(placement);\n      const isBasePlacement = side === initialPlacement;\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n\n      if (checkCrossAxis) {\n        const {\n          main,\n          cross\n        } = getAlignmentSides(placement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n        overflows.push(overflow[main], overflow[cross]);\n      }\n\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }]; // One or more sides is overflowing\n\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip$, _middlewareData$flip2;\n\n        const nextIndex = ((_middlewareData$flip$ = (_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) != null ? _middlewareData$flip$ : 0) + 1;\n        const nextPlacement = placements[nextIndex];\n\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        let resetPlacement = 'bottom';\n\n        switch (fallbackStrategy) {\n          case 'bestFit':\n            {\n              var _overflowsData$map$so;\n\n              const placement = (_overflowsData$map$so = overflowsData.map(d => [d, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0].placement;\n\n              if (placement) {\n                resetPlacement = placement;\n              }\n\n              break;\n            }\n\n          case 'initialPlacement':\n            resetPlacement = initialPlacement;\n            break;\n        }\n\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n\n      return {};\n    }\n\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (_temp) {\n  let {\n    strategy = 'referenceHidden',\n    ...detectOverflowOptions\n  } = _temp === void 0 ? {} : _temp;\n  return {\n    name: 'hide',\n\n    async fn(middlewareArguments) {\n      const {\n        rects\n      } = middlewareArguments;\n\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(middlewareArguments, { ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(middlewareArguments, { ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n\n        default:\n          {\n            return {};\n          }\n      }\n    }\n\n  };\n};\n\nasync function convertValueToCoords(middlewareArguments, value) {\n  const {\n    placement,\n    platform,\n    elements\n  } = middlewareArguments;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getMainAxisFromPlacement(placement) === 'x';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = typeof value === 'function' ? value(middlewareArguments) : value; // eslint-disable-next-line prefer-const\n\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n/**\n * Displaces the floating element from its reference element.\n * @see https://floating-ui.com/docs/offset\n */\n\nconst offset = function (value) {\n  if (value === void 0) {\n    value = 0;\n  }\n\n  return {\n    name: 'offset',\n    options: value,\n\n    async fn(middlewareArguments) {\n      const {\n        x,\n        y\n      } = middlewareArguments;\n      const diffCoords = await convertValueToCoords(middlewareArguments, value);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n\n  };\n};\n\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n/**\n * Shifts the floating element in order to keep it in view when it will overflow\n * a clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'shift',\n    options,\n\n    async fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement\n      } = middlewareArguments;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const mainAxis = getMainAxisFromPlacement(getSide(placement));\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = within(min, mainAxisCoord, max);\n      }\n\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = within(min, crossAxisCoord, max);\n      }\n\n      const limitedCoords = limiter.fn({ ...middlewareArguments,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return { ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n\n  };\n};\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    options,\n\n    fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = middlewareArguments;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const mainAxis = getMainAxisFromPlacement(placement);\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = typeof offset === 'function' ? offset({ ...rects,\n        placement\n      }) : offset;\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2, _middlewareData$offse3, _middlewareData$offse4;\n\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? (_middlewareData$offse = (_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) != null ? _middlewareData$offse : 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : (_middlewareData$offse3 = (_middlewareData$offse4 = middlewareData.offset) == null ? void 0 : _middlewareData$offse4[crossAxis]) != null ? _middlewareData$offse3 : 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n\n  };\n};\n\n/**\n * Provides data to change the size of the floating element. For instance,\n * prevent it from overflowing its clipping boundary or match the width of the\n * reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'size',\n    options,\n\n    async fn(middlewareArguments) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        apply,\n        ...detectOverflowOptions\n      } = options;\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      let heightSide;\n      let widthSide;\n\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n\n      const xMin = max(overflow.left, 0);\n      const xMax = max(overflow.right, 0);\n      const yMin = max(overflow.top, 0);\n      const yMax = max(overflow.bottom, 0);\n      const dimensions = {\n        availableHeight: rects.floating.height - (['left', 'right'].includes(placement) ? 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom)) : overflow[heightSide]),\n        availableWidth: rects.floating.width - (['top', 'bottom'].includes(placement) ? 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right)) : overflow[widthSide])\n      };\n      const prevDimensions = await platform.getDimensions(elements.floating);\n      apply == null ? void 0 : apply({ ...middlewareArguments,\n        ...dimensions\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n\n      if (prevDimensions.width !== nextDimensions.width || prevDimensions.height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'inline',\n    options,\n\n    async fn(middlewareArguments) {\n      var _await$platform$getCl;\n\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = middlewareArguments; // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n\n      const {\n        padding = 2,\n        x,\n        y\n      } = options;\n      const fallback = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n        rect: rects.reference,\n        offsetParent: await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating)),\n        strategy\n      }) : rects.reference);\n      const clientRects = (_await$platform$getCl = await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) != null ? _await$platform$getCl : [];\n      const paddingObject = getSideObjectFromPadding(padding);\n\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          var _clientRects$find;\n\n          // Find the first rect in which the point is fully inside\n          return (_clientRects$find = clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom)) != null ? _clientRects$find : fallback;\n        } // There are 2 or more connected rects\n\n\n        if (clientRects.length >= 2) {\n          if (getMainAxisFromPlacement(placement) === 'x') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n\n        return fallback;\n      }\n\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}