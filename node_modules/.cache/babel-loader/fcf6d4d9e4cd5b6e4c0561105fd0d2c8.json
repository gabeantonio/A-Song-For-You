{"ast":null,"code":"import _slicedToArray from \"/Users/gabrieldeleon/code/GA-Project-4/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { useState } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect.js';\n\nvar randomId = function randomId() {\n  return \"mantine-\".concat(Math.random().toString(36).slice(2, 11));\n};\n\nvar useReactId = React[\"useId\".toString()] || function () {\n  return void 0;\n};\n\nfunction useClientId() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      uuid = _useState2[0],\n      setUuid = _useState2[1];\n\n  useIsomorphicEffect(function () {\n    setUuid(randomId());\n  }, []);\n  return uuid;\n}\n\nfunction getReactId() {\n  var id = useReactId();\n  return id ? \"mantine-\".concat(id.replace(/:/g, \"\")) : \"\";\n}\n\nfunction useId(staticId) {\n  return typeof staticId === \"string\" ? staticId : getReactId() || useClientId();\n}\n\nexport { useId };","map":{"version":3,"mappings":";;;;AAEA,IAAMA,QAAQ,GAAG,SAAXA,QAAW;EAAA,yBAAiBC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,KAA3B,CAAiC,CAAjC,EAAoC,EAApC,CAAjB;AAAA,CAAjB;;AACA,IAAMC,UAAU,GAAGC,KAAK,CAAC,QAAQH,QAAR,EAAD,CAAL,IAA8B;EAAA,OAAM,KAAK,CAAX;AAAA,CAAjD;;AACA,SAASI,WAAT,GAAuB;EACrB,gBAAwBC,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOC,IAAP;EAAA,IAAaC,OAAb;;EACAC,mBAAmB,CAAC,YAAM;IACxBD,OAAO,CAACV,QAAQ,EAAT,CAAP;EACD,CAFkB,EAEhB,EAFgB,CAAnB;EAGA,OAAOS,IAAP;AACD;;AACD,SAASG,UAAT,GAAsB;EACpB,IAAMC,EAAE,GAAGR,UAAU,EAArB;EACA,OAAOQ,EAAE,qBAAcA,EAAE,CAACC,OAAH,CAAW,IAAX,EAAiB,EAAjB,CAAd,IAAuC,EAAhD;AACD;;AACM,SAASC,KAAT,CAAeC,QAAf,EAAyB;EAC9B,OAAO,OAAOA,QAAP,KAAoB,QAApB,GAA+BA,QAA/B,GAA0CJ,UAAU,MAAML,WAAW,EAA5E;AACF","names":["randomId","Math","random","toString","slice","useReactId","React","useClientId","useState","uuid","setUuid","useIsomorphicEffect","getReactId","id","replace","useId","staticId"],"sources":["../../src/use-id/use-id.ts"],"sourcesContent":["import React, { useState } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect';\n\nconst randomId = () => `mantine-${Math.random().toString(36).slice(2, 11)}`;\n\nconst useReactId: () => string | undefined =\n  (React as any)['useId'.toString()] || (() => undefined);\n\nfunction useClientId() {\n  const [uuid, setUuid] = useState('');\n\n  useIsomorphicEffect(() => {\n    setUuid(randomId());\n  }, []);\n\n  return uuid;\n}\n\nfunction getReactId() {\n  const id = useReactId();\n  return id ? `mantine-${id.replace(/:/g, '')}` : '';\n}\n\nexport function useId(staticId?: string) {\n  return typeof staticId === 'string' ? staticId : getReactId() || useClientId();\n}\n"]},"metadata":{},"sourceType":"module"}