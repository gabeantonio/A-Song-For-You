{"ast":null,"code":"import { createStyles } from '@mantine/styles';\nimport { THUMB_SIZES } from '../Thumb/Thumb.styles.js';\nvar useStyles = createStyles((theme, _ref, getRef) => {\n  let {\n    size\n  } = _ref;\n  return {\n    sliderThumb: {\n      ref: getRef(\"sliderThumb\")\n    },\n    slider: {\n      position: \"relative\",\n      height: theme.fn.size({\n        size,\n        sizes: THUMB_SIZES\n      }) + 2,\n      boxSizing: \"border-box\",\n      marginLeft: theme.fn.size({\n        size,\n        sizes: THUMB_SIZES\n      }) / 2,\n      marginRight: theme.fn.size({\n        size,\n        sizes: THUMB_SIZES\n      }) / 2,\n      outline: 0,\n      [`&:focus .${getRef(\"sliderThumb\")}`]: {\n        outline: \"none\",\n        boxShadow: theme.focusRing === \"always\" || theme.focusRing === \"auto\" ? `0 0 0 2px ${theme.colorScheme === \"dark\" ? theme.colors.dark[9] : theme.white}, 0 0 0 4px ${theme.colors[theme.primaryColor][theme.colorScheme === \"dark\" ? 7 : 5]}` : void 0\n      },\n      [`&:focus:not(:focus-visible) .${getRef(\"sliderThumb\")}`]: {\n        boxShadow: theme.focusRing === \"auto\" || theme.focusRing === \"never\" ? \"none\" : void 0\n      }\n    },\n    sliderOverlay: {\n      position: \"absolute\",\n      boxSizing: \"border-box\",\n      top: 0,\n      bottom: 0,\n      left: -theme.fn.size({\n        size,\n        sizes: THUMB_SIZES\n      }) / 2 - 1,\n      right: -theme.fn.size({\n        size,\n        sizes: THUMB_SIZES\n      }) / 2 - 1,\n      borderRadius: 1e3\n    }\n  };\n});\nexport default useStyles;","map":{"version":3,"mappings":";;AAEA,gBAAeA,YAAY,CAAC,CAACC,KAAD,QAAkBC,MAAlB;EAAA,IAAQ;IAAEC;EAAF,CAAR;EAAA,OAA8B;IACxDC,WAAW,EAAE;MACXC,GAAG,EAAEH,MAAM,CAAC,aAAD;IADA,CAD2C;IAIxDI,MAAM,EAAE;MACNC,QAAQ,EAAE,UADJ;MAENC,MAAM,EAAEP,KAAK,CAACQ,EAAN,CAASN,IAAT,CAAc;QAAEA,IAAF;QAAQO,KAAK,EAAEC;MAAf,CAAd,IAA8C,CAFhD;MAGNC,SAAS,EAAE,YAHL;MAINC,UAAU,EAAEZ,KAAK,CAACQ,EAAN,CAASN,IAAT,CAAc;QAAEA,IAAF;QAAQO,KAAK,EAAEC;MAAf,CAAd,IAA8C,CAJpD;MAKNG,WAAW,EAAEb,KAAK,CAACQ,EAAN,CAASN,IAAT,CAAc;QAAEA,IAAF;QAAQO,KAAK,EAAEC;MAAf,CAAd,IAA8C,CALrD;MAMNI,OAAO,EAAE,CANH;MAON,CAAE,YAAWb,MAAM,CAAC,aAAD,CAAgB,EAAnC,GAAuC;QACrCa,OAAO,EAAE,MAD4B;QAErCC,SAAS,EAAEf,KAAK,CAACgB,SAAN,KAAoB,QAApB,IAAgChB,KAAK,CAACgB,SAAN,KAAoB,MAApD,GAA8D,aAAYhB,KAAK,CAACiB,WAAN,KAAsB,MAAtB,GAA+BjB,KAAK,CAACkB,MAAN,CAAaC,IAAb,CAAkB,CAAlB,CAA/B,GAAsDnB,KAAK,CAACoB,KAAM,eAAcpB,KAAK,CAACkB,MAAN,CAAalB,KAAK,CAACqB,YAAnB,EAAiCrB,KAAK,CAACiB,WAAN,KAAsB,MAAtB,GAA+B,CAA/B,GAAmC,CAApE,CAAuE,EAAjO,GAAqO,KAAK;MAFhN,CAPjC;MAWN,CAAE,gCAA+BhB,MAAM,CAAC,aAAD,CAAgB,EAAvD,GAA2D;QACzDc,SAAS,EAAEf,KAAK,CAACgB,SAAN,KAAoB,MAApB,IAA8BhB,KAAK,CAACgB,SAAN,KAAoB,OAAlD,GAA4D,MAA5D,GAAqE,KAAK;MAD5B;IAXrD,CAJgD;IAmBxDM,aAAa,EAAE;MACbhB,QAAQ,EAAE,UADG;MAEbK,SAAS,EAAE,YAFE;MAGbY,GAAG,EAAE,CAHQ;MAIbC,MAAM,EAAE,CAJK;MAKbC,IAAI,EAAE,CAACzB,KAAK,CAACQ,EAAN,CAASN,IAAT,CAAc;QAAEA,IAAF;QAAQO,KAAK,EAAEC;MAAf,CAAd,CAAD,GAA+C,CAA/C,GAAmD,CAL5C;MAMbgB,KAAK,EAAE,CAAC1B,KAAK,CAACQ,EAAN,CAASN,IAAT,CAAc;QAAEA,IAAF;QAAQO,KAAK,EAAEC;MAAf,CAAd,CAAD,GAA+C,CAA/C,GAAmD,CAN7C;MAObiB,YAAY,EAAE;IAPD;EAnByC,CAA9B;AAAA,CAAD,CAA3B","names":["createStyles","theme","getRef","size","sliderThumb","ref","slider","position","height","fn","sizes","THUMB_SIZES","boxSizing","marginLeft","marginRight","outline","boxShadow","focusRing","colorScheme","colors","dark","white","primaryColor","sliderOverlay","top","bottom","left","right","borderRadius"],"sources":["../../../src/ColorPicker/ColorSlider/ColorSlider.styles.ts"],"sourcesContent":["import { createStyles, MantineSize } from '@mantine/styles';\n\nimport { THUMB_SIZES } from '../Thumb/Thumb.styles';\n\ninterface ColorSliderStyles {\n  size: MantineSize;\n}\n\nexport default createStyles((theme, { size }: ColorSliderStyles, getRef) => ({\n  sliderThumb: {\n    ref: getRef('sliderThumb'),\n  },\n\n  slider: {\n    position: 'relative',\n    height: theme.fn.size({ size, sizes: THUMB_SIZES }) + 2,\n    boxSizing: 'border-box',\n    marginLeft: theme.fn.size({ size, sizes: THUMB_SIZES }) / 2,\n    marginRight: theme.fn.size({ size, sizes: THUMB_SIZES }) / 2,\n    outline: 0,\n\n    [`&:focus .${getRef('sliderThumb')}`]: {\n      outline: 'none',\n      boxShadow:\n        theme.focusRing === 'always' || theme.focusRing === 'auto'\n          ? `0 0 0 2px ${\n              theme.colorScheme === 'dark' ? theme.colors.dark[9] : theme.white\n            }, 0 0 0 4px ${theme.colors[theme.primaryColor][theme.colorScheme === 'dark' ? 7 : 5]}`\n          : undefined,\n    },\n\n    [`&:focus:not(:focus-visible) .${getRef('sliderThumb')}`]: {\n      boxShadow: theme.focusRing === 'auto' || theme.focusRing === 'never' ? 'none' : undefined,\n    },\n  },\n\n  sliderOverlay: {\n    position: 'absolute',\n    boxSizing: 'border-box',\n    top: 0,\n    bottom: 0,\n    left: -theme.fn.size({ size, sizes: THUMB_SIZES }) / 2 - 1,\n    right: -theme.fn.size({ size, sizes: THUMB_SIZES }) / 2 - 1,\n    borderRadius: 1000,\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}