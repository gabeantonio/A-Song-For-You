{"ast":null,"code":"import { createStyles } from '@mantine/styles';\n\nfunction getVariantStyles(theme, _ref) {\n  var variant = _ref.variant,\n      radius = _ref.radius;\n  var borderColor = theme.colorScheme === \"dark\" ? theme.colors.dark[4] : theme.colors.gray[3];\n  var filledColor = theme.colorScheme === \"dark\" ? theme.colors.dark[6] : theme.colors.gray[0];\n  var borderRadius = theme.fn.radius(radius);\n\n  if (variant === \"default\") {\n    return {\n      color: theme.colorScheme === \"dark\" ? theme.colors.dark[0] : theme.black,\n      borderBottom: \"1px solid \".concat(borderColor)\n    };\n  }\n\n  if (variant === \"contained\") {\n    return {\n      border: \"1px solid \".concat(borderColor),\n      transition: \"background-color 150ms ease\",\n      \"&[data-active]\": {\n        backgroundColor: filledColor\n      },\n      \"&:first-of-type\": {\n        borderTopRightRadius: borderRadius,\n        borderTopLeftRadius: borderRadius,\n        \"& > [data-accordion-control]\": {\n          borderTopRightRadius: borderRadius,\n          borderTopLeftRadius: borderRadius\n        }\n      },\n      \"&:last-of-type\": {\n        borderBottomRightRadius: borderRadius,\n        borderBottomLeftRadius: borderRadius,\n        \"& > [data-accordion-control]\": {\n          borderBottomRightRadius: borderRadius,\n          borderBottomLeftRadius: borderRadius\n        }\n      },\n      \"& + &\": {\n        borderTop: 0\n      }\n    };\n  }\n\n  if (variant === \"filled\") {\n    return {\n      borderRadius: borderRadius,\n      \"&[data-active]\": {\n        backgroundColor: filledColor\n      }\n    };\n  }\n\n  if (variant === \"separated\") {\n    return {\n      borderRadius: borderRadius,\n      backgroundColor: filledColor,\n      border: \"1px solid transparent\",\n      transition: \"background-color 150ms ease\",\n      \"& + &\": {\n        marginTop: theme.spacing.md\n      },\n      \"&[data-active]\": {\n        backgroundColor: theme.colorScheme === \"dark\" ? theme.colors.dark[7] : theme.white,\n        borderColor: borderColor\n      }\n    };\n  }\n\n  return {};\n}\n\nvar useStyles = createStyles(function (theme, params) {\n  return {\n    item: getVariantStyles(theme, params)\n  };\n});\nexport default useStyles;","map":{"version":3,"mappings":";;AACA,SAASA,gBAAT,CAA0BC,KAA1B,QAAsD;EAAA,IAAnBC,OAAmB,QAAnBA,OAAmB;EAAA,IAAVC,MAAU,QAAVA,MAAU;EACpD,IAAMC,WAAW,GAAGH,KAAK,CAACI,WAAN,KAAsB,MAAtB,GAA+BJ,KAAK,CAACK,MAAN,CAAaC,IAAb,CAAkB,CAAlB,CAA/B,GAAsDN,KAAK,CAACK,MAAN,CAAaE,IAAb,CAAkB,CAAlB,CAA1E;EACA,IAAMC,WAAW,GAAGR,KAAK,CAACI,WAAN,KAAsB,MAAtB,GAA+BJ,KAAK,CAACK,MAAN,CAAaC,IAAb,CAAkB,CAAlB,CAA/B,GAAsDN,KAAK,CAACK,MAAN,CAAaE,IAAb,CAAkB,CAAlB,CAA1E;EACA,IAAME,YAAY,GAAGT,KAAK,CAACU,EAAN,CAASR,MAAT,CAAgBA,MAAhB,CAArB;;EACA,IAAID,OAAO,KAAK,SAAhB,EAA2B;IACzB,OAAO;MACLU,KAAK,EAAEX,KAAK,CAACI,WAAN,KAAsB,MAAtB,GAA+BJ,KAAK,CAACK,MAAN,CAAaC,IAAb,CAAkB,CAAlB,CAA/B,GAAsDN,KAAK,CAACY,KAD9D;MAELC,YAAY,sBAAeV,WAAf;IAFP,CAAP;EAID;;EACD,IAAIF,OAAO,KAAK,WAAhB,EAA6B;IAC3B,OAAO;MACLa,MAAM,sBAAeX,WAAf,CADD;MAELY,UAAU,EAAE,6BAFP;MAGL,kBAAkB;QAChBC,eAAe,EAAER;MADD,CAHb;MAML,mBAAmB;QACjBS,oBAAoB,EAAER,YADL;QAEjBS,mBAAmB,EAAET,YAFJ;QAGjB,gCAAgC;UAC9BQ,oBAAoB,EAAER,YADQ;UAE9BS,mBAAmB,EAAET;QAFS;MAHf,CANd;MAcL,kBAAkB;QAChBU,uBAAuB,EAAEV,YADT;QAEhBW,sBAAsB,EAAEX,YAFR;QAGhB,gCAAgC;UAC9BU,uBAAuB,EAAEV,YADK;UAE9BW,sBAAsB,EAAEX;QAFM;MAHhB,CAdb;MAsBL,SAAS;QACPY,SAAS,EAAE;MADJ;IAtBJ,CAAP;EA0BD;;EACD,IAAIpB,OAAO,KAAK,QAAhB,EAA0B;IACxB,OAAO;MACLQ,YAAY,EAAZA,YADK;MAEL,kBAAkB;QAChBO,eAAe,EAAER;MADD;IAFb,CAAP;EAMD;;EACD,IAAIP,OAAO,KAAK,WAAhB,EAA6B;IAC3B,OAAO;MACLQ,YAAY,EAAZA,YADK;MAELO,eAAe,EAAER,WAFZ;MAGLM,MAAM,EAAE,uBAHH;MAILC,UAAU,EAAE,6BAJP;MAKL,SAAS;QACPO,SAAS,EAAEtB,KAAK,CAACuB,OAAN,CAAcC;MADlB,CALJ;MAQL,kBAAkB;QAChBR,eAAe,EAAEhB,KAAK,CAACI,WAAN,KAAsB,MAAtB,GAA+BJ,KAAK,CAACK,MAAN,CAAaC,IAAb,CAAkB,CAAlB,CAA/B,GAAsDN,KAAK,CAACyB,KAD7D;QAEhBtB,WAAW,EAAXA;MAFgB;IARb,CAAP;EAaD;;EACD,OAAO,EAAP;AACD;;AACD,gBAAeuB,YAAY,CAAC,UAAC1B,KAAD,EAAQ2B,MAAR;EAAA,OAAoB;IAC9CC,IAAI,EAAE7B,gBAAgB,CAACC,KAAD,EAAQ2B,MAAR;EADwB,CAApB;AAAA,CAAD,CAA3B","names":["getVariantStyles","theme","variant","radius","borderColor","colorScheme","colors","dark","gray","filledColor","borderRadius","fn","color","black","borderBottom","border","transition","backgroundColor","borderTopRightRadius","borderTopLeftRadius","borderBottomRightRadius","borderBottomLeftRadius","borderTop","marginTop","spacing","md","white","createStyles","params","item"],"sources":["../../../src/Accordion/AccordionItem/AccordionItem.styles.ts"],"sourcesContent":["import { createStyles, CSSObject, MantineTheme } from '@mantine/styles';\nimport { AccordionStylesParams } from '../Accordion.types';\n\nfunction getVariantStyles(\n  theme: MantineTheme,\n  { variant, radius }: AccordionStylesParams\n): CSSObject {\n  const borderColor = theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[3];\n  const filledColor = theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0];\n  const borderRadius = theme.fn.radius(radius);\n\n  if (variant === 'default') {\n    return {\n      color: theme.colorScheme === 'dark' ? theme.colors.dark[0] : theme.black,\n      borderBottom: `1px solid ${borderColor}`,\n    };\n  }\n\n  if (variant === 'contained') {\n    return {\n      border: `1px solid ${borderColor}`,\n      transition: 'background-color 150ms ease',\n\n      '&[data-active]': {\n        backgroundColor: filledColor,\n      },\n\n      '&:first-of-type': {\n        borderTopRightRadius: borderRadius,\n        borderTopLeftRadius: borderRadius,\n\n        '& > [data-accordion-control]': {\n          borderTopRightRadius: borderRadius,\n          borderTopLeftRadius: borderRadius,\n        },\n      },\n\n      '&:last-of-type': {\n        borderBottomRightRadius: borderRadius,\n        borderBottomLeftRadius: borderRadius,\n\n        '& > [data-accordion-control]': {\n          borderBottomRightRadius: borderRadius,\n          borderBottomLeftRadius: borderRadius,\n        },\n      },\n\n      '& + &': {\n        borderTop: 0,\n      },\n    };\n  }\n\n  if (variant === 'filled') {\n    return {\n      borderRadius,\n\n      '&[data-active]': {\n        backgroundColor: filledColor,\n      },\n    };\n  }\n\n  if (variant === 'separated') {\n    return {\n      borderRadius,\n      backgroundColor: filledColor,\n      border: '1px solid transparent',\n      transition: 'background-color 150ms ease',\n\n      '& + &': {\n        marginTop: theme.spacing.md,\n      },\n\n      '&[data-active]': {\n        backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white,\n        borderColor,\n      },\n    };\n  }\n\n  return {};\n}\n\nexport default createStyles((theme, params: AccordionStylesParams) => ({\n  item: getVariantStyles(theme, params),\n}));\n"]},"metadata":{},"sourceType":"module"}