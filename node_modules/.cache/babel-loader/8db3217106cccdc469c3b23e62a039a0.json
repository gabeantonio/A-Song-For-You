{"ast":null,"code":"import _slicedToArray from \"/Users/gabrieldeleon/code/GA-Project-4/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState, useRef, useEffect } from 'react';\n\nfunction useDebouncedState(defaultValue, wait) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    leading: false\n  };\n\n  var _useState = useState(defaultValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var timeoutRef = useRef(null);\n  var leadingRef = useRef(true);\n\n  var clearTimeout = function clearTimeout() {\n    return window.clearTimeout(timeoutRef.current);\n  };\n\n  useEffect(function () {\n    return clearTimeout;\n  }, []);\n\n  var debouncedSetValue = function debouncedSetValue(newValue) {\n    clearTimeout();\n\n    if (leadingRef.current && options.leading) {\n      setValue(newValue);\n    } else {\n      timeoutRef.current = window.setTimeout(function () {\n        leadingRef.current = true;\n        setValue(newValue);\n      }, wait);\n    }\n\n    leadingRef.current = false;\n  };\n\n  return [value, debouncedSetValue];\n}\n\nexport { useDebouncedState };","map":{"version":3,"mappings":";;;AACO,SAASA,iBAAT,CAA2BC,YAA3B,EAAyCC,IAAzC,EAA6E;EAAA,IAA9BC,OAA8B,uEAApB;IAAEC,OAAO,EAAE;EAAX,CAAoB;;EAClF,gBAA0BC,QAAQ,CAACJ,YAAD,CAAlC;EAAA;EAAA,IAAOK,KAAP;EAAA,IAAcC,QAAd;;EACA,IAAMC,UAAU,GAAGC,MAAM,CAAC,IAAD,CAAzB;EACA,IAAMC,UAAU,GAAGD,MAAM,CAAC,IAAD,CAAzB;;EACA,IAAME,YAAY,GAAG,SAAfA,YAAe;IAAA,OAAMC,MAAM,CAACD,YAAP,CAAoBH,UAAU,CAACK,OAA/B,CAAN;EAAA,CAArB;;EACAC,SAAS,CAAC;IAAA,OAAMH,YAAN;EAAA,CAAD,EAAqB,EAArB,CAAT;;EACA,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD,EAAc;IACtCL,YAAY;;IACZ,IAAID,UAAU,CAACG,OAAX,IAAsBV,OAAO,CAACC,OAAlC,EAA2C;MACzCG,QAAQ,CAACS,QAAD,CAAR;IACD,CAFD,MAEO;MACLR,UAAU,CAACK,OAAX,GAAqBD,MAAM,CAACK,UAAP,CAAkB,YAAM;QAC3CP,UAAU,CAACG,OAAX,GAAqB,IAArB;QACAN,QAAQ,CAACS,QAAD,CAAR;MACD,CAHoB,EAGlBd,IAHkB,CAArB;IAID;;IACDQ,UAAU,CAACG,OAAX,GAAqB,KAArB;EACD,CAXD;;EAYA,OAAO,CAACP,KAAD,EAAQS,iBAAR,CAAP;AACF","names":["useDebouncedState","defaultValue","wait","options","leading","useState","value","setValue","timeoutRef","useRef","leadingRef","clearTimeout","window","current","useEffect","debouncedSetValue","newValue","setTimeout"],"sources":["../../src/use-debounced-state/use-debounced-state.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nexport function useDebouncedState<T = any>(\n  defaultValue: T,\n  wait: number,\n  options = { leading: false }\n) {\n  const [value, setValue] = useState(defaultValue);\n  const timeoutRef = useRef<number>(null);\n  const leadingRef = useRef(true);\n\n  const clearTimeout = () => window.clearTimeout(timeoutRef.current);\n  useEffect(() => clearTimeout, []);\n\n  const debouncedSetValue = (newValue: T) => {\n    clearTimeout();\n    if (leadingRef.current && options.leading) {\n      setValue(newValue);\n    } else {\n      timeoutRef.current = window.setTimeout(() => {\n        leadingRef.current = true;\n        setValue(newValue);\n      }, wait);\n    }\n    leadingRef.current = false;\n  };\n\n  return [value, debouncedSetValue] as const;\n}\n"]},"metadata":{},"sourceType":"module"}