{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport { useComponentDefaultProps, extractSystemStyles } from '@mantine/styles';\nimport { ChipGroup } from './ChipGroup/ChipGroup.js';\nimport { useChipGroup } from './ChipGroup.context.js';\nimport useStyles from './Chip.styles.js';\nimport { Box } from '../Box/Box.js';\nimport { CheckIcon } from '../Checkbox/CheckboxIcon.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst defaultProps = {\n  type: \"checkbox\",\n  size: \"sm\",\n  radius: \"xl\",\n  variant: \"outline\"\n};\nconst Chip = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Chip\", defaultProps, props),\n        {\n    radius,\n    type,\n    size,\n    variant,\n    disabled,\n    id,\n    color,\n    children,\n    className,\n    classNames,\n    style,\n    styles,\n    checked,\n    defaultChecked,\n    onChange,\n    sx,\n    wrapperProps,\n    value,\n    unstyled\n  } = _a,\n        others = __objRest(_a, [\"radius\", \"type\", \"size\", \"variant\", \"disabled\", \"id\", \"color\", \"children\", \"className\", \"classNames\", \"style\", \"styles\", \"checked\", \"defaultChecked\", \"onChange\", \"sx\", \"wrapperProps\", \"value\", \"unstyled\"]);\n\n  const ctx = useChipGroup();\n  const uuid = useId(id);\n  const {\n    systemStyles,\n    rest\n  } = extractSystemStyles(others);\n  const {\n    classes,\n    cx\n  } = useStyles({\n    radius,\n    size,\n    color\n  }, {\n    classNames,\n    styles,\n    unstyled,\n    name: \"Chip\"\n  });\n  const [_value, setValue] = useUncontrolled({\n    value: checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n    onChange\n  });\n  const contextProps = ctx ? {\n    checked: ctx.isChipSelected(value),\n    onChange: ctx.onChange,\n    type: ctx.multiple ? \"checkbox\" : \"radio\"\n  } : {};\n\n  const _checked = contextProps.checked || _value;\n\n  return /* @__PURE__ */React.createElement(Box, __spreadValues(__spreadValues({\n    className: cx(classes.root, className),\n    style,\n    sx\n  }, systemStyles), wrapperProps), /* @__PURE__ */React.createElement(\"input\", __spreadValues(__spreadValues({\n    type,\n    className: classes.input,\n    checked: _checked,\n    onChange: event => setValue(event.currentTarget.checked),\n    id: uuid,\n    disabled,\n    ref,\n    value\n  }, contextProps), rest)), /* @__PURE__ */React.createElement(\"label\", {\n    htmlFor: uuid,\n    \"data-checked\": _checked || void 0,\n    \"data-disabled\": disabled || void 0,\n    \"data-variant\": variant,\n    className: classes.label\n  }, _checked && /* @__PURE__ */React.createElement(\"span\", {\n    className: classes.iconWrapper\n  }, /* @__PURE__ */React.createElement(CheckIcon, {\n    className: classes.checkIcon\n  })), children));\n});\nChip.displayName = \"@mantine/core/Chip\";\nChip.Group = ChipGroup;\nexport { Chip };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","defaultProps","type","size","radius","variant","Chip","forwardRef","props","ref","_a","useComponentDefaultProps","disabled","id","color","children","className","classNames","style","styles","checked","defaultChecked","onChange","sx","wrapperProps","unstyled","others","ctx","useChipGroup","uuid","useId","systemStyles","rest","extractSystemStyles","classes","cx","useStyles","name","_value","setValue","useUncontrolled","defaultValue","finalValue","contextProps","isChipSelected","multiple","_checked","React","createElement","Box","root","input","event","currentTarget","htmlFor","label","iconWrapper","CheckIcon","checkIcon","displayName","Group","ChipGroup"],"sources":["../../src/Chip/Chip.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  DefaultProps,\n  MantineNumberSize,\n  MantineSize,\n  MantineColor,\n  Selectors,\n  extractSystemStyles,\n  useComponentDefaultProps,\n} from '@mantine/styles';\nimport { ForwardRefWithStaticComponents } from '@mantine/utils';\nimport { Box } from '../Box';\nimport { CheckIcon } from '../Checkbox';\nimport { ChipGroup } from './ChipGroup/ChipGroup';\nimport { useChipGroup } from './ChipGroup.context';\nimport useStyles, { ChipStylesParams } from './Chip.styles';\n\nexport type ChipStylesNames = Selectors<typeof useStyles>;\n\nexport interface ChipProps\n  extends DefaultProps<ChipStylesNames, ChipStylesParams>,\n    Omit<React.ComponentPropsWithRef<'input'>, 'size' | 'onChange'> {\n  /** Chip radius from theme or number to set value in px */\n  radius?: MantineNumberSize;\n\n  /** Predefined chip size */\n  size?: MantineSize;\n\n  /** Chip input type */\n  type?: 'radio' | 'checkbox';\n\n  /** Controls chip appearance, defaults to filled with dark theme and to outline in light theme */\n  variant?: 'outline' | 'filled';\n\n  /** Chip label */\n  children: React.ReactNode;\n\n  /** Checked state for controlled component */\n  checked?: boolean;\n\n  /** Default value for uncontrolled component */\n  defaultChecked?: boolean;\n\n  /** Calls when checked state changes */\n  onChange?(checked: boolean): void;\n\n  /** Active color from theme, defaults to theme.primaryColor */\n  color?: MantineColor;\n\n  /** Static id to bind input with label */\n  id?: string;\n\n  /** Props spread to wrapper element */\n  wrapperProps?: Record<string, any>;\n}\n\nconst defaultProps: Partial<ChipProps> = {\n  type: 'checkbox',\n  size: 'sm',\n  radius: 'xl',\n  variant: 'outline',\n};\n\ntype ChipComponent = ForwardRefWithStaticComponents<ChipProps, { Group: typeof ChipGroup }>;\n\nexport const Chip: ChipComponent = forwardRef<HTMLInputElement, ChipProps>((props, ref) => {\n  const {\n    radius,\n    type,\n    size,\n    variant,\n    disabled,\n    id,\n    color,\n    children,\n    className,\n    classNames,\n    style,\n    styles,\n    checked,\n    defaultChecked,\n    onChange,\n    sx,\n    wrapperProps,\n    value,\n    unstyled,\n    ...others\n  } = useComponentDefaultProps('Chip', defaultProps, props);\n  const ctx = useChipGroup();\n\n  const uuid = useId(id);\n  const { systemStyles, rest } = extractSystemStyles(others);\n  const { classes, cx } = useStyles(\n    { radius, size, color },\n    { classNames, styles, unstyled, name: 'Chip' }\n  );\n\n  const [_value, setValue] = useUncontrolled({\n    value: checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n    onChange,\n  });\n\n  const contextProps = ctx\n    ? {\n        checked: ctx.isChipSelected(value as string),\n        onChange: ctx.onChange,\n        type: ctx.multiple ? 'checkbox' : 'radio',\n      }\n    : {};\n  const _checked = contextProps.checked || _value;\n\n  return (\n    <Box\n      className={cx(classes.root, className)}\n      style={style}\n      sx={sx}\n      {...systemStyles}\n      {...wrapperProps}\n    >\n      <input\n        type={type}\n        className={classes.input}\n        checked={_checked}\n        onChange={(event) => setValue(event.currentTarget.checked)}\n        id={uuid}\n        disabled={disabled}\n        ref={ref}\n        value={value}\n        {...contextProps}\n        {...rest}\n      />\n      <label\n        htmlFor={uuid}\n        data-checked={_checked || undefined}\n        data-disabled={disabled || undefined}\n        data-variant={variant}\n        className={classes.label}\n      >\n        {_checked && (\n          <span className={classes.iconWrapper}>\n            <CheckIcon className={classes.checkIcon} />\n          </span>\n        )}\n        {children}\n      </label>\n    </Box>\n  );\n}) as any;\n\nChip.displayName = '@mantine/core/Chip';\nChip.Group = ChipGroup;\n"]},"metadata":{},"sourceType":"module"}