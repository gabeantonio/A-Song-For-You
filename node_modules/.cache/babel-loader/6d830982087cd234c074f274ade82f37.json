{"ast":null,"code":"import React, { Children } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport useStyles from './MediaQuery.styles.js';\n\nfunction MediaQuery(props) {\n  var _a;\n\n  var _useComponentDefaultP = useComponentDefaultProps(\"MediaQuery\", {}, props),\n      children = _useComponentDefaultP.children,\n      smallerThan = _useComponentDefaultP.smallerThan,\n      largerThan = _useComponentDefaultP.largerThan,\n      query = _useComponentDefaultP.query,\n      styles = _useComponentDefaultP.styles,\n      className = _useComponentDefaultP.className;\n\n  var _useStyles = useStyles({\n    smallerThan: smallerThan,\n    largerThan: largerThan,\n    query: query,\n    styles: styles\n  }, {\n    name: \"MediaQuery\"\n  }),\n      classes = _useStyles.classes,\n      cx = _useStyles.cx;\n\n  var child = Children.only(children);\n\n  if (typeof child === \"object\" && child !== null && \"props\" in child) {\n    return React.cloneElement(child, {\n      className: cx(classes.media, (_a = child.props) == null ? void 0 : _a.className, className)\n    });\n  }\n\n  return child;\n}\n\nMediaQuery.displayName = \"@mantine/core/MediaQuery\";\nexport { MediaQuery };","map":{"version":3,"mappings":";;;;AAGO,SAASA,UAAT,CAAoBC,KAApB,EAA2B;EAChC,IAAIC,EAAJ;;EACA,4BAAwEC,wBAAwB,CAAC,YAAD,EAAe,EAAf,EAAmBF,KAAnB,CAAhG;EAAA,IAAQG,QAAR,yBAAQA,QAAR;EAAA,IAAkBC,WAAlB,yBAAkBA,WAAlB;EAAA,IAA+BC,UAA/B,yBAA+BA,UAA/B;EAAA,IAA2CC,KAA3C,yBAA2CA,KAA3C;EAAA,IAAkDC,MAAlD,yBAAkDA,MAAlD;EAAA,IAA0DC,SAA1D,yBAA0DA,SAA1D;;EACA,iBAAwBC,SAAS,CAAC;IAAEL,WAAW,EAAXA,WAAF;IAAeC,UAAU,EAAVA,UAAf;IAA2BC,KAAK,EAALA,KAA3B;IAAkCC,MAAM,EAANA;EAAlC,CAAD,EAA6C;IAAEG,IAAI,EAAE;EAAR,CAA7C,CAAjC;EAAA,IAAQC,OAAR,cAAQA,OAAR;EAAA,IAAiBC,EAAjB,cAAiBA,EAAjB;;EACA,IAAMC,KAAK,GAAGC,QAAQ,CAACC,IAAT,CAAcZ,QAAd,CAAd;;EACA,IAAI,OAAOU,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,KAAK,IAAvC,IAA+C,WAAWA,KAA9D,EAAqE;IACnE,OAAOG,KAAK,CAACC,YAAN,CAAmBJ,KAAnB,EAA0B;MAC/BL,SAAS,EAAEI,EAAE,CAACD,OAAO,CAACO,KAAT,EAAgB,CAACjB,EAAE,GAAGY,KAAK,CAACb,KAAZ,KAAsB,IAAtB,GAA6B,KAAK,CAAlC,GAAsCC,EAAE,CAACO,SAAzD,EAAoEA,SAApE;IADkB,CAA1B,CAAP;EAGD;;EACD,OAAOK,KAAP;AACD;;AACDd,UAAU,CAACoB,WAAX,GAAyB,0BAAzB","names":["MediaQuery","props","_a","useComponentDefaultProps","children","smallerThan","largerThan","query","styles","className","useStyles","name","classes","cx","child","Children","only","React","cloneElement","media","displayName"],"sources":["../../src/MediaQuery/MediaQuery.tsx"],"sourcesContent":["import React, { Children } from 'react';\nimport { MantineNumberSize, CSSObject, useComponentDefaultProps } from '@mantine/styles';\nimport useStyles from './MediaQuery.styles';\n\nexport interface MediaQueryProps {\n  className?: string;\n\n  /** Child that should be shown at given breakpoint, it must accept className prop */\n  children: React.ReactNode;\n\n  /** Styles applied to child when viewport is smaller than given breakpoint */\n  smallerThan?: MantineNumberSize;\n\n  /** Styles applied to child when viewport is larger than given breakpoint */\n  largerThan?: MantineNumberSize;\n\n  /** Any other media query */\n  query?: string;\n\n  /** Styles applied to child when breakpoint matches */\n  styles: CSSObject;\n}\n\nexport function MediaQuery(props: MediaQueryProps) {\n  const { children, smallerThan, largerThan, query, styles, className } = useComponentDefaultProps(\n    'MediaQuery',\n    {},\n    props\n  );\n\n  const { classes, cx } = useStyles(\n    { smallerThan, largerThan, query, styles },\n    { name: 'MediaQuery' }\n  );\n\n  const child = Children.only(children) as React.ReactElement;\n\n  if (typeof child === 'object' && child !== null && 'props' in child) {\n    return React.cloneElement(child, {\n      className: cx(classes.media, child.props?.className, className),\n    });\n  }\n\n  return child;\n}\n\nMediaQuery.displayName = '@mantine/core/MediaQuery';\n"]},"metadata":{},"sourceType":"module"}