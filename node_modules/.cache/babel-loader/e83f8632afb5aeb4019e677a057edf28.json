{"ast":null,"code":"import tokenService from'./tokenService';var BASE_URL='/api/users/';// NOTE THIS IS configured to send of a multi/part form request\n// aka photo \nfunction signup(user){return fetch(BASE_URL+'signup',{method:'POST',headers:new Headers({'Content-Type':'application/json'}),body:JSON.stringify(user)}).then(function(res){if(res.ok)return res.json();// Probably a duplicate email\n// Writing your error handling like this allows you to throw the error response \n// to the catch block where signup occurs,  \n//     res.status(400).json({ err: \"Something went wrong\" }); notice err, and response.err match\nreturn res.json().then(function(response){console.log(response);throw new Error(response.err);});})// Parameter destructuring!\n.then(function(_ref){var token=_ref.token;return tokenService.setToken(token);});// Setting our token in localStorage in our browser\n// then we'll be able to use with every request!\n// The above could have been written as\n//.then((token) => token.token);\n}function getUser(){return tokenService.getUserFromToken();}function logout(){tokenService.removeToken();}function login(creds){return fetch(BASE_URL+'login',{method:'POST',headers:new Headers({'Content-Type':'application/json'}),body:JSON.stringify(creds)}).then(function(res){// Valid login if we have a status of 2xx (res.ok)\nif(res.ok)return res.json();return res.json().then(function(response){console.log(response);throw new Error(response.err);});}).then(function(_ref2){var token=_ref2.token;return tokenService.setToken(token);});}function getProfile(username){return fetch(BASE_URL+username,{headers:{'Authorization':'Bearer '+tokenService.getToken()}}).then(function(res){if(res.ok)return res.json();throw new Error('Error from getProfile request. Please check your server terminal.');});}var userService={signup:signup,logout:logout,login:login,getUser:getUser,getProfile:getProfile};export default userService;","map":{"version":3,"names":["tokenService","BASE_URL","signup","user","fetch","method","headers","Headers","body","JSON","stringify","then","res","ok","json","response","console","log","Error","err","token","setToken","getUser","getUserFromToken","logout","removeToken","login","creds","getProfile","username","getToken","userService"],"sources":["/Users/gabrieldeleon/code/GA-Project-4/src/utils/userService.js"],"sourcesContent":["import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\n\n// NOTE THIS IS configured to send of a multi/part form request\n// aka photo \nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(user)\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    \n    // Writing your error handling like this allows you to throw the error response \n    // to the catch block where signup occurs,  \n\n//     res.status(400).json({ err: \"Something went wrong\" }); notice err, and response.err match\n    return res.json().then(response => {\n      console.log(response)\n      throw new Error(response.err)\n    })\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // Setting our token in localStorage in our browser\n  // then we'll be able to use with every request!\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    return res.json().then(response => {\n      console.log(response)\n      throw new Error(response.err)\n    })\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nfunction getProfile(username) {\n  return fetch(BASE_URL + username, {\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken(),\n  }\n  }).then(res => {\n    if(res.ok) return res.json();\n    throw new Error('Error from getProfile request. Please check your server terminal.')\n  })\n}\n\n\nconst userService = {\n  signup, \n  logout,\n  login,\n  getUser,\n  getProfile\n};\n\nexport default userService"],"mappings":"AAAA,MAAOA,aAAP,KAAyB,gBAAzB,CAEA,GAAMC,SAAQ,CAAG,aAAjB,CAGA;AACA;AACA,QAASC,OAAT,CAAgBC,IAAhB,CAAsB,CACpB,MAAOC,MAAK,CAACH,QAAQ,CAAG,QAAZ,CAAsB,CAChCI,MAAM,CAAE,MADwB,CAEhCC,OAAO,CAAE,GAAIC,QAAJ,CAAY,CAAC,eAAgB,kBAAjB,CAAZ,CAFuB,CAGhCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAH0B,CAAtB,CAAL,CAKNQ,IALM,CAKD,SAAAC,GAAG,CAAI,CACX,GAAIA,GAAG,CAACC,EAAR,CAAY,MAAOD,IAAG,CAACE,IAAJ,EAAP,CACZ;AAEA;AACA;AAEJ;AACI,MAAOF,IAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgB,SAAAI,QAAQ,CAAI,CACjCC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACA,KAAM,IAAIG,MAAJ,CAAUH,QAAQ,CAACI,GAAnB,CAAN,CACD,CAHM,CAAP,CAID,CAjBM,CAkBP;AAlBO,CAmBNR,IAnBM,CAmBD,kBAAES,MAAF,MAAEA,KAAF,OAAapB,aAAY,CAACqB,QAAb,CAAsBD,KAAtB,CAAb,EAnBC,CAAP,CAoBA;AACA;AACA;AACA;AACD,CAED,QAASE,QAAT,EAAmB,CACjB,MAAOtB,aAAY,CAACuB,gBAAb,EAAP,CACD,CAED,QAASC,OAAT,EAAkB,CAChBxB,YAAY,CAACyB,WAAb,GACD,CAED,QAASC,MAAT,CAAeC,KAAf,CAAsB,CACpB,MAAOvB,MAAK,CAACH,QAAQ,CAAG,OAAZ,CAAqB,CAC/BI,MAAM,CAAE,MADuB,CAE/BC,OAAO,CAAE,GAAIC,QAAJ,CAAY,CAAC,eAAgB,kBAAjB,CAAZ,CAFsB,CAG/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeiB,KAAf,CAHyB,CAArB,CAAL,CAKNhB,IALM,CAKD,SAAAC,GAAG,CAAI,CACX;AACA,GAAIA,GAAG,CAACC,EAAR,CAAY,MAAOD,IAAG,CAACE,IAAJ,EAAP,CACZ,MAAOF,IAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgB,SAAAI,QAAQ,CAAI,CACjCC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACA,KAAM,IAAIG,MAAJ,CAAUH,QAAQ,CAACI,GAAnB,CAAN,CACD,CAHM,CAAP,CAID,CAZM,EAaNR,IAbM,CAaD,mBAAES,MAAF,OAAEA,KAAF,OAAapB,aAAY,CAACqB,QAAb,CAAsBD,KAAtB,CAAb,EAbC,CAAP,CAcD,CAED,QAASQ,WAAT,CAAoBC,QAApB,CAA8B,CAC5B,MAAOzB,MAAK,CAACH,QAAQ,CAAG4B,QAAZ,CAAsB,CAChCvB,OAAO,CAAE,CACP,gBAAiB,UAAYN,YAAY,CAAC8B,QAAb,EADtB,CADuB,CAAtB,CAAL,CAIJnB,IAJI,CAIC,SAAAC,GAAG,CAAI,CACb,GAAGA,GAAG,CAACC,EAAP,CAAW,MAAOD,IAAG,CAACE,IAAJ,EAAP,CACX,KAAM,IAAII,MAAJ,CAAU,mEAAV,CAAN,CACD,CAPM,CAAP,CAQD,CAGD,GAAMa,YAAW,CAAG,CAClB7B,MAAM,CAANA,MADkB,CAElBsB,MAAM,CAANA,MAFkB,CAGlBE,KAAK,CAALA,KAHkB,CAIlBJ,OAAO,CAAPA,OAJkB,CAKlBM,UAAU,CAAVA,UALkB,CAApB,CAQA,cAAeG,YAAf"},"metadata":{},"sourceType":"module"}