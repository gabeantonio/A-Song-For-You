{"ast":null,"code":"import _slicedToArray from \"/Users/gabrieldeleon/code/GA-Project-4/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState, useCallback } from 'react';\nimport { useDelayGroupContext, useFloating, offset, shift, flip, useInteractions, useHover, useFocus, useRole, useDismiss, useDelayGroup } from '@floating-ui/react-dom-interactions';\nimport { useId, useDidUpdate } from '@mantine/hooks';\nimport { useTooltipGroupContext } from './TooltipGroup/TooltipGroup.context.js';\nimport { useFloatingAutoUpdate } from '../Floating/use-floating-auto-update.js';\n\nfunction useTooltip(settings) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      uncontrolledOpened = _useState2[0],\n      setUncontrolledOpened = _useState2[1];\n\n  var controlled = typeof settings.opened === \"boolean\";\n  var opened = controlled ? settings.opened : uncontrolledOpened;\n  var withinGroup = useTooltipGroupContext();\n  var uid = useId();\n\n  var _useDelayGroupContext = useDelayGroupContext(),\n      groupDelay = _useDelayGroupContext.delay,\n      currentId = _useDelayGroupContext.currentId,\n      setCurrentId = _useDelayGroupContext.setCurrentId;\n\n  var onChange = useCallback(function (_opened) {\n    setUncontrolledOpened(_opened);\n\n    if (_opened) {\n      setCurrentId(uid);\n    }\n  }, [setCurrentId, uid]);\n\n  var _useFloating = useFloating({\n    placement: settings.position,\n    open: opened,\n    onOpenChange: onChange,\n    middleware: [offset(settings.offset), shift({\n      padding: 8\n    }), flip()]\n  }),\n      x = _useFloating.x,\n      y = _useFloating.y,\n      reference = _useFloating.reference,\n      floating = _useFloating.floating,\n      context = _useFloating.context,\n      refs = _useFloating.refs,\n      update = _useFloating.update,\n      placement = _useFloating.placement;\n\n  var _useInteractions = useInteractions([useHover(context, {\n    enabled: settings.events.hover,\n    delay: withinGroup ? groupDelay : {\n      open: settings.openDelay,\n      close: settings.closeDelay\n    },\n    mouseOnly: !settings.events.touch\n  }), useFocus(context, {\n    enabled: settings.events.focus,\n    keyboardOnly: true\n  }), useRole(context, {\n    role: \"tooltip\"\n  }), useDismiss(context, {\n    enabled: typeof settings.opened === void 0\n  }), useDelayGroup(context, {\n    id: uid\n  })]),\n      getReferenceProps = _useInteractions.getReferenceProps,\n      getFloatingProps = _useInteractions.getFloatingProps;\n\n  useFloatingAutoUpdate({\n    opened: opened,\n    positionDependencies: settings.positionDependencies,\n    floating: {\n      refs: refs,\n      update: update\n    }\n  });\n  useDidUpdate(function () {\n    var _a;\n\n    (_a = settings.onPositionChange) == null ? void 0 : _a.call(settings, placement);\n  }, [placement]);\n  var isGroupPhase = opened && currentId && currentId !== uid;\n  return {\n    x: x,\n    y: y,\n    reference: reference,\n    floating: floating,\n    getFloatingProps: getFloatingProps,\n    getReferenceProps: getReferenceProps,\n    isGroupPhase: isGroupPhase,\n    opened: opened,\n    placement: placement\n  };\n}\n\nexport { useTooltip };","map":{"version":3,"mappings":";;;;;;;AAiBO,SAASA,UAAT,CAAoBC,QAApB,EAA8B;EACnC,gBAAoDC,QAAQ,CAAC,KAAD,CAA5D;EAAA;EAAA,IAAOC,kBAAP;EAAA,IAA2BC,qBAA3B;;EACA,IAAMC,UAAU,GAAG,OAAOJ,QAAQ,CAACK,MAAhB,KAA2B,SAA9C;EACA,IAAMA,MAAM,GAAGD,UAAU,GAAGJ,QAAQ,CAACK,MAAZ,GAAqBH,kBAA9C;EACA,IAAMI,WAAW,GAAGC,sBAAsB,EAA1C;EACA,IAAMC,GAAG,GAAGC,KAAK,EAAjB;;EACA,4BAAuDC,oBAAoB,EAA3E;EAAA,IAAeC,UAAf,yBAAQC,KAAR;EAAA,IAA2BC,SAA3B,yBAA2BA,SAA3B;EAAA,IAAsCC,YAAtC,yBAAsCA,YAAtC;;EACA,IAAMC,QAAQ,GAAGC,WAAW,CAAC,UAACC,OAAD,EAAa;IACxCd,qBAAqB,CAACc,OAAD,CAArB;;IACA,IAAIA,OAAJ,EAAa;MACXH,YAAY,CAACN,GAAD,CAAZ;IACD;EACF,CAL2B,EAKzB,CAACM,YAAD,EAAeN,GAAf,CALyB,CAA5B;;EAMA,mBAAwEU,WAAW,CAAC;IAClFC,SAAS,EAAEnB,QAAQ,CAACoB,QAD8D;IAElFC,IAAI,EAAEhB,MAF4E;IAGlFiB,YAAY,EAAEP,QAHoE;IAIlFQ,UAAU,EAAE,CAACC,MAAM,CAACxB,QAAQ,CAACwB,MAAV,CAAP,EAA0BC,KAAK,CAAC;MAAEC,OAAO,EAAE;IAAX,CAAD,CAA/B,EAAiDC,IAAI,EAArD;EAJsE,CAAD,CAAnF;EAAA,IAAQC,CAAR,gBAAQA,CAAR;EAAA,IAAWC,CAAX,gBAAWA,CAAX;EAAA,IAAcC,SAAd,gBAAcA,SAAd;EAAA,IAAyBC,QAAzB,gBAAyBA,QAAzB;EAAA,IAAmCC,OAAnC,gBAAmCA,OAAnC;EAAA,IAA4CC,IAA5C,gBAA4CA,IAA5C;EAAA,IAAkDC,MAAlD,gBAAkDA,MAAlD;EAAA,IAA0Df,SAA1D,gBAA0DA,SAA1D;;EAMA,uBAAgDgB,eAAe,CAAC,CAC9DC,QAAQ,CAACJ,OAAD,EAAU;IAChBK,OAAO,EAAErC,QAAQ,CAACsC,MAAT,CAAgBC,KADT;IAEhB3B,KAAK,EAAEN,WAAW,GAAGK,UAAH,GAAgB;MAAEU,IAAI,EAAErB,QAAQ,CAACwC,SAAjB;MAA4BC,KAAK,EAAEzC,QAAQ,CAAC0C;IAA5C,CAFlB;IAGhBC,SAAS,EAAE,CAAC3C,QAAQ,CAACsC,MAAT,CAAgBM;EAHZ,CAAV,CADsD,EAM9DC,QAAQ,CAACb,OAAD,EAAU;IAAEK,OAAO,EAAErC,QAAQ,CAACsC,MAAT,CAAgBQ,KAA3B;IAAkCC,YAAY,EAAE;EAAhD,CAAV,CANsD,EAO9DC,OAAO,CAAChB,OAAD,EAAU;IAAEiB,IAAI,EAAE;EAAR,CAAV,CAPuD,EAQ9DC,UAAU,CAAClB,OAAD,EAAU;IAAEK,OAAO,EAAE,OAAOrC,QAAQ,CAACK,MAAhB,KAA2B,KAAK;EAA3C,CAAV,CARoD,EAS9D8C,aAAa,CAACnB,OAAD,EAAU;IAAEoB,EAAE,EAAE5C;EAAN,CAAV,CATiD,CAAD,CAA/D;EAAA,IAAQ6C,iBAAR,oBAAQA,iBAAR;EAAA,IAA2BC,gBAA3B,oBAA2BA,gBAA3B;;EAWAC,qBAAqB,CAAC;IACpBlD,MAAM,EAANA,MADoB;IAEpBmD,oBAAoB,EAAExD,QAAQ,CAACwD,oBAFX;IAGpBzB,QAAQ,EAAE;MAAEE,IAAI,EAAJA,IAAF;MAAQC,MAAM,EAANA;IAAR;EAHU,CAAD,CAArB;EAKAuB,YAAY,CAAC,YAAM;IACjB,IAAIC,EAAJ;;IACA,CAACA,EAAE,GAAG1D,QAAQ,CAAC2D,gBAAf,KAAoC,IAApC,GAA2C,KAAK,CAAhD,GAAoDD,EAAE,CAACE,IAAH,CAAQ5D,QAAR,EAAkBmB,SAAlB,CAApD;EACD,CAHW,EAGT,CAACA,SAAD,CAHS,CAAZ;EAIA,IAAM0C,YAAY,GAAGxD,MAAM,IAAIQ,SAAV,IAAuBA,SAAS,KAAKL,GAA1D;EACA,OAAO;IACLoB,CAAC,EAADA,CADK;IAELC,CAAC,EAADA,CAFK;IAGLC,SAAS,EAATA,SAHK;IAILC,QAAQ,EAARA,QAJK;IAKLuB,gBAAgB,EAAhBA,gBALK;IAMLD,iBAAiB,EAAjBA,iBANK;IAOLQ,YAAY,EAAZA,YAPK;IAQLxD,MAAM,EAANA,MARK;IASLc,SAAS,EAATA;EATK,CAAP;AAWF","names":["useTooltip","settings","useState","uncontrolledOpened","setUncontrolledOpened","controlled","opened","withinGroup","useTooltipGroupContext","uid","useId","useDelayGroupContext","groupDelay","delay","currentId","setCurrentId","onChange","useCallback","_opened","useFloating","placement","position","open","onOpenChange","middleware","offset","shift","padding","flip","x","y","reference","floating","context","refs","update","useInteractions","useHover","enabled","events","hover","openDelay","close","closeDelay","mouseOnly","touch","useFocus","focus","keyboardOnly","useRole","role","useDismiss","useDelayGroup","id","getReferenceProps","getFloatingProps","useFloatingAutoUpdate","positionDependencies","useDidUpdate","_a","onPositionChange","call","isGroupPhase"],"sources":["../../src/Tooltip/use-tooltip.ts"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport {\n  useFloating,\n  flip,\n  offset,\n  shift,\n  useInteractions,\n  useHover,\n  useFocus,\n  useRole,\n  useDismiss,\n  useDelayGroupContext,\n  useDelayGroup,\n} from '@floating-ui/react-dom-interactions';\nimport { useId, useDidUpdate } from '@mantine/hooks';\nimport { useTooltipGroupContext } from './TooltipGroup/TooltipGroup.context';\nimport { FloatingPosition, useFloatingAutoUpdate } from '../Floating';\n\ninterface UseTooltip {\n  position: FloatingPosition;\n  closeDelay: number;\n  openDelay: number;\n  onPositionChange?(position: FloatingPosition): void;\n  opened?: boolean;\n  offset: number;\n  events: { hover: boolean; focus: boolean; touch: boolean };\n  positionDependencies: any[];\n}\n\nexport function useTooltip(settings: UseTooltip) {\n  const [uncontrolledOpened, setUncontrolledOpened] = useState(false);\n  const controlled = typeof settings.opened === 'boolean';\n  const opened = controlled ? settings.opened : uncontrolledOpened;\n  const withinGroup = useTooltipGroupContext();\n  const uid = useId();\n\n  const { delay: groupDelay, currentId, setCurrentId } = useDelayGroupContext();\n\n  const onChange = useCallback(\n    (_opened: boolean) => {\n      setUncontrolledOpened(_opened);\n\n      if (_opened) {\n        setCurrentId(uid);\n      }\n    },\n    [setCurrentId, uid]\n  );\n\n  const { x, y, reference, floating, context, refs, update, placement } = useFloating({\n    placement: settings.position,\n    open: opened,\n    onOpenChange: onChange,\n    middleware: [offset(settings.offset), shift({ padding: 8 }), flip()],\n  });\n\n  const { getReferenceProps, getFloatingProps } = useInteractions([\n    useHover(context, {\n      enabled: settings.events.hover,\n      delay: withinGroup ? groupDelay : { open: settings.openDelay, close: settings.closeDelay },\n      mouseOnly: !settings.events.touch,\n    }),\n    useFocus(context, { enabled: settings.events.focus, keyboardOnly: true }),\n    useRole(context, { role: 'tooltip' }),\n    // cannot be used with controlled tooltip, page jumps\n    useDismiss(context, { enabled: typeof settings.opened === undefined }),\n    useDelayGroup(context, { id: uid }),\n  ]);\n\n  useFloatingAutoUpdate({\n    opened,\n    positionDependencies: settings.positionDependencies,\n    floating: { refs, update },\n  });\n\n  useDidUpdate(() => {\n    settings.onPositionChange?.(placement);\n  }, [placement]);\n\n  const isGroupPhase = opened && currentId && currentId !== uid;\n\n  return {\n    x,\n    y,\n    reference,\n    floating,\n    getFloatingProps,\n    getReferenceProps,\n    isGroupPhase,\n    opened,\n    placement,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}