{"ast":null,"code":"function size(props) {\n  if (typeof props.size === \"number\") {\n    return props.size;\n  }\n\n  const computedSize = props.sizes[props.size];\n  return computedSize !== void 0 ? computedSize : props.size || props.sizes.md;\n}\n\nexport { size };","map":{"version":3,"mappings":"AAAO,SAASA,IAAT,CAAcC,KAAd,EAAqB;EAC1B,IAAI,OAAOA,KAAK,CAACD,IAAb,KAAsB,QAA1B,EAAoC;IAClC,OAAOC,KAAK,CAACD,IAAb;EACD;;EACD,MAAME,YAAY,GAAGD,KAAK,CAACE,KAAN,CAAYF,KAAK,CAACD,IAAlB,CAArB;EACA,OAAOE,YAAY,KAAK,KAAK,CAAtB,GAA0BA,YAA1B,GAAyCD,KAAK,CAACD,IAAN,IAAcC,KAAK,CAACE,KAAN,CAAYC,EAA1E;AACF","names":["size","props","computedSize","sizes","md"],"sources":["../../../../../src/theme/functions/fns/size/size.ts"],"sourcesContent":["interface GetSize {\n  size: string | number;\n  sizes: Record<string, any>;\n}\n\nexport function size(props: GetSize) {\n  if (typeof props.size === 'number') {\n    return props.size;\n  }\n\n  const computedSize = props.sizes[props.size];\n\n  return computedSize !== undefined ? computedSize : props.size || props.sizes.md;\n}\n"]},"metadata":{},"sourceType":"module"}