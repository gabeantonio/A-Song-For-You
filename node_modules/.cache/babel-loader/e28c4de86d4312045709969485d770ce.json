{"ast":null,"code":"var _jsxFileName = \"/Users/gabrieldeleon/code/GA-Project-4/src/pages/ProfilePage/ProfilePage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from '../../components/Header';\nimport ProfilePostDisplay from '../../components/ProfilePostDisplay';\nimport PlaylistFeed from '../../components/PlaylistFeed';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\nimport userService from '../../utils/userService';\nimport { SimpleGrid } from '@mantine/core';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProfilePage() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [profileUser, setProfileUser] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const {\n    username\n  } = useParams();\n  useEffect(() => {\n    async function getProfile() {\n      try {\n        const response = await userService.getProfile(username);\n        setLoading(false);\n        setProfileUser(response.data.user);\n        setPosts(response.data.posts);\n        console.log(response, '<--- OUR DATA');\n      } catch (err) {\n        console.log(err.message);\n        setError('Profile does not exist!');\n      }\n    }\n\n    getProfile();\n  }, [username]);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      cols: 1,\n      verticalSpacing: \"50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"0 35% 5% 35%\",\n          maxWidth: 700\n        },\n        children: /*#__PURE__*/_jsxDEV(PlaylistFeed, {\n          posts: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 68\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(ProfilePage, \"U2I4DZIFfnbT7MUA6lmBDoUe9Bw=\", false, function () {\n  return [useParams];\n});\n\n_c = ProfilePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","Header","ProfilePostDisplay","PlaylistFeed","ErrorMessage","userService","SimpleGrid","useParams","ProfilePage","posts","setPosts","profileUser","setProfileUser","loading","setLoading","error","setError","username","getProfile","response","data","user","console","log","err","message","margin","maxWidth"],"sources":["/Users/gabrieldeleon/code/GA-Project-4/src/pages/ProfilePage/ProfilePage.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Header from '../../components/Header';\nimport ProfilePostDisplay from '../../components/ProfilePostDisplay';\nimport PlaylistFeed from '../../components/PlaylistFeed';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\nimport userService from '../../utils/userService';\nimport { SimpleGrid } from '@mantine/core';\nimport { useParams } from 'react-router-dom';\n\n\nexport default function ProfilePage() {\n\n    const [posts, setPosts] = useState([]);\n    const [profileUser, setProfileUser] = useState({});\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState('');\n\n    const { username } = useParams();\n\n\n\n    useEffect(() => {\n        async function getProfile() {\n            try {\n                const response = await userService.getProfile(username);\n                setLoading(false)\n                setProfileUser(response.data.user);\n                setPosts(response.data.posts);\n                console.log(response, '<--- OUR DATA')\n            } catch(err) {\n                console.log(err.message);\n                setError('Profile does not exist!')\n            }\n        }\n        getProfile();\n    }, [username])\n\n    if(error){\n        return (\n            <>\n            <Header />\n            <ErrorMessage error={error} />\n            </>\n        )\n    }\n\n    if (loading) {\n        return (\n            <>\n            <Header />\n            <h1>Loading...</h1>\n            </>\n        )\n    }\n\n\n\n    return (\n        <>\n        <SimpleGrid cols={1} verticalSpacing=\"50\">\n            <div><Header /></div>\n            <div style={{ margin: \"0 35% 5% 35%\", maxWidth: 700 }}><PlaylistFeed posts={posts} /></div>\n        </SimpleGrid>\n        </>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAGA,eAAe,SAASC,WAAT,GAAuB;EAAA;;EAElC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;EAEA,MAAM;IAAEkB;EAAF,IAAeV,SAAS,EAA9B;EAIAP,SAAS,CAAC,MAAM;IACZ,eAAekB,UAAf,GAA4B;MACxB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMd,WAAW,CAACa,UAAZ,CAAuBD,QAAvB,CAAvB;QACAH,UAAU,CAAC,KAAD,CAAV;QACAF,cAAc,CAACO,QAAQ,CAACC,IAAT,CAAcC,IAAf,CAAd;QACAX,QAAQ,CAACS,QAAQ,CAACC,IAAT,CAAcX,KAAf,CAAR;QACAa,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAAsB,eAAtB;MACH,CAND,CAME,OAAMK,GAAN,EAAW;QACTF,OAAO,CAACC,GAAR,CAAYC,GAAG,CAACC,OAAhB;QACAT,QAAQ,CAAC,yBAAD,CAAR;MACH;IACJ;;IACDE,UAAU;EACb,CAdQ,EAcN,CAACD,QAAD,CAdM,CAAT;;EAgBA,IAAGF,KAAH,EAAS;IACL,oBACI;MAAA,wBACA,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QADA,eAEA,QAAC,YAAD;QAAc,KAAK,EAAEA;MAArB;QAAA;QAAA;QAAA;MAAA,QAFA;IAAA,gBADJ;EAMH;;EAED,IAAIF,OAAJ,EAAa;IACT,oBACI;MAAA,wBACA,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QADA,eAEA;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFA;IAAA,gBADJ;EAMH;;EAID,oBACI;IAAA,uBACA,QAAC,UAAD;MAAY,IAAI,EAAE,CAAlB;MAAqB,eAAe,EAAC,IAArC;MAAA,wBACI;QAAA,uBAAK,QAAC,MAAD;UAAA;UAAA;UAAA;QAAA;MAAL;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAK,KAAK,EAAE;UAAEa,MAAM,EAAE,cAAV;UAA0BC,QAAQ,EAAE;QAApC,CAAZ;QAAA,uBAAuD,QAAC,YAAD;UAAc,KAAK,EAAElB;QAArB;UAAA;UAAA;UAAA;QAAA;MAAvD;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADA,iBADJ;AAQH;;GAvDuBD,W;UAOCD,S;;;KAPDC,W"},"metadata":{},"sourceType":"module"}