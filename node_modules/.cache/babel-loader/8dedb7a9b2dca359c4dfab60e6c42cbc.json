{"ast":null,"code":"import React from 'react';\nimport { getTransitionStyles } from './get-transition-styles/get-transition-styles.js';\nimport { useTransition } from './use-transition.js';\n\nfunction Transition(_ref) {\n  var transition = _ref.transition,\n      _ref$duration = _ref.duration,\n      duration = _ref$duration === void 0 ? 250 : _ref$duration,\n      _ref$exitDuration = _ref.exitDuration,\n      exitDuration = _ref$exitDuration === void 0 ? duration : _ref$exitDuration,\n      mounted = _ref.mounted,\n      children = _ref.children,\n      timingFunction = _ref.timingFunction,\n      onExit = _ref.onExit,\n      onEntered = _ref.onEntered,\n      onEnter = _ref.onEnter,\n      onExited = _ref.onExited;\n\n  var _useTransition = useTransition({\n    mounted: mounted,\n    exitDuration: exitDuration,\n    duration: duration,\n    timingFunction: timingFunction,\n    onExit: onExit,\n    onEntered: onEntered,\n    onEnter: onEnter,\n    onExited: onExited\n  }),\n      transitionDuration = _useTransition.transitionDuration,\n      transitionStatus = _useTransition.transitionStatus,\n      transitionTimingFunction = _useTransition.transitionTimingFunction;\n\n  if (transitionDuration === 0) {\n    return mounted ? /* @__PURE__ */React.createElement(React.Fragment, null, children({})) : null;\n  }\n\n  return transitionStatus === \"exited\" ? null : /* @__PURE__ */React.createElement(React.Fragment, null, children(getTransitionStyles({\n    transition: transition,\n    duration: transitionDuration,\n    state: transitionStatus,\n    timingFunction: transitionTimingFunction\n  })));\n}\n\nTransition.displayName = \"@mantine/core/Transition\";\nexport { Transition };","map":{"version":3,"mappings":";;;;AAGO,SAASA,UAAT,OAWJ;EAAA,IAVDC,UAUC,QAVDA,UAUC;EAAA,yBATDC,QASC;EAAA,IATDA,QASC,8BATU,GASV;EAAA,6BARDC,YAQC;EAAA,IARDA,YAQC,kCARcD,QAQd;EAAA,IAPDE,OAOC,QAPDA,OAOC;EAAA,IANDC,QAMC,QANDA,QAMC;EAAA,IALDC,cAKC,QALDA,cAKC;EAAA,IAJDC,MAIC,QAJDA,MAIC;EAAA,IAHDC,SAGC,QAHDA,SAGC;EAAA,IAFDC,OAEC,QAFDA,OAEC;EAAA,IADDC,QACC,QADDA,QACC;;EACD,qBAA2EC,aAAa,CAAC;IACvFP,OAAO,EAAPA,OADuF;IAEvFD,YAAY,EAAZA,YAFuF;IAGvFD,QAAQ,EAARA,QAHuF;IAIvFI,cAAc,EAAdA,cAJuF;IAKvFC,MAAM,EAANA,MALuF;IAMvFC,SAAS,EAATA,SANuF;IAOvFC,OAAO,EAAPA,OAPuF;IAQvFC,QAAQ,EAARA;EARuF,CAAD,CAAxF;EAAA,IAAQE,kBAAR,kBAAQA,kBAAR;EAAA,IAA4BC,gBAA5B,kBAA4BA,gBAA5B;EAAA,IAA8CC,wBAA9C,kBAA8CA,wBAA9C;;EAUA,IAAIF,kBAAkB,KAAK,CAA3B,EAA8B;IAC5B,OAAOR,OAAO,kBAAmBW,KAAK,CAACC,aAAN,CAAoBD,KAAK,CAACE,QAA1B,EAAoC,IAApC,EAA0CZ,QAAQ,CAAC,EAAD,CAAlD,CAAnB,GAA6E,IAA3F;EACD;;EACD,OAAOQ,gBAAgB,KAAK,QAArB,GAAgC,IAAhC,GAAoC,eAAmBE,KAAK,CAACC,aAAN,CAAoBD,KAAK,CAACE,QAA1B,EAAoC,IAApC,EAA0CZ,QAAQ,CAACa,mBAAmB,CAAC;IACnIjB,UAAU,EAAVA,UADmI;IAEnIC,QAAQ,EAAEU,kBAFyH;IAGnIO,KAAK,EAAEN,gBAH4H;IAInIP,cAAc,EAAEQ;EAJmH,CAAD,CAApB,CAAlD,CAA9D;AAMD;;AACDd,UAAU,CAACoB,WAAX,GAAyB,0BAAzB","names":["Transition","transition","duration","exitDuration","mounted","children","timingFunction","onExit","onEntered","onEnter","onExited","useTransition","transitionDuration","transitionStatus","transitionTimingFunction","React","createElement","Fragment","getTransitionStyles","state","displayName"],"sources":["../../src/Transition/Transition.tsx"],"sourcesContent":["import React from 'react';\nimport { getTransitionStyles } from './get-transition-styles/get-transition-styles';\nimport { useTransition } from './use-transition';\nimport { MantineTransition } from './transitions';\n\nexport interface TransitionProps {\n  /** Predefined transition name or transition styles */\n  transition: MantineTransition;\n\n  /** Transition duration in ms */\n  duration?: number;\n\n  /** Exit transition duration in ms */\n  exitDuration?: number;\n\n  /** Transition timing function, defaults to theme.transitionTimingFunction */\n  timingFunction?: string;\n\n  /** When true, component will be mounted */\n  mounted: boolean;\n\n  /** Render function with transition styles argument */\n  children(styles: React.CSSProperties): React.ReactElement<any, any>;\n\n  /** Calls when exit transition ends */\n  onExited?: () => void;\n\n  /** Calls when exit transition starts */\n  onExit?: () => void;\n\n  /** Calls when enter transition starts */\n  onEnter?: () => void;\n\n  /** Calls when enter transition ends */\n  onEntered?: () => void;\n}\n\nexport function Transition({\n  transition,\n  duration = 250,\n  exitDuration = duration,\n  mounted,\n  children,\n  timingFunction,\n  onExit,\n  onEntered,\n  onEnter,\n  onExited,\n}: TransitionProps) {\n  const { transitionDuration, transitionStatus, transitionTimingFunction } = useTransition({\n    mounted,\n    exitDuration,\n    duration,\n    timingFunction,\n    onExit,\n    onEntered,\n    onEnter,\n    onExited,\n  });\n\n  if (transitionDuration === 0) {\n    return mounted ? <>{children({})}</> : null;\n  }\n\n  return transitionStatus === 'exited' ? null : (\n    <>\n      {children(\n        getTransitionStyles({\n          transition,\n          duration: transitionDuration,\n          state: transitionStatus,\n          timingFunction: transitionTimingFunction,\n        })\n      )}\n    </>\n  );\n}\n\nTransition.displayName = '@mantine/core/Transition';\n"]},"metadata":{},"sourceType":"module"}