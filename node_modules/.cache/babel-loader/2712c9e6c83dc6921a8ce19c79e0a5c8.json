{"ast":null,"code":"import _defineProperty from \"/Users/gabrieldeleon/code/GA-Project-4/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { cloneElement } from 'react';\nimport { isElement } from '@mantine/utils';\nimport { useFocusTrap, useMergedRef } from '@mantine/hooks';\n\nfunction FocusTrap(_ref) {\n  var children = _ref.children,\n      _ref$active = _ref.active,\n      active = _ref$active === void 0 ? true : _ref$active,\n      _ref$refProp = _ref.refProp,\n      refProp = _ref$refProp === void 0 ? \"ref\" : _ref$refProp;\n  var focusTrapRef = useFocusTrap(active);\n  var ref = useMergedRef(focusTrapRef, children == null ? void 0 : children.ref);\n\n  if (!isElement(children)) {\n    return children;\n  }\n\n  return cloneElement(children, _defineProperty({}, refProp, ref));\n}\n\nFocusTrap.displayName = \"@mantine/core/FocusTrap\";\nexport { FocusTrap };","map":{"version":3,"mappings":";;;;;AAGO,SAASA,SAAT,OAIJ;EAAA,IAHDC,QAGC,QAHDA,QAGC;EAAA,uBAFDC,MAEC;EAAA,IAFDA,MAEC,4BAFQ,IAER;EAAA,wBADDC,OACC;EAAA,IADDA,OACC,6BADS,KACT;EACD,IAAMC,YAAY,GAAGC,YAAY,CAACH,MAAD,CAAjC;EACA,IAAMI,GAAG,GAAGC,YAAY,CAACH,YAAD,EAAeH,QAAQ,IAAI,IAAZ,GAAmB,KAAK,CAAxB,GAA4BA,QAAQ,CAACK,GAApD,CAAxB;;EACA,IAAI,CAACE,SAAS,CAACP,QAAD,CAAd,EAA0B;IACxB,OAAOA,QAAP;EACD;;EACD,OAAOQ,YAAY,CAACR,QAAD,sBAAcE,OAAd,EAAwBG,GAAxB,EAAnB;AACD;;AACDN,SAAS,CAACU,WAAV,GAAwB,yBAAxB","names":["FocusTrap","children","active","refProp","focusTrapRef","useFocusTrap","ref","useMergedRef","isElement","cloneElement","displayName"],"sources":["../../src/FocusTrap/FocusTrap.tsx"],"sourcesContent":["import React, { cloneElement } from 'react';\nimport { isElement } from '@mantine/utils';\nimport { useFocusTrap, useMergedRef } from '@mantine/hooks';\n\nexport interface FocusTrapProps {\n  /** Element at which focus should be trapped, should support ref prop */\n  children: any;\n\n  /** Determines whether focus should be trapped within child element */\n  active?: boolean;\n\n  /** Prop that should be used to access component ref */\n  refProp?: string;\n}\n\nexport function FocusTrap({\n  children,\n  active = true,\n  refProp = 'ref',\n}: FocusTrapProps): React.ReactElement {\n  const focusTrapRef = useFocusTrap(active);\n  const ref = useMergedRef(focusTrapRef, children?.ref);\n\n  if (!isElement(children)) {\n    return children;\n  }\n\n  return cloneElement(children, { [refProp]: ref });\n}\n\nFocusTrap.displayName = '@mantine/core/FocusTrap';\n"]},"metadata":{},"sourceType":"module"}